
<codestructure version="2.1.0">
<phptree>
<treenode node="../../shared/code/tce_altauth.php;PHP:PHP Include;1906220914;f14;136;47;136;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_authorization.php;PHP:PHP Include;1017254202;f14;39;53;39;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_functions_authorization.php;PHP:PHP Include;1906220914;f14;44;63;44;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_functions_otp.php;PHP:PHP Include;1906220914;f14;46;53;46;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_functions_session.php;PHP:PHP Include;1906220914;f14;45;57;45;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_functions_test.php;PHP:PHP Include;1906220914;f18;411;58;411;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../code/tce_page_footer.php;PHP:PHP Include;1906220914;f26;352;53;352;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../code/tce_page_header.php;PHP:PHP Include;1906220914;f26;350;53;350;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_authorization.php;PHP:PHP Include;2262461262;f14;46;53;46;;4249328270;f14;42;53;42;;499514537;f14;36;53;36;;3551339026;f14;36;53;36;;2328596304;f14;39;53;39;;187283706;f14;35;53;35;;922189051;f14;35;53;35;;2635646522;f14;35;53;35;;2207704323;f14;38;53;38;;3688425150;f14;41;53;41;;1373008388;f14;41;53;41;;2759840204;f14;35;53;35;;1326526315;f14;36;53;36;;1502610741;f14;37;53;37;;355957563;f14;34;53;34;;3355355036;f14;34;53;34;;1698002233;f14;36;53;36;;1191857742;f14;34;53;34;;844258771;f14;36;53;36;;4036933972;f14;36;53;36;;3774753460;f14;35;53;35;;1702763380;f14;35;53;35;;3427977094;f14;35;53;35;;2547304681;f14;35;53;35;;1785988224;f14;35;53;35;;4263303559;f14;35;53;35;;4174276978;f14;35;53;35;;52393560;f14;35;53;35;;3758281597;f14;35;53;35;;3345691594;f14;35;53;35;;2908525117;f14;34;53;34;;4293121789;f14;38;53;38;;893248032;f14;33;53;33;;1098624880;f14;41;53;41;;3646499777;f14;35;53;35;;4087072189;f14;35;53;35;;4045438985;f14;35;53;35;;4125286022;f14;35;53;35;;2471732202;f14;35;53;35;;107260556;f14;36;53;36;;2343868215;f14;35;53;35;;1480242768;f14;35;53;35;;3263261354;f14;39;53;39;;138083829;f14;38;53;38;;464402802;f14;35;53;35;;904880894;f14;38;53;38;;1334627829;f14;34;53;34;;4181342402;f14;32;53;32;;2310197120;f14;32;53;32;;2343407123;f14;35;53;35;;1311677210;f14;35;53;35;;2098199854;f14;34;53;34;;2483568899;f14;35;53;35;;1387760914;f14;38;53;38;;597653512;f14;34;53;34;;1602994036;f14;34;53;34;;3463225236;f14;33;53;33;;3781793279;f14;36;53;36;;1989053394;f14;36;53;36;;364249499;f14;35;53;35;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_db_connect.php;PHP:PHP Include;3571879028;f14;121;50;121;;3748594207;f14;187;50;187;;2459392330;f14;187;50;187;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_db_dal.php;PHP:PHP Include;271120798;f14;32;46;32;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;file&lt;/b&gt;&#10;Open a connection to a MySQL Server and select a database.&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcexam.shared&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2001-09-02;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_db_dal_mysql.php;PHP:PHP Include;891676233;f39;39;77;39;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_db_dal_mysqli.php;PHP:PHP Include;891676233;f29;36;68;36;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;file&lt;/b&gt;&#10;Database Abstraction layer (DAL).&#10;Loads the Database functions for the selected DATABASE type.&#10;The database type is defined by K_DATABASE_TYPE constant on /shared/config/tce_db_config.php configuration file.&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcexam.shared&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2003-10-12;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_db_dal_oracle.php;PHP:PHP Include;891676233;f30;38;69;38;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_db_dal_postgresql.php;PHP:PHP Include;891676233;f34;37;77;37;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_functions_auth_sql.php;PHP:PHP Include;922189051;f14;44;58;44;;1702763380;f14;43;58;43;;3427977094;f14;44;58;44;;1785988224;f14;41;58;41;;3646499777;f14;36;58;36;;1480242768;f14;41;58;41;;3263261354;f14;45;58;45;;138083829;f14;44;58;44;;4181342402;f14;41;58;41;;2310197120;f14;39;58;39;;2343407123;f14;41;58;41;;1311677210;f14;42;58;42;;2098199854;f14;39;58;39;;597653512;f14;41;58;41;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_functions_authorization.php;PHP:PHP Include;364249499;f14;40;63;40;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_functions_errmsg.php;PHP:PHP Include;4289637660;f14;251;56;251;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Error handlers.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_functions_form.php;PHP:PHP Include;4249328270;f14;48;54;48;;499514537;f14;38;54;38;;3551339026;f14;37;54;37;;187283706;f14;39;54;39;;922189051;f14;40;54;40;;2635646522;f14;39;54;39;;2207704323;f14;49;54;49;;1373008388;f14;45;54;45;;1702763380;f14;39;54;39;;3427977094;f14;40;54;40;;1785988224;f14;39;54;39;;4263303559;f14;40;54;40;;4174276978;f14;40;54;40;;52393560;f14;40;54;40;;3758281597;f14;40;54;40;;3345691594;f14;36;54;36;;2908525117;f14;41;54;41;;4293121789;f14;56;54;56;;2343868215;f14;39;54;39;;1480242768;f14;39;54;39;;3263261354;f14;43;54;43;;138083829;f14;42;54;42;;464402802;f14;36;54;36;;1334627829;f14;41;54;41;;4181342402;f14;38;54;38;;2310197120;f14;36;54;36;;2343407123;f14;39;54;39;;1311677210;f14;39;54;39;;2098199854;f14;38;54;38;;2483568899;f14;40;54;40;;1387760914;f14;42;54;42;;597653512;f14;38;54;38;;3781793279;f14;37;54;37;;364249499;f14;39;54;39;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_functions_general.php;PHP:PHP Include;3571879028;f14;122;57;122;;3748594207;f14;188;57;188;;2459392330;f14;188;57;188;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_functions_menu.php;PHP:PHP Include;4195215752;f14;33;54;33;;497384902;f14;32;54;32;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;file&lt;/b&gt;&#10;Output XHTML unordered list menu.&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcexam.admin&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2010-09-16;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_functions_otp.php;PHP:PHP Include;4249328270;f14;43;53;43;;1334627829;f14;42;53;42;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_functions_session.php;PHP:PHP Include;4286204629;f14;33;57;33;;3912447451;f14;33;57;33;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_functions_statistics.php;PHP:PHP Include;922189051;f14;45;60;45;;3688425150;f14;47;60;47;;3427977094;f14;45;60;45;;1098624880;f14;47;60;47;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_functions_svg_graph.php;PHP:PHP Include;338701216;f14;32;59;32;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;file&lt;/b&gt;&#10;Create an SVG graph for user results.&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcexam.admin&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2012-04-15;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_functions_tcecode.php;PHP:PHP Include;187283706;f14;40;57;40;;922189051;f14;41;57;41;;2635646522;f14;40;57;40;;3688425150;f14;42;57;42;;1502610741;f14;38;57;38;;1702763380;f14;40;57;40;;3427977094;f14;41;57;41;;1785988224;f14;40;57;40;;3345691594;f14;37;57;37;;2908525117;f14;40;57;40;;893248032;f14;34;57;34;;1098624880;f14;42;57;42;;3646499777;f14;37;57;37;;1480242768;f14;40;57;40;;3263261354;f14;44;57;44;;138083829;f14;43;57;43;;464402802;f14;37;57;37;;4181342402;f14;39;57;39;;2310197120;f14;37;57;37;;2343407123;f14;40;57;40;;1311677210;f14;40;57;40;;597653512;f14;39;57;39;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_functions_test.php;PHP:PHP Include;2328596304;f18;44;58;44;;187283706;f14;41;54;41;;922189051;f14;42;54;42;;2635646522;f14;41;54;41;;2207704323;f18;44;58;44;;3688425150;f14;43;54;43;;1502610741;f14;39;54;39;;1698002233;f14;37;54;37;;1702763380;f14;41;54;41;;3427977094;f14;42;54;42;;4293121789;f18;51;58;51;;893248032;f14;35;54;35;;1098624880;f14;43;54;43;;3781793279;f14;38;54;38;;1017254202;f14;45;54;45;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_functions_test_stats.php;PHP:PHP Include;187283706;f14;42;60;42;;922189051;f14;43;60;43;;2635646522;f14;42;60;42;;3688425150;f14;44;60;44;;1502610741;f14;40;60;40;;355957563;f14;35;60;35;;1698002233;f14;38;60;38;;4036933972;f14;37;60;37;;1702763380;f14;42;60;42;;3427977094;f14;43;60;43;;1098624880;f14;44;60;44;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_functions_user_registration.php;PHP:PHP Include;4249328270;f30;191;83;191;;3551339026;f30;83;83;83;;1373008388;f22;79;75;79;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_page_timer.php;PHP:PHP Include;1779684844;f9;39;45;39;;1474660786;f9;39;45;39;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_page_userbar.php;PHP:PHP Include;2657745832;f9;35;47;35;;1417499638;f9;36;47;36;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;file&lt;/b&gt;&#10;Outputs default XHTML page footer.&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcexam.public&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2001-09-02;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_tmx.php;PHP:PHP Include;4289637660;f14;283;43;283;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Use default language.&#10;&lt;b&gt;ignore&lt;/b&gt;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tcpdfex.php;PHP:PHP Include;3688425150;f14;46;43;46;;893248032;f14;38;43;38;;1098624880;f14;46;43;46;;3646499777;f14;39;43;39;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/config/tce_config.php;PHP:PHP Include;3571879028;f14;37;48;37;;3748594207;f14;36;48;36;;2459392330;f14;36;48;36;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/config/tce_db_config.php;PHP:PHP Include;3571879028;f14;120;51;120;;3748594207;f14;186;51;186;;2459392330;f14;186;51;186;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/config/tce_email_config.php;PHP:PHP Include;2366629182;f14;35;54;35;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/config/tce_general_constants.php;PHP:PHP Include;4289637660;f14;83;59;83;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/config/tce_latex.php;PHP:PHP Include;1139764871;f14;27;47;27;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;file&lt;/b&gt;&#10;LaTeX Rendering Class.&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcexam.shared;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/config/tce_paths.php;PHP:PHP Include;4225869042;f14;57;47;57;;4289637660;f14;82;47;82;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/config/tce_pdf.php;PHP:PHP Include;3688425150;f14;45;45;45;;893248032;f14;37;45;37;;1098624880;f14;45;45;45;;3646499777;f14;38;45;38;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/config/tce_user_registration.php;PHP:PHP Include;2262461262;f14;34;59;34;;4249328270;f14;34;59;34;;499514537;f14;37;59;37;;1334627829;f14;35;59;35;;4181342402;f14;33;59;33;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/phpmailer/src/PHPMailer.php;PHP:PHP Include;2366629182;f14;43;54;43;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/phpmailer/src/autoload.php;PHP:PHP Include;2366629182;f14;42;53;42;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/tcpdf/tcpdf_barcodes_2d.php;PHP:PHP Include;2262461262;f30;82;70;82;;1334627829;f18;520;58;520;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../code/tce_class_import_xml.php;PHP:PHP Include;1480242768;f30;54;62;54;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../code/tce_functions_auth_sql.php;PHP:PHP Include;1698002233;f14;40;48;40;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../code/tce_functions_statistics.php;PHP:PHP Include;1502610741;f14;41;50;41;;1698002233;f14;39;50;39;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../code/tce_functions_tcecode_editor.php;PHP:PHP Include;2310197120;f14;38;54;38;;1311677210;f14;41;54;41;;597653512;f14;40;54;40;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../code/tce_functions_upload.php;PHP:PHP Include;3345691594;f18;124;50;124;;2343868215;f26;44;58;44;;1480242768;f18;46;50;46;;464402802;f18;106;50;106;;2310197120;f22;45;54;45;;1311677210;f22;48;54;48;;597653512;f22;47;54;47;;364249499;f18;62;50;62;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../code/tce_functions_user_select.php;PHP:PHP Include;2483568899;f14;41;51;41;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../code/tce_import_custom.php;PHP:PHP Include;1480242768;f30;65;59;65;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../code/tce_page_footer.php;PHP:PHP Include;2262461262;f26;94;53;94;;4249328270;f26;202;53;202;;2328596304;f14;62;41;62;;187283706;f14;393;41;393;;922189051;f14;302;41;302;;2635646522;f14;176;41;176;;1373008388;f18;87;45;87;;2759840204;f14;52;41;52;;1702763380;f14;421;41;421;;3427977094;f14;472;41;472;;2547304681;f14;61;41;61;;1785988224;f18;106;45;106;;4174276978;f14;222;41;222;;3758281597;f14;152;41;152;;4045438985;f14;53;41;53;;4125286022;f14;53;41;53;;2471732202;f14;53;41;53;;2343868215;f14;122;41;122;;1480242768;f14;144;41;144;;3263261354;f14;180;41;180;;138083829;f14;203;41;203;;464402802;f14;356;41;356;;904880894;f22;51;49;51;;1334627829;f14;560;41;560;;4181342402;f14;1442;41;1442;;2310197120;f18;295;45;295;;2343407123;f14;397;41;397;;1311677210;f18;569;45;569;;2098199854;f14;431;41;431;;2483568899;f14;271;41;271;;1387760914;f14;240;41;240;;597653512;f18;559;45;559;;3781793279;f22;57;49;57;;364249499;f14;336;41;336;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../code/tce_page_footer_popup.php;PHP:PHP Include;2207704323;f14;54;47;54;;4263303559;f14;155;47;155;;52393560;f14;124;47;124;;3345691594;f14;400;47;400;;2908525117;f14;51;47;51;;4293121789;f14;62;47;62;;1602994036;f14;39;47;39;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../code/tce_page_header.php;PHP:PHP Include;2262461262;f14;50;41;50;;4249328270;f14;47;41;47;;499514537;f14;39;41;39;;3551339026;f14;38;41;38;;2328596304;f14;40;41;40;;187283706;f14;38;41;38;;2635646522;f14;38;41;38;;1373008388;f14;44;41;44;;2759840204;f14;38;41;38;;1191857742;f14;36;41;36;;2547304681;f14;39;41;39;;1785988224;f14;38;41;38;;4174276978;f14;39;41;39;;3758281597;f14;39;41;39;;4087072189;f14;38;41;38;;4045438985;f14;38;41;38;;4125286022;f14;38;41;38;;2471732202;f14;38;41;38;;2343868215;f14;38;41;38;;1480242768;f14;38;41;38;;464402802;f14;41;41;41;;904880894;f14;41;41;41;;1334627829;f14;39;41;39;;2310197120;f14;35;41;35;;2343407123;f14;38;41;38;;1311677210;f14;38;41;38;;2098199854;f14;37;41;37;;2483568899;f14;38;41;38;;1387760914;f14;183;41;183;;597653512;f14;37;41;37;;3781793279;f22;55;49;55;;364249499;f14;38;41;38;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../code/tce_page_header_popup.php;PHP:PHP Include;2207704323;f14;40;47;40;;4263303559;f14;39;47;39;;52393560;f14;39;47;39;;3345691594;f14;41;47;41;;2908525117;f14;38;47;38;;4293121789;f14;40;47;40;;1602994036;f14;36;47;36;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../config/tce_auth.php;PHP:PHP Include;3571879028;f14;36;36;36;;3748594207;f14;35;36;35;;2459392330;f14;35;36;35;;4195215752;f14;32;36;32;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../config/tce_config.php;PHP:PHP Include;2366629182;f14;33;38;33;;2262461262;f14;32;38;32;;4249328270;f14;32;38;32;;499514537;f14;32;38;32;;3551339026;f14;32;38;32;;2328596304;f14;33;38;33;;187283706;f14;32;38;32;;922189051;f14;32;38;32;;2635646522;f14;32;38;32;;2207704323;f14;33;38;33;;3688425150;f14;40;38;40;;1373008388;f14;32;38;32;;2759840204;f14;32;38;32;;1326526315;f14;34;38;34;;1502610741;f14;36;38;36;;355957563;f14;32;38;32;;3355355036;f14;32;38;32;;1698002233;f14;34;38;34;;1191857742;f14;32;38;32;;844258771;f14;34;38;34;;4036933972;f14;34;38;34;;3774753460;f14;33;38;33;;1702763380;f14;32;38;32;;3427977094;f14;32;38;32;;2547304681;f14;32;38;32;;1785988224;f14;32;38;32;;4263303559;f14;32;38;32;;4174276978;f14;32;38;32;;52393560;f14;32;38;32;;3758281597;f14;32;38;32;;3345691594;f14;32;38;32;;2908525117;f14;32;38;32;;4293121789;f14;33;38;33;;893248032;f14;32;38;32;;1098624880;f14;40;38;40;;3646499777;f14;33;38;33;;4087072189;f14;32;38;32;;4045438985;f14;32;38;32;;4125286022;f14;32;38;32;;2471732202;f14;32;38;32;;4286204629;f14;32;38;32;;107260556;f14;33;38;33;;2343868215;f14;32;38;32;;1480242768;f14;32;38;32;;3263261354;f14;34;38;34;;138083829;f14;33;38;33;;464402802;f14;32;38;32;;904880894;f14;33;38;33;;1334627829;f14;31;38;31;;4181342402;f14;29;38;29;;2310197120;f14;29;38;29;;2343407123;f14;32;38;32;;1311677210;f14;32;38;32;;2098199854;f14;31;38;31;;2483568899;f14;32;38;32;;1387760914;f14;35;38;35;;597653512;f14;31;38;31;;1602994036;f14;32;38;32;;3463225236;f14;31;38;31;;3781793279;f14;31;38;31;;3912447451;f14;32;38;32;;1989053394;f14;33;38;33;;364249499;f14;32;38;32;;1906220914;f14;43;38;43;;1017254202;f14;33;38;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;file&lt;/b&gt;&#10;Main page of TCExam Public Area.&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcexam.public&#10;&lt;b&gt;brief&lt;/b&gt;: TCExam Public Area&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2004-04-20;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../config/theme/;PHP:PHP Include;2657745832;f9;36;25;36;;1417499638;f9;37;25;37;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="AbstractProvider;PHP:NameSpace Use;1147530134;f3;23;50;23;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;kLeague\OAuth2\Client\Provider\AbstractProvider;;l;;n">
</treenode>
<treenode node="AccessToken;PHP:NameSpace Use;1147530134;f3;24;42;24;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;kLeague\OAuth2\Client\Token\AccessToken;;l;;n">
</treenode>
<treenode node="CAS_Exception;PHP:Interface Name;757577651;f0;53;1;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface CAS_Exception&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A root exception interface for all exceptions in phpCAS.&#10;All exceptions thrown in phpCAS should implement this interface to allow them&#10;to be caught as a category by clients. Each phpCAS exception should extend&#10;an appropriate SPL exception class that best fits its type.&#10;For example, an InvalidArgumentException in phpCAS should be defined as&#10;class CAS_InvalidArgumentException&#10;extends InvalidArgumentException&#10;implements CAS_Exception&#10;{ }&#10;This definition allows the CAS_InvalidArgumentException to be caught as either&#10;an InvalidArgumentException or as a CAS_Exception.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_Exception&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,54;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CAS_Languages_LanguageInterface;PHP:Interface Name;2523309558;f0;43;1;93;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface CAS_Languages_LanguageInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Language Interface class for all internationalization files&#10;&lt;b&gt;class&lt;/b&gt;: CAS_Languages_LanguageInterface&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Joachim Fritschi &lt;jfritschi&#10;&lt;b&gt;freenet&lt;/b&gt;: .de&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS&#10;&lt;b&gt;sa&lt;/b&gt;&#10;&lt;b&gt;link&lt;/b&gt;: internalLang Internationalization&#10;&lt;b&gt;endlink&lt;/b&gt;&#10;&lt;b&gt;ingroup&lt;/b&gt;: internalLang;;d0,44;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="getAuthenticationFailed;PHP:Function Name;2523309558;f11;78;45;78;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get authentication failed string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   authentication failed;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;2523309558;f11;57;45;57;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get authentication wanted string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   authentication wanted;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getLogout;PHP:Function Name;2523309558;f11;64;31;64;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get logout string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   logout;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;2523309558;f11;92;43;92;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the service unavailable string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   service unavailable;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;2523309558;f11;71;49;71;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the should have been redirected string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   should habe been redirected;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;2523309558;f11;50;36;50;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the using server string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   using server;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;2523309558;f11;85;48;85;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the your were not authenticated string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   not authenticated;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_PGT_STORAGE_DB_DEFAULT_TABLE;PHP:PHP Word;445965636;f8;29;40;29;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Licensed to Jasig under one or more contributor license&#10;agreements. See the NOTICE file distributed with this work for&#10;additional information regarding copyright ownership.&#10;Jasig licenses this file to you under the Apache License,&#10;Version 2.0 (the &quot;License&quot;);s you may not use this file except in&#10;compliance with the License. You may obtain a copy of the License at:&#10;http://www.apache.org/licenses/LICENSE-2.0&#10;Unless required by applicable law or agreed to in writing, software&#10;distributed under the License is distributed on an &quot;AS IS&quot; BASIS,&#10;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#10;See the License for the specific language governing permissions and&#10;limitations under the License.&#10;PHP Version 5&#10;&lt;b&gt;file&lt;/b&gt;: CAS/PGTStorage/Db.php&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Daniel Frett &lt;daniel.frett&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CAS_PGT_STORAGE_FILE_DEFAULT_PATH;PHP:PHP Word;3200056416;f8;154;41;154;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default path used when storing PGT&apos;s to file;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CAS_ProxiedService;PHP:Interface Name;635199484;f0;46;1;67;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface CAS_ProxiedService&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This interface defines methods that allow proxy-authenticated service handlers&#10;to interact with phpCAS.&#10;Proxy service handlers must implement this interface as well as call&#10;phpCAS::initializeProxiedService($this) at some point in their implementation.&#10;While not required, proxy-authenticated service handlers are encouraged to&#10;implement the CAS_ProxiedService_Testable interface to facilitate unit testing.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_ProxiedService&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,47;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="getServiceUrl;PHP:Function Name;635199484;f11;54;35;54;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer a service identifier (URL) for whom we should fetch a proxy ticket.&#10;&lt;b&gt;throws&lt;/b&gt;: Exception If no service url is available.;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="setProxyTicket;PHP:Function Name;635199484;f11;66;48;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Register a proxy ticket with the ProxiedService that it can use when&#10;making requests.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException If the $proxyTicket is invalid.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after a proxy ticket has&#10;already been initialized/set.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$proxyTicket&lt;/b&gt;: Proxy ticket string;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l $proxyTicket;;p;;x;;n">
</treenode>
</treenode>
<treenode node="CAS_ProxiedService_Http;PHP:Interface Name;2372034184;f0;40;1;86;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface CAS_ProxiedService_Http&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This interface defines methods that clients should use for configuring, sending,&#10;and receiving proxied HTTP requests.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_ProxiedService_Http&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,41;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="getResponseBody;PHP:Function Name;2372034184;f11;85;37;85;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer the body of response.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called before the Request has been sent.;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getResponseHeaders;PHP:Function Name;2372034184;f11;77;40;77;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer the headers of the response.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called before the Request has been sent.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An array of header strings.;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="send;PHP:Function Name;2372034184;f11;65;26;65;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Perform the request.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called multiple times.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   TRUE on success, FALSE on failure.;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="setUrl;PHP:Function Name;2372034184;f11;53;32;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the URL of the Request&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the Request has been sent.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: Url to set;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
</treenode>
<treenode node="CAS_ProxiedService_Testable;PHP:Interface Name;2349260716;f0;55;1;70;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface CAS_ProxiedService_Testable&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This interface defines methods that allow proxy-authenticated service handlers&#10;to be tested in unit tests.&#10;Classes implementing this interface SHOULD store the CAS_Client passed and&#10;initialize themselves with that client rather than via the static phpCAS&#10;method. For example:&#10;/ **&#10;* Fetch our proxy ticket.&#10;* /&#10;protected function initializeProxyTicket() {&#10;// Allow usage of a particular CAS_Client for unit testing.&#10;if (is_null($this-&gt;casClient))&#10;phpCAS::initializeProxiedService($this);s&#10;else&#10;$this-&gt;casClient-&gt;initializeProxiedService($this);s&#10;}&#10;&lt;b&gt;class&lt;/b&gt;: CAS_ProxiedService_Testabel&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,56;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="setCasClient;PHP:Function Name;2349260716;f11;69;55;69;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Use a particular CAS_Client-&gt;initializeProxiedService() rather than the&#10;static phpCAS::initializeProxiedService().&#10;This method should not be called in standard operation, but is needed for unit&#10;testing.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after a proxy ticket has&#10;already been initialized/set.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    CAS_Client &lt;b&gt;$casClient&lt;/b&gt;: Cas client object;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l $casClient;;pCAS_Client;;x;;n">
</treenode>
</treenode>
<treenode node="CAS_ProxyChain_Interface;PHP:Interface Name;1412728220;f0;40;1;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface CAS_ProxyChain_Interface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    An interface for classes that define a list of allowed proxies in front of&#10;the current application.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_ProxyChain_Interface&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,41;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="matches;PHP:Function Name;1412728220;f11;49;40;49;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Match a list of proxies.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$list&lt;/b&gt;: The list of proxies in front of this service.;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l $list;;p;;x;;n">
</treenode>
</treenode>
<treenode node="CAS_Request_MultiRequestInterface;PHP:Interface Name;3140721772;f0;41;1;80;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface CAS_Request_MultiRequestInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This interface defines a class library for performing multiple web requests&#10;in batches. Implementations of this interface may perform requests serially&#10;or in parallel.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_Request_MultiRequestInterface&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,42;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="addRequest;PHP:Function Name;3140721772;f11;59;69;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add a new Request to this batch.&#10;Note, implementations will likely restrict requests to their own concrete&#10;class hierarchy.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the Request has been&#10;sent.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_InvalidArgumentException If passed a Request of the wrong&#10;implmentation.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    CAS_Request_RequestInterface &lt;b&gt;$request&lt;/b&gt;: request interface;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l $request;;pCAS_Request_RequestInterface;;x;;n">
</treenode>
<treenode node="getNumRequests;PHP:Function Name;3140721772;f11;66;36;66;;;;vpos;;v;;anumber;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Retrieve the number of requests added to this batch.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of request elements;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="send;PHP:Function Name;3140721772;f11;79;26;79;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Perform the request. After sending, all requests will have their&#10;responses poulated.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called multiple times.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   TRUE on success, FALSE on failure.;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_Request_RequestInterface;PHP:Interface Name;338342653;f0;39;1;168;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface CAS_Request_RequestInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This interface defines a class library for performing web requests.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_Request_RequestInterface&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,40;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="addCookie;PHP:Function Name;338342653;f11;62;44;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add a cookie to the request.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the Request has been sent.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: name of cookie&#10;    string &lt;b&gt;$value&lt;/b&gt;: value of cookie;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l $name;;p $value;;p;;x;;x;;n">
</treenode>
<treenode node="addCookies;PHP:Function Name;338342653;f11;73;46;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add an array of cookies to the request.&#10;The cookie array is of the form&#10;array(&apos;cookie_name&apos; =&gt; &apos;cookie_value&apos;, &apos;cookie_name2&apos; =&gt; cookie_value2&apos;)&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the Request has been sent.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$cookies&lt;/b&gt;: cookies to add;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l $cookies;;p;;x;;n">
</treenode>
<treenode node="addHeader;PHP:Function Name;338342653;f11;82;38;82;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add a header string to the request.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the Request has been sent.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$header&lt;/b&gt;: header to add;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l $header;;p;;x;;n">
</treenode>
<treenode node="addHeaders;PHP:Function Name;338342653;f11;91;46;91;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add an array of header strings to the request.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the Request has been sent.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$headers&lt;/b&gt;: headers to add;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l $headers;;p;;x;;n">
</treenode>
<treenode node="getErrorMessage;PHP:Function Name;338342653;f11;167;37;167;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer a message describing any errors if the request failed.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called before the Request has been sent.;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getResponseBody;PHP:Function Name;338342653;f11;159;37;159;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer the body of response.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called before the Request has been sent.;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getResponseHeaders;PHP:Function Name;338342653;f11;143;40;143;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer the headers of the response.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called before the Request has been sent.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An array of header strings.;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getResponseStatusCode;PHP:Function Name;338342653;f11;151;43;151;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer HTTP status code of the response&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called before the Request has been sent.;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="makePost;PHP:Function Name;338342653;f11;98;30;98;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Make the request a POST request rather than the default GET request.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the Request has been sent.;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="send;PHP:Function Name;338342653;f11;131;26;131;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Perform the request.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called multiple times.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   TRUE on success, FALSE on failure.;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="setPostBody;PHP:Function Name;338342653;f11;107;38;107;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add a POST body to the request&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the Request has been sent.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$body&lt;/b&gt;: body to add;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l $body;;p;;x;;n">
</treenode>
<treenode node="setSslCaCert;PHP:Function Name;338342653;f11;117;66;117;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Specify the path to an SSL CA certificate to validate the server with.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the Request has been sent.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$caCertPath&lt;/b&gt;: path to cert file&#10;    boolean &lt;b&gt;$validate_cn&lt;/b&gt;: validate CN of SSL certificate;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l $caCertPath;;p $validate_cn;;p;;x;;x;;n">
</treenode>
<treenode node="setUrl;PHP:Function Name;338342653;f11;52;32;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the URL of the Request&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the Request has been sent.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: url to set;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
</treenode>
<treenode node="CAS_VERSION_1_0;PHP:PHP Word;3200056416;f8;73;23;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    CAS version 1.0;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CAS_VERSION_2_0;PHP:PHP Word;3200056416;f8;77;23;77;;;;vpos;;v;;a;;r&apos;2.0&apos;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CAS_VERSION_3_0;PHP:PHP Word;3200056416;f8;81;23;81;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    CAS version 3.0;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="DATAMATRIXDEFS;PHP:PHP Word;3233793924;f9;51;23;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Indicate that definitions for this class are set;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="DEFAULT_DEBUG_DIR;PHP:PHP Word;3200056416;f8;264;25;264;;;;vpos;;v;;a;;rgettmpdir(;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="DEFAULT_ERROR;PHP:PHP Word;3200056416;f8;141;21;141;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    SAML Attributes;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ENC_ASCII;PHP:PHP Word;3233793924;f8;63;17;63;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ASCII encoding: ASCII character 0 to 127 (1 byte per CW);;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ENC_ASCII_EXT;PHP:PHP Word;3233793924;f8;93;21;93;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ASCII extended encoding: ASCII character 128 to 255 (1/2 byte per CW);;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ENC_ASCII_NUM;PHP:PHP Word;3233793924;f8;98;21;98;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ASCII number encoding: ASCII digits (2 bytes per CW);;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ENC_BASE256;PHP:PHP Word;3233793924;f8;88;19;88;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    BASE 256 encoding: ASCII character 0 to 255 (1 byte per CW);;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ENC_C40;PHP:PHP Word;3233793924;f8;68;15;68;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    C40 encoding: Upper-case alphanumeric (3/2 bytes per CW);;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ENC_EDF;PHP:PHP Word;3233793924;f8;83;15;83;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    EDIFACT encoding: ASCII character 32 to 94 (4/3 bytes per CW);;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ENC_TXT;PHP:PHP Word;3233793924;f8;73;15;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    TEXT encoding: Lower-case alphanumeric (3/2 bytes per CW);;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ENC_X12;PHP:PHP Word;3233793924;f8;78;15;78;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    X12 encoding: ANSI X12 (3/2 byte per CW);;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="E_USER_DEPRECATED;PHP:PHP Word;3200056416;f12;48;29;48;;;;vpos;;v;;a;;rE_USER_NOTICE;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="Google;PHP:NameSpace Use;718930949;f3;39;40;39;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;kLeague\OAuth2\Client\Provider\Google;;l;;n">
</treenode>
<treenode node="HEAD_MAGNIFICATION;PHP:PHP Word;4221252971;f9;207;27;207;;1824749412;f8;144;26;144;;;;vpos;;v;;a;;r1.1;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_ADMIN_LINK;PHP:PHP Word;2689786526;f8;77;20;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to display a link for administration area;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_ADMIN_THEME;PHP:PHP Word;3748594207;f8;96;21;96;;2459392330;f8;96;21;96;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Theme for the admin area;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_ALLOWED_ERROR_TAGS;PHP:PHP Word;1674183291;f8;39;28;39;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    HTML tags that are allowed in an error message.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_ALLOWED_TCPDF_TAGS;PHP:PHP Word;4221252971;f9;231;29;231;;1824749412;f8;178;28;178;;;;vpos;;v;;a;;r&apos;&apos;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_ALLOWED_UPLOAD_EXTENSIONS;PHP:PHP Word;3748594207;f8;59;35;59;;2459392330;f8;59;35;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    List of allowed file types for upload (remove all extensions to disable upload).&#10;FOR SERVER SECURITY DO NOT ADD EXECUTABLE FILE TYPES HERE;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_ANSWER_TEXTAREA_COLS;PHP:PHP Word;4289637660;f8;118;30;118;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Number of columns for answer textarea.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_ANSWER_TEXTAREA_ROWS;PHP:PHP Word;4289637660;f8;123;30;123;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Number of rows for answer textarea.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_ADMINISTRATOR;PHP:PHP Word;4064438885;f8;41;28;41;;3441021968;f8;41;28;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Administrator level.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_ADMIN_ANSWERS;PHP:PHP Word;4064438885;f8;111;28;111;;3441021968;f8;111;28;111;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to access &quot;answer editor&quot;.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_ADMIN_DIRS;PHP:PHP Word;4064438885;f8;166;25;166;;3441021968;f8;166;25;166;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to create and delete directories.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_ADMIN_FILEMANAGER;PHP:PHP Word;4064438885;f8;161;32;161;;3441021968;f8;161;32;161;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to access file manager for multimedia files.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_ADMIN_GROUPS;PHP:PHP Word;4064438885;f8;76;27;76;;3441021968;f8;76;27;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to access &quot;group editor&quot;.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_ADMIN_IMPORT;PHP:PHP Word;4064438885;f8;146;27;146;;3441021968;f8;146;27;146;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to import questions.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_ADMIN_INFO;PHP:PHP Word;4064438885;f8;121;25;121;;3441021968;f8;121;25;121;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to access &quot;TCExam information&quot;.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_ADMIN_MODULES;PHP:PHP Word;4064438885;f8;96;28;96;;3441021968;f8;96;28;96;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to access &quot;module editor&quot;.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_ADMIN_OMR_IMPORT;PHP:PHP Word;4064438885;f8;151;31;151;;3441021968;f8;151;31;151;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to import OMR answers.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_ADMIN_ONLINE_USERS;PHP:PHP Word;4064438885;f8;126;33;126;;3441021968;f8;126;33;126;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to display online users.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_ADMIN_QUESTIONS;PHP:PHP Word;4064438885;f8;106;30;106;;3441021968;f8;106;30;106;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to access &quot;question editor&quot;.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_ADMIN_RATING;PHP:PHP Word;4064438885;f8;136;27;136;;3441021968;f8;136;27;136;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to manually rate free text answers.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_ADMIN_RESULTS;PHP:PHP Word;4064438885;f8;141;28;141;;3441021968;f8;141;28;141;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to display results.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_ADMIN_SSLCERT;PHP:PHP Word;4064438885;f8;181;28;181;;3441021968;f8;181;28;181;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to edit SSL certificates.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_ADMIN_SUBJECTS;PHP:PHP Word;4064438885;f8;101;29;101;;3441021968;f8;101;29;101;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to access &quot;subject editor&quot;.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_ADMIN_TCECODE;PHP:PHP Word;4064438885;f8;91;28;91;;3441021968;f8;91;28;91;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to access &quot;tcecode editor&quot;.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_ADMIN_TESTS;PHP:PHP Word;4064438885;f8;116;26;116;;3441021968;f8;116;26;116;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to access &quot;test editor&quot;.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_ADMIN_UPLOAD_IMAGES;PHP:PHP Word;4064438885;f8;131;34;131;;3441021968;f8;131;34;131;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to upload images.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_ADMIN_USERS;PHP:PHP Word;4064438885;f8;56;26;56;;3441021968;f8;56;26;56;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to access &quot;user editor&quot;.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_BACKUP;PHP:PHP Word;4064438885;f8;156;21;156;;3441021968;f8;156;21;156;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to import questions.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_DELETE_GROUPS;PHP:PHP Word;4064438885;f8;81;28;81;;3441021968;f8;81;28;81;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to delete user groups.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_DELETE_MEDIAFILE;PHP:PHP Word;4064438885;f8;171;31;171;;3441021968;f8;171;31;171;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to delete multimedia files.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_DELETE_USERS;PHP:PHP Word;4064438885;f8;61;27;61;;3441021968;f8;61;27;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to delete users.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_EXPORT_USERS;PHP:PHP Word;4064438885;f8;66;27;66;;3441021968;f8;66;27;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to export users.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_IMPORT_USERS;PHP:PHP Word;4064438885;f8;71;27;71;;3441021968;f8;71;27;71;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to import users.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_INDEX;PHP:PHP Word;4064438885;f8;51;20;51;;3441021968;f8;51;20;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to access index page.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_MOVE_GROUPS;PHP:PHP Word;4064438885;f8;86;26;86;;3441021968;f8;86;26;86;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to move users from one group to another.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_OPERATOR;PHP:PHP Word;4064438885;f8;46;23;46;;3441021968;f8;46;23;46;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Operator level.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_PAGE_USER;PHP:PHP Word;2689786526;f8;62;24;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to access user page submenu;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_PUBLIC_INDEX;PHP:PHP Word;2689786526;f8;42;27;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to access index page.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_PUBLIC_TEST_EXECUTE;PHP:PHP Word;2689786526;f8;47;34;47;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to execute a test;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_PUBLIC_TEST_INFO;PHP:PHP Word;2689786526;f8;52;31;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to view test general information;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_PUBLIC_TEST_RESULTS;PHP:PHP Word;2689786526;f8;57;34;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to view test results;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_RENAME_MEDIAFILE;PHP:PHP Word;4064438885;f8;176;31;176;;3441021968;f8;176;31;176;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to rename multimedia files.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_SSLIDS;PHP:PHP Word;4064438885;f8;195;21;195;;3441021968;f8;195;21;195;;2689786526;f8;91;21;91;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Comma separated lit of SSL certificates IDs required to&#10;access pages with K_AUTH_SSL_LEVEL level or more.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_SSL_LEVEL;PHP:PHP Word;4064438885;f8;189;24;189;;3441021968;f8;189;24;189;;2689786526;f8;85;24;85;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Minimum page level for which a valid client SSL certificate is required.&#10;Use false or a level above 10 to disable the control.&#10;Use 0 to enable for all area.&#10;Use 10 to enable just for the ADMIN pages.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_USER_CHANGE_EMAIL;PHP:PHP Word;2689786526;f8;67;32;67;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to change email;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AUTH_USER_CHANGE_PASSWORD;PHP:PHP Word;2689786526;f8;72;35;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Required user&apos;s level to change password;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AVAILABLE_FONTS;PHP:PHP Word;3748594207;f8;168;25;168;;2459392330;f8;168;25;168;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines a serialized array of available fonts for PDF.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_AVAILABLE_LANGUAGES;PHP:PHP Word;4289637660;f8;50;29;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines a serialized array of available languages.&#10;Each language is indexed using a 2-letters code (ISO 639).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_BLANK_IMAGE;PHP:PHP Word;4221252971;f10;127;23;127;;3868754208;f8;123;21;123;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Full path to a blank image.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_BRUTE_FORCE_DELAY_RATIO;PHP:PHP Word;4289637660;f8;93;33;93;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Ratio at which the delay will be increased after every failed login attempt.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_CAS_ENABLED;PHP:PHP Word;816875783;f8;38;21;38;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true enable CAS;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_CAS_HOST;PHP:PHP Word;816875783;f8;49;18;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    CAS server hostname.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_CAS_PATH;PHP:PHP Word;816875783;f8;63;18;63;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The location on the webserver where the CAS application is hosted.&#10;Some setups don&apos;t place the CAS application in the webserver&apos;s root&#10;directory and we can specify where to find the CAS application.&#10;Default is &apos;&apos;.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_CAS_PORT;PHP:PHP Word;816875783;f8;55;18;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The port to connect to.&#10;Defaults to 443;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_CAS_USER_GROUP_ID;PHP:PHP Word;816875783;f8;75;27;75;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default user group ID&#10;This is the TCExam group ID to which the CAS accounts belongs.&#10;You can also set 0 for all available groups or a string containing a comma-separated list of group IDs.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_CAS_USER_LEVEL;PHP:PHP Word;816875783;f8;68;24;68;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default user level;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_CAS_VERSION;PHP:PHP Word;816875783;f8;44;21;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Version of CAS protocol to use.&#10;Defaults to CAS_VERSION_2_0;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_CELL_HEIGHT_RATIO;PHP:PHP Word;4221252971;f9;211;28;211;;1824749412;f8;149;27;149;;;;vpos;;v;;a;;r1.25;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_CHECK_SESSION_FINGERPRINT;PHP:PHP Word;4289637660;f8;170;35;170;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true, check for possible session hijacking (set to false if you have login problems).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_CLOCK_IN_UTC;PHP:PHP Word;3748594207;f8;111;22;111;;2459392330;f8;111;22;111;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true display admin clock in UTC (GMT).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_COOKIE_DOMAIN;PHP:PHP Word;4289637660;f8;177;23;177;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Cookie domain.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_COOKIE_EXPIRE;PHP:PHP Word;4289637660;f8;192;23;192;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Expiration time for cookies.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_COOKIE_PATH;PHP:PHP Word;4289637660;f8;182;21;182;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Cookie path.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_COOKIE_SECURE;PHP:PHP Word;4289637660;f8;187;23;187;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true use secure cookies.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_CURLOPTS;PHP:PHP Word;4221252971;f9;244;19;244;;;;vpos;;v;;a;;rarray(;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_CUSTOM_AUTH_BASIC_PASSWORD_HASH;PHP:PHP Word;101771785;f8;13;41;13;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Custom user&apos;s Password hash generated with https://www.php.net/manual/en/function.crypt.php;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_CUSTOM_AUTH_BASIC_USERNAME;PHP:PHP Word;101771785;f8;8;36;8;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Custom user name.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_CUSTOM_AUTH_BASIC_USER_GROUP_ID;PHP:PHP Word;101771785;f8;23;41;23;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Custom user group ID.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_CUSTOM_AUTH_BASIC_USER_LEVEL;PHP:PHP Word;101771785;f8;18;38;18;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Custom user level.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_CUSTOM_AUTH_METHODS;PHP:PHP Word;4289637660;f8;342;29;342;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Lisf of enabled custom authentication methods.&#10;Add your custom authentication methods here.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_DATABASE_HOST;PHP:PHP Word;1487459341;f8;37;23;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    database Host name (eg: localhost);;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_DATABASE_NAME;PHP:PHP Word;1487459341;f8;51;23;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    database name (TCExam);;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_DATABASE_PORT;PHP:PHP Word;1487459341;f8;46;23;46;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    database port (eg: 3306, 5432, 1521)&#10;NOTE: For MYSQL database type, set this constant to NULL to be able to use the MySQL socket path defined by the&#10;mysqli.default_socket PHP value. For example, in Apache:&#10;php_value mysqli.default_socket &quot;/path/to/mysql.sock&quot;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_DATABASE_TYPE;PHP:PHP Word;1487459341;f8;32;23;32;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    database type (MYSQL, POSTGRESQL, ORACLE);;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_DATABASE_USER_NAME;PHP:PHP Word;1487459341;f8;56;28;56;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    database user name;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_DATABASE_USER_PASSWORD;PHP:PHP Word;1487459341;f8;61;32;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    database user password;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_DIGSIG_CERTIFICATE;PHP:PHP Word;1824749412;f8;197;28;197;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Signing certificate (string or filename prefixed with &apos;file://&apos;).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_DIGSIG_CERT_TYPE;PHP:PHP Word;1824749412;f8;221;26;221;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The access permissions granted for this document.&#10;Valid values shall be:&#10;1 = No changes to the document shall be permitted;s any change to the document shall invalidate the signature;s&#10;2 = Permitted changes shall be filling in forms, instantiating page templates, and signing;s other changes shall invalidate the signature;s&#10;3 = Permitted changes shall be the same as for 2, as well as annotation creation, deletion, and modification;s other changes shall invalidate the signature.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_DIGSIG_CONTACT;PHP:PHP Word;1824749412;f8;241;24;241;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Information provided by the signer to enable a recipient to contact the signer to verify the signature;s for example, a phone number or email address.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_DIGSIG_ENABLE;PHP:PHP Word;1824749412;f8;192;23;192;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true digitally sign PDF documents.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_DIGSIG_EXTRA_CERTS;PHP:PHP Word;1824749412;f8;212;28;212;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Name of a file containing a bunch of extra certificates to include in the signature which can for example be used to help the recipient to verify the certificate that you used.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_DIGSIG_LOCATION;PHP:PHP Word;1824749412;f8;231;25;231;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The CPU host name or physical location of the signing.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_DIGSIG_NAME;PHP:PHP Word;1824749412;f8;226;21;226;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The name of the person or authority signing the document.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_DIGSIG_PASSWORD;PHP:PHP Word;1824749412;f8;207;25;207;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Password for private key.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_DIGSIG_PRIVATE_KEY;PHP:PHP Word;1824749412;f8;202;28;202;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Private key (string or filename prefixed with &apos;file://&apos;).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_DIGSIG_REASON;PHP:PHP Word;1824749412;f8;236;23;236;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The reason for the signing, such as ( I agree ...).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_DISPLAY_PDFTEXT_BUTTON;PHP:PHP Word;3748594207;f8;121;32;121;;2459392330;f8;121;32;121;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true display an additional button to print only the TEXT answers on all users&apos; results.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_DISPLAY_TEST_DESCRIPTION;PHP:PHP Word;4289637660;f8;138;34;138;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true display test description before executing the test.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_DOWNLOAD_BACKUPS;PHP:PHP Word;3748594207;f8;138;26;138;;2459392330;f8;138;26;138;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true enable the backup download.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_EMAIL_RE_PATTERN;PHP:PHP Word;1957715841;f8;62;26;62;;;;vpos;;v;;a;;r&apos;^([a-zA-Z0-9_\.\-\+\%]+)@([a-zA-Z0-9\.\-]+)$&apos;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_ENABLE_ANSWER_EXPLANATION;PHP:PHP Word;4289637660;f8;133;35;133;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true enable explanation field for answers.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_ENABLE_CUSTOM_EXPORT;PHP:PHP Word;3748594207;f8;133;30;133;;2459392330;f8;133;30;133;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Name of the button to export results in custom format (file: admin/code/tce_export_custom.php).&#10;Set this constant to empty to disable this feature (or if you haven&apos;t set tce_import_custom.php);;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_ENABLE_CUSTOM_IMPORT;PHP:PHP Word;3748594207;f8;127;30;127;;2459392330;f8;127;30;127;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Name of the option to import questions using a custom format (file: admin/code/tce_import_custom.php).&#10;Set this constant to empty to disable this feature (or if you haven&apos;t set tce_import_custom.php);;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_ENABLE_JSERRORS;PHP:PHP Word;4289637660;f8;230;25;230;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true display messages and errors on Javascript popup window.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_ENABLE_PUBLIC_PDF;PHP:PHP Word;3571879028;f8;111;27;111;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Enable PDF results on public area.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_ENABLE_QUESTION_EXPLANATION;PHP:PHP Word;4289637660;f8;128;37;128;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true enable explanation field for questions.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_ENABLE_VIRTUAL_KEYBOARD;PHP:PHP Word;4289637660;f8;103;33;103;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true enable virtual keyboard on some textarea fields.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_ERROR_TYPES;PHP:PHP Word;4289637660;f8;219;21;219;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Define error reporting types for debug.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_EXTEND_TIME_MINUTES;PHP:PHP Word;4289637660;f8;242;29;242;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default minutes used to extend test duration.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_HIDE_EXPIRED_TESTS;PHP:PHP Word;3571879028;f8;116;28;116;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true hide the expired tests from index table.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_HTTPBASIC_ENABLED;PHP:PHP Word;2146419124;f8;40;27;40;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true trust HTTP Basic Auth;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_HTTPBASIC_USER_GROUP_ID;PHP:PHP Word;2146419124;f8;52;33;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default user group ID&#10;This is the TCExam group id to which the accounts belong.&#10;You can also set 0 for all available groups or a string containing a comma-separated list of group IDs.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_HTTPBASIC_USER_LEVEL;PHP:PHP Word;2146419124;f8;45;30;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default user level;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_KEY_SECURITY;PHP:PHP Word;3525555018;f8;106;22;106;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    String used for security feature, do not alter.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LANGUAGE;PHP:PHP Word;4289637660;f8;39;18;39;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    2-letters code for default language.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LANGUAGE_SELECTOR;PHP:PHP Word;4289637660;f8;44;27;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true, display a language selector.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LATEX_CLASS;PHP:PHP Word;4225869042;f8;107;21;107;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    LaTeX class (article).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LATEX_FONT_SIZE;PHP:PHP Word;4225869042;f8;102;25;102;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Font size (10).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LATEX_FORMULA_DENSITY;PHP:PHP Word;4225869042;f8;82;31;82;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formula density used by ImageMagick (120).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LATEX_IMG_FORMAT;PHP:PHP Word;4225869042;f8;117;26;117;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Image format (png).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LATEX_IMG_PREFIX;PHP:PHP Word;4225869042;f8;112;26;112;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Filename prefix for chached images (latex_).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LATEX_MAX_HEIGHT;PHP:PHP Word;4225869042;f8;92;26;92;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Image height limit in pixels (500).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LATEX_MAX_LENGHT;PHP:PHP Word;4225869042;f8;97;26;97;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Size limit for input string (500).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LATEX_MAX_WIDTH;PHP:PHP Word;4225869042;f8;87;25;87;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Image width limit in pixels (500).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LATEX_PATH_CONVERT;PHP:PHP Word;4225869042;f8;77;28;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Path to ImageMagick convert (/usr/bin/convert).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LATEX_PATH_PICTURE;PHP:PHP Word;4225869042;f8;62;28;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Absolute path to images directory.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LATEX_PATH_PICTURE_HTTPD;PHP:PHP Word;4225869042;f8;67;34;67;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    relative path to images directory.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LATEX_PDFLATEX;PHP:PHP Word;4225869042;f8;72;24;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Path to PDFLATEX (/usr/bin/pdflatex).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LDAP_BASE_DN;PHP:PHP Word;4252467727;f8;67;22;67;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The base DN for the directory.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LDAP_ENABLED;PHP:PHP Word;4252467727;f8;35;22;35;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true enable LDAP.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LDAP_FILTER;PHP:PHP Word;4252467727;f8;72;21;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The search filter can be simple or advanced, using boolean operators in the format described in the LDAP documentation. Use &quot;#USERNAME#&quot; as a placeholder for the username passed by login form. For W2K3 use: &quot;(sAMAccountName=#USERNAME#)&quot;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LDAP_HOST;PHP:PHP Word;4252467727;f8;40;19;40;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    LDAP hostname. If you are using OpenLDAP 2.x.x you can specify a URL instead of the hostname. To use LDAP with SSL, compile OpenLDAP 2.x.x with SSL support, configure PHP with SSL, and set this parameter as ldaps://hostname/.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LDAP_PORT;PHP:PHP Word;4252467727;f8;45;19;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The port to connect to. Not used when using URLs.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LDAP_PROTOCOL_VERSION;PHP:PHP Word;4252467727;f8;50;31;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    LDAP protocol version.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LDAP_ROOT_DN;PHP:PHP Word;4252467727;f8;56;22;56;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The DN for the ROOT Account&#10;Set to null for anonymous LDAP binding;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LDAP_ROOT_PASS;PHP:PHP Word;4252467727;f8;62;24;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The password for the ROOT Account&#10;Set to null for anonymous LDAP binding;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LDAP_USER_GROUP_ID;PHP:PHP Word;4252467727;f8;102;28;102;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default user group ID.&#10;This is the TCExam group id to which the LDAP accounts belongs.&#10;You can also set 0 for all available groups or a string containing a comma-separated list of group IDs.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LDAP_USER_LEVEL;PHP:PHP Word;4252467727;f8;95;25;95;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default user level;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LDAP_UTF8;PHP:PHP Word;4252467727;f8;90;19;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set to true if LDAP uses UTF-8 encoding.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_LOGOUT_URL;PHP:PHP Word;4289637660;f8;211;20;211;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    URL to be redirected at logout (leave empty for default).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_MAIN_PAGE;PHP:PHP Word;3571879028;f8;106;19;106;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Main page (homepage).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_MAX_MEMORY_LIMIT;PHP:PHP Word;3571879028;f8;101;26;101;;3748594207;f8;43;26;43;;2459392330;f8;43;26;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Max memory limit for a PHP script.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_MAX_ROWS_PER_PAGE;PHP:PHP Word;3571879028;f8;91;27;91;;3748594207;f8;48;27;48;;2459392330;f8;48;27;48;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Max number of rows to display in tables.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_MAX_TESTS_DAY;PHP:PHP Word;3525555018;f8;50;23;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Maximum number of tests per day (last 24 hours).&#10;false = unlimited;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_MAX_TESTS_MONTH;PHP:PHP Word;3525555018;f8;44;25;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Maximum number of tests per month (last 30 days).&#10;false = unlimited;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_MAX_TESTS_YEAR;PHP:PHP Word;3525555018;f8;38;24;38;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Maximum number of tests per year (last 365 days).&#10;false = unlimited;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_MAX_UPLOAD_SIZE;PHP:PHP Word;3571879028;f8;96;25;96;;3748594207;f8;53;25;53;;2459392330;f8;53;25;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Max file size to be uploaded [bytes].;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_MYSQL_QA_BIN_UNIQUITY;PHP:PHP Word;3748594207;f8;143;31;143;;2459392330;f8;143;31;143;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true check the unicity of question and answer descriptions using utf8_bin collation when using MySQL.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_NEWLINE;PHP:PHP Word;3525555018;f8;66;17;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    New line character.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_OMR_PATH_ZBARIMG;PHP:PHP Word;3748594207;f8;163;26;163;;2459392330;f8;163;26;163;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Path to zbarimg executable (/usr/bin/zbarimg).&#10;This application is required to decode barcodes on scanned offline test pages.&#10;For installation instructions: http://zbar.sourceforge.net/&#10;On Debian/Ubuntu you can easily install zbarimg using the following command:&#10;&quot;sudo apt-get install zbar-tools&quot;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_OTP_LOGIN;PHP:PHP Word;4289637660;f8;88;19;88;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true enable One-Time-Password authentication on login.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_PASSWORD_RESET;PHP:PHP Word;4289637660;f8;206;24;206;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true enable password reset feature.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_PATH_BACKUP;PHP:PHP Word;3868754208;f9;88;22;88;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Full path to backup directory.&#10;Please protect this directory with extra authentication to restrict access.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_PATH_CACHE;PHP:PHP Word;4221252971;f10;123;22;123;;3868754208;f8;72;20;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Full path to cache directory.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_PATH_FONTS;PHP:PHP Word;4221252971;f10;75;22;75;;3868754208;f8;93;20;93;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Full path to fonts directory.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_PATH_HOST;PHP:PHP Word;3868754208;f8;33;19;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Host URL (e.g.: &quot;http://www.yoursite.com&quot;).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_PATH_IMAGES;PHP:PHP Word;4221252971;f12;96;25;96;;3868754208;f8;113;21;113;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Relative path to images directory.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_PATH_JSCRIPTS;PHP:PHP Word;3868754208;f8;103;23;103;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Relative path to javascript directory.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_PATH_LANG_CACHE;PHP:PHP Word;3868754208;f8;82;25;82;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Full path to cache directory used for language files.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_PATH_MAIN;PHP:PHP Word;4221252971;f10;71;21;71;;3868754208;f8;43;19;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Real full path where this program is installed (e.g: &quot;/var/www/html/TCExam/&quot;).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_PATH_PUBLIC_CODE;PHP:PHP Word;3868754208;f8;62;26;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Path to public code.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_PATH_PUBLIC_CODE_REAL;PHP:PHP Word;3868754208;f8;67;31;67;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Server path to public code.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_PATH_SHARED_JSCRIPTS;PHP:PHP Word;3868754208;f8;108;30;108;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Relative path to shared javascript directory.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_PATH_STYLE_SHEETS;PHP:PHP Word;3868754208;f8;98;27;98;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Relative path to stylesheets directory.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_PATH_TCEXAM;PHP:PHP Word;3868754208;f8;38;21;38;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Relative URL where this program is installed (e.g.: &quot;/&quot;).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_PATH_TMX_FILE;PHP:PHP Word;3868754208;f8;118;23;118;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Full path to TMX language file.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_PATH_URL;PHP:PHP Word;4221252971;f10;89;20;89;;3868754208;f8;48;18;48;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Constant used on TCPDF library.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_PATH_URL_CACHE;PHP:PHP Word;3868754208;f8;77;24;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    URL path to to cache directory.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_PUBLIC_THEME;PHP:PHP Word;3571879028;f8;74;22;74;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Theme for the public area;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_QUESTION_DIFFICULTY_LEVELS;PHP:PHP Word;4289637660;f8;98;36;98;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Number of difficulty levels for questions.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_QUESTION_LINE_MAX_LENGTH;PHP:PHP Word;4289637660;f8;165;34;165;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Define max line length in chars for question navigator on test execution interface.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_RADIUS_ACCOUNTING_PORT;PHP:PHP Word;2966637094;f8;62;32;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Radius accounting port (e.g.: 1813).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_RADIUS_AUTHENTICATION_PORT;PHP:PHP Word;2966637094;f8;57;36;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Radius authentication port (e.g.: 1812).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_RADIUS_ENABLED;PHP:PHP Word;2966637094;f8;32;24;32;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true enable RADIUS.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_RADIUS_SERVER_IP;PHP:PHP Word;2966637094;f8;37;26;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    IP address of the radius server (e.g.: &quot;127.0.0.1&quot;).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_RADIUS_SHARED_SECRET;PHP:PHP Word;2966637094;f8;42;30;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Shared secret with the radius server.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_RADIUS_SUFFIX;PHP:PHP Word;2966637094;f8;47;23;47;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Radius domain name suffix (e.g.: &quot;&#10;&lt;b&gt;mydomain&lt;/b&gt;: .com&quot;).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_RADIUS_UDP_TIMEOUT;PHP:PHP Word;2966637094;f8;52;28;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Radius UDP timeout (e.g.: 5).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_RADIUS_USER_GROUP_ID;PHP:PHP Word;2966637094;f8;79;30;79;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default user group ID.&#10;This is the TCExam group id to which the radius accounts belongs.&#10;You can also set 0 for all available groups or a string containing a comma-separated list of group IDs.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_RADIUS_USER_LEVEL;PHP:PHP Word;2966637094;f8;72;27;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default user level.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_RADIUS_UTF8;PHP:PHP Word;2966637094;f8;67;21;67;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set to true if RADIUS uses UTF-8 encoding.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_RANDOM_SECURITY;PHP:PHP Word;3525555018;f8;32;25;32;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    String used as a seed for some security code generation please change this value and keep it secret.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_REDIRECT_LOGIN_MODE;PHP:PHP Word;4289637660;f8;201;29;201;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Various pages redirection modes after login (valid values are 1, 2, 3 and 4).&#10;1 = relative redirect.&#10;2 = absolute redirect.&#10;3 = html redirect.&#10;4 = full redirect.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_REMAINING_TESTS;PHP:PHP Word;3525555018;f8;55;25;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set to false to disable test counting.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SECONDS_IN_DAY;PHP:PHP Word;3525555018;f8;86;24;86;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Number of seconds in one day.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SECONDS_IN_HOUR;PHP:PHP Word;3525555018;f8;81;25;81;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Number of seconds in one hour.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SECONDS_IN_MINUTE;PHP:PHP Word;3525555018;f8;76;27;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Number of seconds in one minute.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SECONDS_IN_MONTH;PHP:PHP Word;3525555018;f8;96;26;96;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Number of seconds in one month.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SECONDS_IN_WEEK;PHP:PHP Word;3525555018;f8;91;25;91;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Number of seconds in one week.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SECONDS_IN_YEAR;PHP:PHP Word;3525555018;f8;101;25;101;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Number of seconds in one year.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SELECT_SUBSTRING;PHP:PHP Word;3748594207;f8;116;26;116;;2459392330;f8;116;26;116;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Max number of chars to display on a selection box.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SESSION_LIFE;PHP:PHP Word;4289637660;f8;148;22;148;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    User&apos;s session life time in seconds.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SHIBBOLETH_ENABLED;PHP:PHP Word;3867413166;f8;33;28;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true trust Shibboleth Auth;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SHIBBOLETH_LOGIN;PHP:PHP Word;3867413166;f8;50;26;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    URL of the Shibboleth login page;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SHIBBOLETH_USER_GROUP_ID;PHP:PHP Word;3867413166;f8;45;34;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default user group ID&#10;This is the TCExam group id to which the accounts belong.&#10;You can also set 0 for all available groups or a string containing a comma-separated list of group IDs.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SHIBBOLETH_USER_LEVEL;PHP:PHP Word;3867413166;f8;38;31;38;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default user level;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SHORT_ANSWERS_BINARY;PHP:PHP Word;4289637660;f8;143;30;143;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true compare short answers in binary mode.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SITE_AUTHOR;PHP:PHP Word;3571879028;f8;54;21;54;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default site author.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SITE_DESCRIPTION;PHP:PHP Word;3571879028;f8;49;26;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default site description.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SITE_ICON;PHP:PHP Word;3571879028;f8;69;19;69;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Path to default html icon.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SITE_KEYWORDS;PHP:PHP Word;3571879028;f8;64;23;64;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default keywords.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SITE_REPLY;PHP:PHP Word;3571879028;f8;59;20;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default html reply-to meta tag.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SITE_STYLE;PHP:PHP Word;3571879028;f8;79;20;79;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Path to public CSS stylesheet for LTR languages.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SITE_STYLE_RTL;PHP:PHP Word;3571879028;f8;84;24;84;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Path to CSS stylesheet for RTL languages.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SITE_TITLE;PHP:PHP Word;3571879028;f8;44;20;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default site name.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SMALL_RATIO;PHP:PHP Word;4221252971;f9;219;22;219;;1824749412;f8;159;21;159;;;;vpos;;v;;a;;r2/3;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SSL_ENABLED;PHP:PHP Word;2672335570;f8;33;21;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true trust SSL Auth;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SSL_USER_GROUP_ID;PHP:PHP Word;2672335570;f8;45;27;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default user group ID&#10;This is the TCExam group id to which the accounts belong.&#10;You can also set 0 for all available groups or a string containing a comma-separated list of group IDs.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_SSL_USER_LEVEL;PHP:PHP Word;2672335570;f8;38;24;38;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default user level;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_STANDARD_PORT;PHP:PHP Word;3868754208;f8;53;23;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Standard port for http (80) or https (443).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TAB;PHP:PHP Word;3525555018;f8;71;13;71;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Tabulation character.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TABLE_ANSWERS;PHP:PHP Word;1487459341;f8;100;23;100;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This table contains all answers relative to a specific questions.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TABLE_GROUPS;PHP:PHP Word;1487459341;f8;140;22;140;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This table contains users&apos; groups. Each user belongs to one of the groups defined in this table.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TABLE_LOG_ANSWER;PHP:PHP Word;1487459341;f8;135;26;135;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This table contains the list of the selected alternative answers for each multiple-choice question.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TABLE_MODULES;PHP:PHP Word;1487459341;f8;85;23;85;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Table for modules. A module is a container for subjects.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TABLE_PREFIX;PHP:PHP Word;1487459341;f8;66;22;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    prefix for database tables names;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TABLE_QUESTIONS;PHP:PHP Word;1487459341;f8;95;25;95;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This table contains all questions relative to specific subjects.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TABLE_SESSIONS;PHP:PHP Word;1487459341;f8;75;24;75;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This table stores information about users&apos; Web sessions.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TABLE_SSLCERTS;PHP:PHP Word;1487459341;f8;155;24;155;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This table contains the SSL certificates.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TABLE_SUBJECTS;PHP:PHP Word;1487459341;f8;90;24;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This table contains all tests subjects (topics, branch of studies).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TABLE_SUBJECT_SET;PHP:PHP Word;1487459341;f8;125;27;125;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This table contains all tests subjects (topics, branch of studies).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TABLE_TESTS;PHP:PHP Word;1487459341;f8;105;21;105;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This table contains all tests data.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TABLE_TESTS_LOGS;PHP:PHP Word;1487459341;f8;130;26;130;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This table contains all questions and user answers relative to a specific test for a specific user.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TABLE_TESTUSER_STAT;PHP:PHP Word;1487459341;f8;115;29;115;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This table counts the number of generated tests.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TABLE_TEST_GROUPS;PHP:PHP Word;1487459341;f8;150;27;150;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This table contains the list of groups enabled for a selected test.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TABLE_TEST_SSLCERTS;PHP:PHP Word;1487459341;f8;160;29;160;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This table contains the list of SSL certificates enabled for a selected test.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TABLE_TEST_SUBJSET;PHP:PHP Word;1487459341;f8;120;28;120;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This table lists the type and quantity of the questions associated to each set of subjects selected for a particular test.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TABLE_TEST_USER;PHP:PHP Word;1487459341;f8;110;25;110;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This table contains the list of tests generated for each user.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TABLE_USERGROUP;PHP:PHP Word;1487459341;f8;145;25;145;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This table contains the list of groups to whom each user belongs.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TABLE_USERS;PHP:PHP Word;1487459341;f8;80;21;80;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This table contains all registered users&apos; data, including system administrators and a special &apos;anonymous&apos; user.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TCEXAM_AUTHOR;PHP:PHP Word;3748594207;f8;76;23;76;;2459392330;f8;76;23;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    TCExam Author.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TCEXAM_DESCRIPTION;PHP:PHP Word;3748594207;f8;71;28;71;;2459392330;f8;71;28;71;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    TCExam description.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TCEXAM_ICON;PHP:PHP Word;3748594207;f8;91;21;91;;2459392330;f8;91;21;91;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Relative path to html icon.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TCEXAM_KEYWORDS;PHP:PHP Word;3748594207;f8;86;25;86;;2459392330;f8;86;25;86;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default html meta keywords.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TCEXAM_REPLY_TO;PHP:PHP Word;3748594207;f8;81;25;81;;2459392330;f8;81;25;81;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Reply-to meta tag.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TCEXAM_STYLE;PHP:PHP Word;3748594207;f8;101;22;101;;2459392330;f8;101;22;101;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Path to public CSS stylesheet for LTR languages.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TCEXAM_STYLE_RTL;PHP:PHP Word;3748594207;f8;106;26;106;;2459392330;f8;106;26;106;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Full path to CSS stylesheet for RTL languages.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TCEXAM_TITLE;PHP:PHP Word;3748594207;f8;66;22;66;;2459392330;f8;66;22;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    TCExam title.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TCEXAM_VERSION;PHP:PHP Word;4289637660;f9;34;25;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    TCExam version (do not change).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TCPDF_CALLS_IN_HTML;PHP:PHP Word;4221252971;f9;227;30;227;;1824749412;f8;170;29;170;;;;vpos;;v;;a;;rfalse;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TCPDF_EXTERNAL_CONFIG;PHP:PHP Word;1824749412;f8;246;31;246;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Do not change the value of this define.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TCPDF_THROW_EXCEPTION_ERROR;PHP:PHP Word;4221252971;f9;235;38;235;;1824749412;f8;183;37;183;;;;vpos;;v;;a;;rfalse;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TEST_INFO_HEIGHT;PHP:PHP Word;4289637660;f8;108;26;108;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Popup window height in pixels for test info.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TEST_INFO_WIDTH;PHP:PHP Word;4289637660;f8;113;25;113;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Popup window width in pixels for test info.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_THAI_TOPCHARS;PHP:PHP Word;4221252971;f9;223;24;223;;1824749412;f8;164;23;164;;;;vpos;;v;;a;;rtrue;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TIMESTAMP_FORMAT;PHP:PHP Word;4289637660;f8;160;26;160;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Define timestamp format using PHP notation (do not change).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TIMEZONE;PHP:PHP Word;4221252971;f9;239;19;239;;4289637660;f8;237;18;237;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set your own timezone here.&#10;Possible values are listed on:&#10;http://php.net/manual/en/timezones.php;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_TITLE_MAGNIFICATION;PHP:PHP Word;4221252971;f9;215;30;215;;1824749412;f8;154;29;154;;;;vpos;;v;;a;;r1.3;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_UPDATE_PASSKEY;PHP:PHP Word;1191857742;f8;47;24;47;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    UPDATES PASSKEY;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_UPDATE_SERVER;PHP:PHP Word;1191857742;f8;42;23;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Updating server;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_USER_GROUP_RSYNC;PHP:PHP Word;4289637660;f8;155;26;155;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    When an alternate authentication method is used,&#10;if this constant is true the default user groups for the selected&#10;authentication method are always added to the user.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_USER_LANG;PHP:PHP Word;4289637660;f12;263;23;263;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Use requested language.&#10;&lt;b&gt;ignore&lt;/b&gt;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_USE_ERROR_LOG;PHP:PHP Word;4289637660;f8;225;23;225;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Enable error logs (../log/tce_errors.log).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_USRREG_ADMIN_EMAIL;PHP:PHP Word;1835345617;f8;54;28;54;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The following email will receive copies of verification messages.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_USRREG_AGREEMENT;PHP:PHP Word;1835345617;f8;49;26;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    URL of an HTML page containing the registration agreement (i.e.: &quot;http://www.example.com/agreement.html&quot;).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_USRREG_EMAIL_CONFIRM;PHP:PHP Word;1835345617;f8;39;30;39;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true requires email confirmation.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_USRREG_ENABLED;PHP:PHP Word;1835345617;f8;34;24;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true enable USER REGISTRATION.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_USRREG_GROUP;PHP:PHP Word;1835345617;f8;44;22;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default user group ID for registered user.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_USRREG_PASSWORD_RE;PHP:PHP Word;1835345617;f8;59;28;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Regular expression defining the allowed characters for a password;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K_UTF8_NORMALIZATION_MODE;PHP:PHP Word;3748594207;f8;154;33;154;;2459392330;f8;154;33;154;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the UTF-8 Normalization mode for question and answer descriptions:&#10;NONE=None;s&#10;C=Normalization Form C (NFC) - Canonical Decomposition followed by Canonical Composition;s&#10;D=Normalization Form D (NFD) - Canonical Decomposition;s&#10;KC=Normalization Form KC (NFKC) - Compatibility Decomposition, followed by Canonical Composition;s&#10;KD=Normalization Form KD (NFKD) - Compatibility Decomposition;s&#10;CUSTOM=Custom normalization using user defined function &apos;user_utf8_custom_normalizer&apos;.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="MAX_STRUCTURED_SYMBOLS;PHP:PHP Word;643374217;f12;200;34;200;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Max number of symbols for structured mode;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="Microsoft;PHP:NameSpace Use;718930949;f3;43;50;43;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;kStevenmaguire\OAuth2\Client\Provider\Microsoft;;l;;n">
</treenode>
<treenode node="N1;PHP:PHP Word;643374217;f12;209;14;209;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Down point base value for case 1 mask pattern (concatenation of same color in a line or a column);;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="N2;PHP:PHP Word;643374217;f9;214;11;214;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Down point base value for case 2 mask pattern (module block of same color);;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="N3;PHP:PHP Word;643374217;f9;219;11;219;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Down point base value for case 3 mask pattern (1:1:3:1:1(dark:bright:dark:bright:dark)pattern in a line or a column);;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="N4;PHP:PHP Word;643374217;f9;224;11;224;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Down point base value for case 4 mask pattern (ration of dark modules in whole);;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PDF417DEFS;PHP:PHP Word;2869520383;f9;61;19;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Indicate that definitions for this class are set;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PDF_AUTHOR;PHP:PHP Word;4221252971;f10;143;20;143;;1824749412;f8;74;18;74;;;;vpos;;v;;a;;r&apos;TCPDF&apos;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PDF_CREATOR;PHP:PHP Word;4221252971;f10;139;21;139;;1824749412;f8;69;19;69;;;;vpos;;v;;a;;r&apos;TCPDF&apos;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PDF_FONT_MONOSPACED;PHP:PHP Word;4221252971;f10;199;29;199;;1824749412;f8;134;27;134;;;;vpos;;v;;a;;r&apos;courier&apos;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PDF_FONT_NAME_DATA;PHP:PHP Word;4221252971;f10;191;28;191;;1824749412;f8;124;26;124;;;;vpos;;v;;a;;r&apos;helvetica&apos;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PDF_FONT_NAME_MAIN;PHP:PHP Word;4221252971;f10;183;28;183;;1824749412;f8;114;26;114;;;;vpos;;v;;a;;r&apos;helvetica&apos;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PDF_FONT_SIZE_DATA;PHP:PHP Word;4221252971;f10;195;28;195;;1824749412;f8;129;26;129;;;;vpos;;v;;a;;r8;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PDF_FONT_SIZE_MAIN;PHP:PHP Word;4221252971;f10;187;28;187;;1824749412;f8;119;26;119;;;;vpos;;v;;a;;r10;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PDF_HEADER_LOGO;PHP:PHP Word;4221252971;f10;107;25;107;;1824749412;f8;44;23;44;;;;vpos;;v;;a;;r$tcpdf_header_logo;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PDF_HEADER_LOGO_WIDTH;PHP:PHP Word;4221252971;f11;112;32;112;;1824749412;f8;49;29;49;;;;vpos;;v;;a;;r30;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PDF_HEADER_STRING;PHP:PHP Word;4221252971;f10;151;27;151;;1824749412;f8;39;25;39;;;;vpos;;v;;a;;r&quot;by Nicola Asuni - Tecnick.com\nwww.tcpdf.org&quot;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PDF_HEADER_TITLE;PHP:PHP Word;4221252971;f10;147;26;147;;1824749412;f8;34;24;34;;;;vpos;;v;;a;;r&apos;TCPDF Example&apos;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PDF_IMAGE_SCALE_RATIO;PHP:PHP Word;4221252971;f10;203;31;203;;1824749412;f8;139;29;139;;;;vpos;;v;;a;;r1.25;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PDF_MARGIN_BOTTOM;PHP:PHP Word;4221252971;f10;171;27;171;;1824749412;f8;99;25;99;;;;vpos;;v;;a;;r25;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PDF_MARGIN_FOOTER;PHP:PHP Word;4221252971;f10;163;27;163;;1824749412;f8;89;25;89;;;;vpos;;v;;a;;r10;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PDF_MARGIN_HEADER;PHP:PHP Word;4221252971;f10;159;27;159;;1824749412;f8;84;25;84;;;;vpos;;v;;a;;r5;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PDF_MARGIN_LEFT;PHP:PHP Word;4221252971;f10;175;25;175;;1824749412;f8;104;23;104;;;;vpos;;v;;a;;r15;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PDF_MARGIN_RIGHT;PHP:PHP Word;4221252971;f10;179;26;179;;1824749412;f8;109;24;109;;;;vpos;;v;;a;;r15;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PDF_MARGIN_TOP;PHP:PHP Word;4221252971;f10;167;24;167;;1824749412;f8;94;22;94;;;;vpos;;v;;a;;r27;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PDF_PAGE_FORMAT;PHP:PHP Word;4221252971;f10;131;25;131;;1824749412;f8;59;23;59;;;;vpos;;v;;a;;r&apos;A4&apos;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PDF_PAGE_ORIENTATION;PHP:PHP Word;4221252971;f10;135;30;135;;1824749412;f8;64;28;64;;;;vpos;;v;;a;;r&apos;P&apos;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PDF_TEXTANSWER_HEIGHT;PHP:PHP Word;1824749412;f8;54;29;54;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Height of area for offline user answer.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PDF_UNIT;PHP:PHP Word;4221252971;f10;155;18;155;;1824749412;f8;79;16;79;;;;vpos;;v;;a;;r&apos;mm&apos;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PHPCAS_LANG_CATALAN;PHP:PHP Word;3200056416;f8;220;27;220;;;;vpos;;v;;a;;r&apos;CAS_Languages_Catalan&apos;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PHPCAS_LANG_CHINESE_SIMPLIFIED;PHP:PHP Word;3200056416;f8;221;38;221;;;;vpos;;v;;a;;r&apos;CAS_Languages_ChineseSimplified&apos;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PHPCAS_LANG_DEFAULT;PHP:PHP Word;3200056416;f8;233;27;233;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    phpCAS default language (when phpCAS::setLang() is not used);;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PHPCAS_LANG_ENGLISH;PHP:PHP Word;3200056416;f8;214;27;214;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;addtogroup&lt;/b&gt;: publicLang&#10;@{;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PHPCAS_LANG_FRENCH;PHP:PHP Word;3200056416;f8;215;26;215;;;;vpos;;v;;a;;r&apos;CAS_Languages_French&apos;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PHPCAS_LANG_GERMAN;PHP:PHP Word;3200056416;f8;217;26;217;;;;vpos;;v;;a;;r&apos;CAS_Languages_German&apos;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PHPCAS_LANG_GREEK;PHP:PHP Word;3200056416;f8;216;25;216;;;;vpos;;v;;a;;r&apos;CAS_Languages_Greek&apos;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PHPCAS_LANG_JAPANESE;PHP:PHP Word;3200056416;f8;218;28;218;;;;vpos;;v;;a;;r&apos;CAS_Languages_Japanese&apos;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PHPCAS_LANG_SPANISH;PHP:PHP Word;3200056416;f8;219;27;219;;;;vpos;;v;;a;;r&apos;CAS_Languages_Spanish&apos;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PHPCAS_PROXIED_SERVICE_HTTP_GET;PHP:PHP Word;3200056416;f8;194;39;194;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    phpCAS::getProxiedService() type for HTTP GET;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PHPCAS_PROXIED_SERVICE_HTTP_POST;PHP:PHP Word;3200056416;f8;198;40;198;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    phpCAS::getProxiedService() type for HTTP POST;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PHPCAS_PROXIED_SERVICE_IMAP;PHP:PHP Word;3200056416;f8;202;35;202;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    phpCAS::getProxiedService() type for IMAP;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PHPCAS_SERVICE_NOT_AVAILABLE;PHP:PHP Word;3200056416;f8;186;36;186;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    phpCAS::service() error code when the service was not available.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PHPCAS_SERVICE_OK;PHP:PHP Word;3200056416;f8;167;25;167;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    phpCAS::service() error code on success;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PHPCAS_SERVICE_PT_BAD_SERVER_RESPONSE;PHP:PHP Word;3200056416;f8;177;45;177;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    phpCAS::service() error code when the PT could not retrieve because&#10;the response of the CAS server was ill-formed.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PHPCAS_SERVICE_PT_FAILURE;PHP:PHP Word;3200056416;f8;182;33;182;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    phpCAS::service() error code when the PT could not retrieve because&#10;the CAS server did not want to.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PHPCAS_SERVICE_PT_NO_SERVER_RESPONSE;PHP:PHP Word;3200056416;f8;172;44;172;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    phpCAS::service() error code when the PT could not retrieve because&#10;the CAS server did not respond.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PHPCAS_VERSION;PHP:PHP Word;3200056416;f8;63;22;63;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    phpCAS version. accessible for the user by phpCAS::getVersion().;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PHP_VERSION_ID;PHP:PHP Word;4289637660;f12;293;26;293;;;;vpos;;v;;a;;r(($version[0;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="QRCAP_EC;PHP:PHP Word;643374217;f12;186;20;186;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Matrix index to get error correction level from $capacity array.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="QRCAP_REMINDER;PHP:PHP Word;643374217;f12;181;26;181;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Matrix index to get remainder from $capacity array.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="QRCAP_WIDTH;PHP:PHP Word;643374217;f12;171;23;171;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Matrix index to get width from $capacity array.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="QRCAP_WORDS;PHP:PHP Word;643374217;f12;176;23;176;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Matrix index to get number of words from $capacity array.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="QRCODEDEFS;PHP:PHP Word;643374217;f9;87;19;87;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Indicate that definitions for this class are set;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="QRSPEC_VERSION_MAX;PHP:PHP Word;643374217;f9;159;27;159;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Maximum QR Code version.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="QRSPEC_WIDTH_MAX;PHP:PHP Word;643374217;f12;164;28;164;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Maximum matrix size for maximum version (version 40 is 177*177 matrix).;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="QR_DEFAULT_MASK;PHP:PHP Word;643374217;f9;243;24;243;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    when QR_FIND_BEST_MASK === false;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="QR_ECLEVEL_H;PHP:PHP Word;643374217;f9;147;21;147;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Error correction level H : About 30% or less errors can be corrected.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="QR_ECLEVEL_L;PHP:PHP Word;643374217;f9;132;21;132;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Error correction level L : About 7% or less errors can be corrected.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="QR_ECLEVEL_M;PHP:PHP Word;643374217;f9;137;21;137;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Error correction level M : About 15% or less errors can be corrected.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="QR_ECLEVEL_Q;PHP:PHP Word;643374217;f9;142;21;142;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Error correction level Q : About 25% or less errors can be corrected.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="QR_FIND_BEST_MASK;PHP:PHP Word;643374217;f9;233;26;233;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    if true, estimates best mask (spec. default, but extremally slow;s set to false to significant performance boost but (propably) worst quality code;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="QR_FIND_FROM_RANDOM;PHP:PHP Word;643374217;f9;238;28;238;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    if false, checks all masks available, otherwise value tells count of masks need to be checked, mask id are got randomly;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="QR_MODE_8B;PHP:PHP Word;643374217;f9;111;19;111;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Encoding mode 8bit byte data. In theory, 2953 characters or less can be stored in a QRcode.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="QR_MODE_AN;PHP:PHP Word;643374217;f9;106;19;106;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Encoding mode alphanumeric (0-9A-Z $%*+-./:) 45characters. 2 characters are encoded to 11bit length. In theory, 4296 characters or less can be stored in a QRcode.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="QR_MODE_KJ;PHP:PHP Word;643374217;f9;116;19;116;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Encoding mode KANJI. A KANJI character (multibyte character) is encoded to 13bit length. In theory, 1817 characters or less can be stored in a QRcode.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="QR_MODE_NL;PHP:PHP Word;643374217;f9;96;19;96;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Encoding mode;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="QR_MODE_NM;PHP:PHP Word;643374217;f9;101;19;101;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Encoding mode numeric (0-9). 3 characters are encoded to 10bit length. In theory, 7089 characters or less can be stored in a QRcode.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="QR_MODE_ST;PHP:PHP Word;643374217;f9;121;19;121;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Encoding mode STRUCTURED (currently unsupported);;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="QUIETH;PHP:PHP Word;2869520383;f9;73;15;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Horizontal quiet zone in modules;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="QUIETV;PHP:PHP Word;2869520383;f9;78;15;78;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Vertical quiet zone in modules;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ROWHEIGHT;PHP:PHP Word;2869520383;f9;68;18;68;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Row height respect X dimension of single module;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="RefreshToken;PHP:NameSpace Use;1147530134;f3;22;43;22;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;kLeague\OAuth2\Client\Grant\RefreshToken;;l;;n">
</treenode>
<treenode node="SAMLP_REQUEST;PHP:PHP Word;3200056416;f8;110;21;110;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    SAMLP request;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="SAMLP_REQUEST_CLOSE;PHP:PHP Word;3200056416;f8;111;27;111;;;;vpos;;v;;a;;r&apos;&lt;/samlp:Request&gt;&apos;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="SAML_ASSERTION_ARTIFACT;PHP:PHP Word;3200056416;f8;116;31;116;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    SAMLP artifact tag (for the ticket);;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="SAML_ASSERTION_ARTIFACT_CLOSE;PHP:PHP Word;3200056416;f8;121;37;121;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    SAMLP close;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="SAML_ATTRIBUTES;PHP:PHP Word;3200056416;f8;136;23;136;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    SAML Attributes;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="SAML_SOAP_BODY;PHP:PHP Word;3200056416;f8;105;22;105;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    SOAP body for SAML POST;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="SAML_SOAP_BODY_CLOSE;PHP:PHP Word;3200056416;f8;126;28;126;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    SOAP body close;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="SAML_SOAP_ENV;PHP:PHP Word;3200056416;f8;100;21;100;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    SOAP envelope for SAML POST;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="SAML_SOAP_ENV_CLOSE;PHP:PHP Word;3200056416;f8;131;27;131;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    SOAP envelope close;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="SAML_VERSION_1_1;PHP:PHP Word;3200056416;f8;90;24;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    SAML protocol;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="SAML_XML_HEADER;PHP:PHP Word;3200056416;f8;95;23;95;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    XML header for SAML POST;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="STRUCTURE_HEADER_BITS;PHP:PHP Word;643374217;f12;195;33;195;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Number of header bits for structured mode;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="SessionUserLang;PHP:PHP Word;4289637660;f36;273;51;273;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Use session language.&#10;&lt;b&gt;ignore&lt;/b&gt;;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="Yahoo;PHP:NameSpace Use;718930949;f3;41;41;41;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;kHayageek\OAuth2\Client\Provider\Yahoo;;l;;n">
</treenode>
<treenode node="radius.class.php;PHP:PHP Include;59967323;f14;70;30;70;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="tce_functions_email_reports.php;PHP:PHP Include;904880894;f14;93;45;93;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="tce_functions_filemanager.php;PHP:PHP Include;3345691594;f14;38;43;38;;464402802;f14;38;43;38;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="tce_functions_install.php;PHP:PHP Include;963855892;f14;30;39;30;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="tce_functions_omr.php;PHP:PHP Include;893248032;f14;36;35;36;;3263261354;f14;46;35;46;;138083829;f14;45;35;45;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="tce_functions_questions.php;PHP:PHP Include;1785988224;f14;42;41;42;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="tce_functions_tcecode_editor.php;PHP:PHP Include;4181342402;f14;40;46;40;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="tce_functions_test_select.php;PHP:PHP Include;52393560;f14;41;43;41;;3758281597;f14;41;43;41;;4181342402;f14;43;43;43;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="tce_functions_user_select.php;PHP:PHP Include;1502610741;f14;42;43;42;;1702763380;f14;44;43;44;;3427977094;f14;46;43;46;;4263303559;f14;41;43;41;;4174276978;f14;41;43;41;;1098624880;f14;48;43;48;;3263261354;f14;47;43;47;;138083829;f14;46;43;46;;904880894;f14;39;43;39;;1334627829;f14;43;43;43;;4181342402;f14;42;43;42;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="tce_functions_users_online.php;PHP:PHP Include;2547304681;f14;40;44;40;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="tce_page_footer.php;PHP:PHP Include;3551339026;f30;89;49;89;;4087072189;f14;187;33;187;;3463225236;f14;101;33;101;;1017254202;f14;54;33;54;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="tce_page_header.php;PHP:PHP Include;922189051;f14;39;33;39;;1702763380;f14;38;33;38;;3427977094;f14;39;33;39;;4087072189;f14;40;33;40;;3263261354;f14;42;33;42;;138083829;f14;41;33;41;;4181342402;f14;37;33;37;;3463225236;f14;34;33;34;;1017254202;f14;40;33;40;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="tce_xhtml_header.php;PHP:PHP Include;3912900807;f14;32;34;32;;561044377;f14;32;34;32;;1779684844;f14;32;34;32;;1474660786;f14;32;34;32;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;file&lt;/b&gt;&#10;Outputs default XHTML page header.&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcexam.public&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2001-09-18;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="vendor/autoload.php;PHP:PHP Include;718930949;f9;58;28;58;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CAS_AuthenticationException;PHP:Class Name;2290405891;f0;47;1;115;;;;vpos;;v;;aRuntimeException;;cCAS_Exception;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_AuthenticationException extends RuntimeException implements CAS_Exception&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This interface defines methods that allow proxy-authenticated service handlers&#10;to interact with phpCAS.&#10;Proxy service handlers must implement this interface as well as call&#10;phpCAS::initializeProxiedService($this) at some point in their implementation.&#10;While not required, proxy-authenticated service handlers are encouraged to&#10;implement the CAS_ProxiedService_Testable interface to facilitate unit testing.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_AuthenticationException&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Joachim Fritschi &lt;jfritschi&#10;&lt;b&gt;freenet&lt;/b&gt;: .de&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,48;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;2290405891;f11;64;5;114;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(&#10;        $client,&#10;        $failure,&#10;        $cas_url,&#10;        $no_response,&#10;        $bad_response = &apos;&apos;,&#10;        $cas_response = &apos;&apos;,&#10;        $err_code = &apos;&apos;,&#10;        $err_msg = &apos;&apos;&#10;    )&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to print the HTML output when the user was not&#10;authenticated.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    CAS_Client &lt;b&gt;$client&lt;/b&gt;: phpcas client&#10;    string &lt;b&gt;$failure&lt;/b&gt;: the failure that occured&#10;    string &lt;b&gt;$cas_url&lt;/b&gt;: the URL the CAS server was asked for&#10;    bool &lt;b&gt;$no_response&lt;/b&gt;: the response from the CAS server (other parameters are ignored if TRUE)&#10;    bool &lt;b&gt;$bad_response&lt;/b&gt;: bad response from the CAS server ($err_code and $err_msg ignored if TRUE)&#10;    string &lt;b&gt;$cas_response&lt;/b&gt;: the response of the CAS server&#10;    int &lt;b&gt;$err_code&lt;/b&gt;: the error code given by the CAS server&#10;    string &lt;b&gt;$err_msg&lt;/b&gt;: the error message given by the CAS server;;d6,73;;b1,0;;m0;;e0;;i0;;o;;k;;l $client;;p $failure;;p $cas_url;;p $no_response;;p $bad_response;;p $cas_response;;p $err_code;;p $err_msg;;p;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
</treenode>
<treenode node="CAS_Client;PHP:Class Name;117700445;f0;49;1;4028;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_Client&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The CAS_Client class is a client interface that provides CAS authentication&#10;to PHP applications.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_Client&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Pascal Aubry &lt;pascal.aubry&#10;&lt;b&gt;univ&lt;/b&gt;: -rennes1.fr&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Olivier Berger &lt;olivier.berger&#10;&lt;b&gt;it&lt;/b&gt;: -sudparis.eu&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Brett Bieber &lt;brett.bieber&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Joachim Fritschi &lt;jfritschi&#10;&lt;b&gt;freenet&lt;/b&gt;: .de&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,50;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="HOSTNAME;PHP:PHP Word;117700445;f16;3877;25;3877;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Constants used for determining rebroadcast node type.;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="IP;PHP:PHP Word;117700445;f16;3879;19;3879;;;;vpos;;v;;a;;r1;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="LOGOUT;PHP:PHP Word;117700445;f16;3940;23;3940;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Constants used for determining rebroadcast type (logout or pgtIou/pgtId).;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PGTIOU;PHP:PHP Word;117700445;f16;3942;23;3942;;;;vpos;;v;;a;;r1;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="__construct;PHP:Function Name;117700445;f11;875;5;1029;;;;vpos;;v;;aa;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(&#10;        $server_version,&#10;        $proxy,&#10;        $server_hostname,&#10;        $server_port,&#10;        $server_uri,&#10;        $changeSessionID = true&#10;    )&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    CAS_Client constructor.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$server_version&lt;/b&gt;: the version of the CAS server&#10;    bool &lt;b&gt;$proxy&lt;/b&gt;: true if the CAS client is a CAS proxy&#10;    string &lt;b&gt;$server_hostname&lt;/b&gt;: the hostname of the CAS server&#10;    int &lt;b&gt;$server_port&lt;/b&gt;: the port the CAS server is running on&#10;    string &lt;b&gt;$server_uri&lt;/b&gt;: the URI the CAS server is responding on&#10;    bool &lt;b&gt;$changeSessionID&lt;/b&gt;: Allow phpCAS to change the session_id (Single Sign Out/handleLogoutRequests is based on that change)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   newly created CAS_Client object;;d6,882;;b1,0;;m0;;e0;;i0;;o;;k;;l $server_version;;p $proxy;;p $server_hostname;;p $server_port;;p $server_uri;;p $changeSessionID;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="_addAttributeToArray;PHP:Function Name;117700445;f12;3552;5;3566;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _addAttributeToArray(array &amp;$attributeArray, $name, $value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add an attribute value to an array of attributes.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array: &amp;$attributeArray reference to array&#10;    string &lt;b&gt;$name&lt;/b&gt;: name of attribute&#10;    string &lt;b&gt;$value&lt;/b&gt;: value of attribute;;d4,3553;;b3,0;;m0;;e0;;i0;;o;;k;;l;;p $name;;p $value;;p;;x;;x;;x;;n">
</treenode>
<treenode node="_authError;PHP:Function Name;117700445;f12;3811;5;3860;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _authError(&#10;        $failure,&#10;        $cas_url,&#10;        $no_response,&#10;        $bad_response = &apos;&apos;,&#10;        $cas_response = &apos;&apos;,&#10;        $err_code = &apos;&apos;,&#10;        $err_msg = &apos;&apos;&#10;    )&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to print the HTML output when the user was not&#10;authenticated.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$failure&lt;/b&gt;: the failure that occured&#10;    string &lt;b&gt;$cas_url&lt;/b&gt;: the URL the CAS server was asked for&#10;    bool &lt;b&gt;$no_response&lt;/b&gt;: the response from the CAS server (other parameters are ignored if true)&#10;    bool &lt;b&gt;$bad_response&lt;/b&gt;: bad response from the CAS server ($err_code and $err_msg ignored if true)&#10;    string &lt;b&gt;$cas_response&lt;/b&gt;: the response of the CAS server&#10;    int &lt;b&gt;$err_code&lt;/b&gt;: the error code given by the CAS server&#10;    string &lt;b&gt;$err_msg&lt;/b&gt;: the error message given by the CAS server;;d6,3819;;b3,0;;m0;;e0;;i0;;o;;k;;l $failure;;p $cas_url;;p $no_response;;p $bad_response;;p $cas_response;;p $err_code;;p $err_msg;;p;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="_buildQueryUrl;PHP:Function Name;117700445;f12;3754;5;3758;;;;vpos;;v;;aurl;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _buildQueryUrl($url, $query)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to append query parameters to an url. Since the url&#10;might already contain parameter it has to be detected and to build a proper&#10;URL&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: base url to add the query params to&#10;    string &lt;b&gt;$query&lt;/b&gt;: params in query form with &amp; separated&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   with query params;;d4,3755;;b3,0;;m0;;e0;;i0;;o;;k;;l $url;;p $query;;p;;x;;x;;n">
</treenode>
<treenode node="_buildSAMLPayload;PHP:Function Name;117700445;f12;2897;5;2910;;;;vpos;;v;;athe;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _buildSAMLPayload()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to build the SAML POST body sent to /samlValidate URL.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   SOAP-encased SAMLP artifact (the ticket).;;d4,2898;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_callback;PHP:Function Name;117700445;f12;2439;5;2466;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _callback()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is called by CAS_Client::CAS_Client() when running in callback&#10;mode. It stores the PGT and its PGT Iou, prints its output and halts.;;d4,2440;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_ensureAuthenticationCalled;PHP:Function Name;117700445;f12;768;5;773;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _ensureAuthenticationCalled()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Ensure that authentication was checked. Terminate with exception if no&#10;authentication was performed&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceBeforeAuthenticationCallException;;d4,769;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_getCallbackURL;PHP:Function Name;117700445;f12;2401;5;2416;;;;vpos;;v;;aThe;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getCallbackURL()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns the URL that should be used for the PGT callback (in&#10;fact the URL of the current request without any CGI parameter, except if&#10;phpCAS::setFixedCallbackURL() was used).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   callback URL;;d4,2402;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_getClientUrl;PHP:Function Name;117700445;f12;3667;5;3702;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getClientUrl()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Try to figure out the phpCas client URL with possible Proxys / Ports etc.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Server URL with domain:port;;d4,3668;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_getNodeType;PHP:Function Name;117700445;f12;3888;5;3898;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getNodeType($nodeURL)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Determine the node type from the URL.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$nodeURL&lt;/b&gt;: The node URL.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   hostname;;d4,3889;;b3,0;;m0;;e0;;i0;;o;;k;;l $nodeURL;;p;;x;;n">
</treenode>
<treenode node="_getPGT;PHP:Function Name;117700445;f12;2316;5;2319;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getPGT()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns the Proxy Granting Ticket given by the CAS server.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the Proxy Granting Ticket.;;d4,2317;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_getServerBaseURL;PHP:Function Name;117700445;f12;306;5;320;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getServerBaseURL()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to retrieve the base URL of the CAS server.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   a URL.;;d4,307;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_getServerHostname;PHP:Function Name;117700445;f12;276;5;279;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getServerHostname()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to retrieve the hostname of the CAS server.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the hostname of the CAS server.;;d4,277;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_getServerPort;PHP:Function Name;117700445;f12;286;5;289;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getServerPort()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to retrieve the port of the CAS server.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the port of the CAS server.;;d4,287;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_getServerURI;PHP:Function Name;117700445;f12;296;5;299;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getServerURI()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to retrieve the URI of the CAS server.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   a URI.;;d4,297;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_getUser;PHP:Function Name;117700445;f12;1125;5;1136;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getUser()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns the CAS user&apos;s login name.&#10;&lt;b&gt;warning&lt;/b&gt;: should be called only after CAS_Client::forceAuthentication() or&#10;CAS_Client::isAuthenticated(), otherwise halt with an error.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the login name of the authenticated user;;d4,1126;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_hasAttribute;PHP:Function Name;117700445;f12;1213;5;1217;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _hasAttribute($key)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check whether a specific attribute with a name is available&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$key&lt;/b&gt;: name of attribute&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   is attribute available;;d4,1214;;b3,0;;m0;;e0;;i0;;o;;k;;l $key;;p;;x;;n">
</treenode>
<treenode node="_hasPGT;PHP:Function Name;117700445;f12;2336;5;2339;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _hasPGT()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method tells if a Proxy Granting Ticket was stored.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   if a Proxy Granting Ticket has been stored.;;d4,2337;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_htmlFilterOutput;PHP:Function Name;117700445;f12;70;5;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _htmlFilterOutput($str)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method filters a string by replacing special tokens by appropriate values&#10;and prints it. The corresponding tokens are taken into account:&#10;- __CAS_VERSION__&#10;- __PHPCAS_VERSION__&#10;- __SERVER_BASE_URL__&#10;Used by CAS_Client::PrintHTMLHeader() and CAS_Client::printHTMLFooter().&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: the string to filter and output;;d4,71;;b3,0;;m0;;e0;;i0;;o;;k;;l $str;;p;;x;;n">
</treenode>
<treenode node="_initPGTStorage;PHP:Function Name;117700445;f12;2492;5;2501;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _initPGTStorage()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to initialize the storage of PGT&apos;s.&#10;Halts on error.;;d4,2493;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_isCallbackMode;PHP:Function Name;117700445;f12;2380;5;2383;;;;vpos;;v;;aA;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _isCallbackMode()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns true when the CAs client is running i callback mode,&#10;false otherwise.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   boolean.;;d4,2381;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_isHttps;PHP:Function Name;117700445;f12;3709;5;3722;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _isHttps()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method checks to see if the request is secured via HTTPS&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if https, false otherwise;;d4,3710;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_isLogoutRequest;PHP:Function Name;117700445;f12;1731;5;1734;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _isLogoutRequest()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check of the current request is a logout request&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   is logout request.;;d4,1732;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_loadPGT;PHP:Function Name;117700445;f12;2525;5;2531;;;;vpos;;v;;amul;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _loadPGT($pgt_iou)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method reads a PGT from its Iou and deletes the corresponding&#10;storage entry.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$pgt_iou&lt;/b&gt;: the PGT Iou&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The PGT corresponding to the Iou, false when not found.;;d4,2526;;b3,0;;m0;;e0;;i0;;o;;k;;l $pgt_iou;;p;;x;;n">
</treenode>
<treenode node="_readExtraAttributesCas20;PHP:Function Name;117700445;f12;3401;5;3543;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _readExtraAttributesCas20($success_elements)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method will parse the DOM and pull out the attributes from the XML&#10;payload and put them into an array, then put the array into the session.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$success_elements&lt;/b&gt;: payload of the response&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true when successfull, halt otherwise by calling CAS_Client::_authError().;;d4,3402;;b3,0;;m0;;e0;;i0;;o;;k;;l $success_elements;;p;;x;;n">
</treenode>
<treenode node="_readURL;PHP:Function Name;117700445;f12;2840;5;2890;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _readURL($url, &amp;$headers, &amp;$body, &amp;$err_msg)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to acces a remote URL.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: the URL to access.&#10;    string: &amp;$headers an array containing the HTTP header lines of the response (an empty array on failure).&#10;    string: &amp;$body    the body of the response, as a string (empty on failure).&#10;    string: &amp;$err_msg an error message, filled on failure.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   on success, false otherwise (in this later case, $err_msg contains an error message).;;d4,2841;;b3,0;;m0;;e0;;i0;;o;;k;;l $url;;p;;p;;p;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="_rebroadcast;PHP:Function Name;117700445;f12;3949;5;4025;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _rebroadcast($type)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method rebroadcasts logout/pgtIou requests. Can be LOGOUT,PGTIOU&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$type&lt;/b&gt;: type of rebroadcasting.;;d4,3950;;b3,0;;m0;;e0;;i0;;o;;k;;l $type;;p;;x;;n">
</treenode>
<treenode node="_removeParameterFromQueryString;PHP:Function Name;117700445;f12;3734;5;3742;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _removeParameterFromQueryString($parameterName, $queryString)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Removes a parameter from a query string&#10;&lt;b&gt;link&lt;/b&gt;: http://stackoverflow.com/questions/1842681/regular-expression-to-remove-one-parameter-from-query-string&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$parameterName&lt;/b&gt;: name of parameter&#10;    string &lt;b&gt;$queryString&lt;/b&gt;: query string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   new query string;;d4,3735;;b3,0;;m0;;e0;;i0;;o;;k;;l $parameterName;;p $queryString;;p;;x;;x;;n">
</treenode>
<treenode node="_renameSession;PHP:Function Name;117700445;f12;3765;5;3792;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _renameSession($ticket)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Renaming the session&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$ticket&lt;/b&gt;: name of the ticket;;d4,3766;;b3,0;;m0;;e0;;i0;;o;;k;;l $ticket;;p;;x;;n">
</treenode>
<treenode node="_setCallbackMode;PHP:Function Name;117700445;f12;2369;5;2372;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _setCallbackMode($callback_mode)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method sets/unsets callback mode.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$callback_mode&lt;/b&gt;: true to set callback mode, false otherwise.;;d4,2370;;b3,0;;m0;;e0;;i0;;o;;k;;l $callback_mode;;p;;x;;n">
</treenode>
<treenode node="_setChangeSessionID;PHP:Function Name;117700445;f12;1055;5;1058;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _setChangeSessionID($allowed)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set a parameter whether to allow phpCas to change session_id&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$allowed&lt;/b&gt;: allow phpCas to change session_id;;d4,1056;;b3,0;;m0;;e0;;i0;;o;;k;;l $allowed;;p;;x;;n">
</treenode>
<treenode node="_setPGT;PHP:Function Name;117700445;f12;2326;5;2329;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _setPGT($pgt)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method stores the Proxy Granting Ticket.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$pgt&lt;/b&gt;: The Proxy Granting Ticket.;;d4,2327;;b3,0;;m0;;e0;;i0;;o;;k;;l $pgt;;p;;x;;n">
</treenode>
<treenode node="_setProxies;PHP:Function Name;117700445;f12;3171;5;3184;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _setProxies($proxies)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the Proxy array, probably from persistant storage.&#10;&lt;b&gt;access&lt;/b&gt;: private&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$proxies&lt;/b&gt;: An array of proxies;;d4,3172;;b3,0;;m0;;e0;;i0;;o;;k;;l $proxies;;p;;x;;n">
</treenode>
<treenode node="_setSessionAttributes;PHP:Function Name;117700445;f12;2203;5;2253;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _setSessionAttributes($text_response)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method will parse the DOM and pull out the attributes from the SAML&#10;payload and put them into an array, then put the array into the session.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$text_response&lt;/b&gt;: the SAML payload.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true when successfull and false if no attributes a found;;d4,2204;;b3,0;;m0;;e0;;i0;;o;;k;;l $text_response;;p;;x;;n">
</treenode>
<treenode node="_setUser;PHP:Function Name;117700445;f12;1096;5;1099;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _setUser($user)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method sets the CAS user&apos;s login name.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$user&lt;/b&gt;: the login name of the authenticated user.;;d4,1097;;b3,0;;m0;;e0;;i0;;o;;k;;l $user;;p;;x;;n">
</treenode>
<treenode node="_storePGT;PHP:Function Name;117700445;f12;2509;5;2515;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _storePGT($pgt, $pgt_iou)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method stores a PGT. Halts on error.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$pgt&lt;/b&gt;: the PGT to store&#10;    string &lt;b&gt;$pgt_iou&lt;/b&gt;: its corresponding Iou;;d4,2510;;b3,0;;m0;;e0;;i0;;o;;k;;l $pgt;;p $pgt_iou;;p;;x;;x;;n">
</treenode>
<treenode node="_validatePGT;PHP:Function Name;117700445;f12;2649;5;2698;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _validatePGT(&amp;$validate_url, $text_response, $tree_response)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to validate a PGT;s halt on failure.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string: &amp;$validate_url the URL of the request to the CAS server.&#10;    string &lt;b&gt;$text_response&lt;/b&gt;: the response of the CAS server, as is (XML text);s result of CAS_Client::validateCAS10() or CAS_Client::validateCAS20().&#10;    string &lt;b&gt;$tree_response&lt;/b&gt;: the response of the CAS server, as a DOM XML tree;s result of CAS_Client::validateCAS10() or CAS_Client::validateCAS20().&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true when successfull and issue a CAS_AuthenticationException and false on an error;;d4,2650;;b3,0;;m0;;e0;;i0;;o;;k;;l;;p $text_response;;p $tree_response;;p;;x;;x;;x;;n">
</treenode>
<treenode node="_wasPreviouslyAuthenticated;PHP:Function Name;117700445;f12;1561;5;1653;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _wasPreviouslyAuthenticated()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method tells if the user has already been (previously) authenticated&#10;by looking into the session variables.&#10;&lt;b&gt;note&lt;/b&gt;: This function switches to callback mode when needed.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   when the user has already been authenticated;s false otherwise.;;d4,1562;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="addRebroadcastHeader;PHP:Function Name;117700445;f11;3928;5;3935;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addRebroadcastHeader($header)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to add header parameters when rebroadcasting&#10;pgtIou/pgtId or logoutRequest.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$header&lt;/b&gt;: Header to send when rebroadcasting.;;d4,3929;;b1,0;;m0;;e0;;i0;;o;;k;;l $header;;p;;x;;n">
</treenode>
<treenode node="addRebroadcastNode;PHP:Function Name;117700445;f11;3905;5;3915;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addRebroadcastNode($rebroadcastNodeUrl)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Store the rebroadcast node for pgtIou/pgtId and logout requests.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$rebroadcastNodeUrl&lt;/b&gt;: The rebroadcast node URL.;;d4,3906;;b1,0;;m0;;e0;;i0;;o;;k;;l $rebroadcastNodeUrl;;p;;x;;n">
</treenode>
<treenode node="checkAuthentication;PHP:Function Name;117700445;f11;1322;5;1373;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    checkAuthentication()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is called to check whether the user is authenticated or not.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   when the user is authenticated, false when a previous gateway login failed or  the function will not return if the user is redirected to the cas server for a gateway login attempt;;d4,1323;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ensureAuthenticationCallSuccessful;PHP:Function Name;117700445;f11;795;5;807;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ensureAuthenticationCallSuccessful()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Ensure that authentication was checked. Terminate with exception if no&#10;authentication was performed&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceBeforeAuthenticationCallException;;d4,796;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ensureIsProxy;PHP:Function Name;117700445;f11;724;5;729;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ensureIsProxy()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Ensure that this is actually a proxy object or fail with an exception&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceBeforeProxyException;;d4,725;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="forceAuthentication;PHP:Function Name;117700445;f11;1270;5;1291;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    forceAuthentication()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is called to be sure that the user is authenticated. When not&#10;authenticated, halt by redirecting to the CAS server;s otherwise return true.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   when the user is authenticated;s otherwise halt.;;d4,1271;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAllowedProxyChains;PHP:Function Name;117700445;f11;3196;5;3203;;;;vpos;;v;;aCAS_ProxyChain_AllowedList;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAllowedProxyChains()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer the CAS_ProxyChain_AllowedList object for this client.;;d4,3197;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAttribute;PHP:Function Name;117700445;f11;1226;5;1234;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAttribute($key)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get a specific attribute by name&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$key&lt;/b&gt;: name of attribute&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   attribute values;;d4,1227;;b1,0;;m0;;e0;;i0;;o;;k;;l $key;;p;;x;;n">
</treenode>
<treenode node="getAttributes;PHP:Function Name;117700445;f11;1162;5;1176;;;;vpos;;v;;aarry;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAttributes()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get an key values arry of attributes&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of attributes;;d4,1163;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAuthenticationCallerFile;PHP:Function Name;117700445;f11;817;5;821;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAuthenticationCallerFile()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer information about the authentication caller.&#10;Throws a CAS_OutOfSequenceException if wasAuthenticationCalled() is false&#10;and markAuthenticationCall() didn&apos;t happen.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Keys are &apos;file&apos;, &apos;line&apos;, and &apos;method&apos;;;d4,818;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAuthenticationCallerLine;PHP:Function Name;117700445;f11;831;5;835;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAuthenticationCallerLine()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer information about the authentication caller.&#10;Throws a CAS_OutOfSequenceException if wasAuthenticationCalled() is false&#10;and markAuthenticationCall() didn&apos;t happen.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Keys are &apos;file&apos;, &apos;line&apos;, and &apos;method&apos;;;d4,832;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAuthenticationCallerMethod;PHP:Function Name;117700445;f11;845;5;849;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAuthenticationCallerMethod()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer information about the authentication caller.&#10;Throws a CAS_OutOfSequenceException if wasAuthenticationCalled() is false&#10;and markAuthenticationCall() didn&apos;t happen.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Keys are &apos;file&apos;, &apos;line&apos;, and &apos;method&apos;;;d4,846;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getChangeSessionID;PHP:Function Name;117700445;f11;1065;5;1068;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getChangeSessionID()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get whether phpCas is allowed to change session_id;;d4,1066;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getLangObj;PHP:Function Name;117700445;f11;214;5;218;;;;vpos;;v;;aCAS_Languages_LanguageInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLangObj()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Create the language&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   object implementing the class;;d4,215;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getProxiedService;PHP:Function Name;117700445;f11;2933;5;2971;;;;vpos;;v;;aCAS_ProxiedService;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getProxiedService($type)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer a proxy-authenticated service handler.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException If the service type is unknown.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$type&lt;/b&gt;: The service type. One of: PHPCAS_PROXIED_SERVICE_HTTP_GET, PHPCAS_PROXIED_SERVICE_HTTP_POST, PHPCAS_PROXIED_SERVICE_IMAP;;d4,2934;;b1,0;;m0;;e0;;i0;;o;;k;;l $type;;p;;x;;n">
</treenode>
<treenode node="getProxies;PHP:Function Name;117700445;f11;3159;5;3162;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getProxies()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer an array of proxies that are sitting in front of this application.&#10;This method will only return a non-empty array if we have received and&#10;validated a Proxy Ticket.&#10;&lt;b&gt;access&lt;/b&gt;: public;;d4,3160;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getServerLoginURL;PHP:Function Name;117700445;f11;332;5;353;;;;vpos;;v;;aa;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getServerLoginURL($gateway = false, $renew = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to retrieve the login URL of the CAS server.&#10;&lt;b&gt;note&lt;/b&gt;: It is recommended that CAS implementations ignore the &quot;gateway&quot;&#10;parameter if &quot;renew&quot; is set&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$gateway&lt;/b&gt;: true to check authentication, false to force it&#10;    bool &lt;b&gt;$renew&lt;/b&gt;: true to force the authentication with the CAS server&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   URL.;;d4,333;;b1,0;;m0;;e0;;i0;;o;;k;;l $gateway;;p $renew;;p;;x;;x;;n">
</treenode>
<treenode node="getServerLogoutURL;PHP:Function Name;117700445;f11;537;5;545;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getServerLogoutURL()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to retrieve the logout URL of the CAS server.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   logout URL.;;d4,538;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getServerProxyURL;PHP:Function Name;117700445;f11;514;5;530;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getServerProxyURL()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to retrieve the proxy URL of the CAS server.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   proxy URL.;;d4,515;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getServerProxyValidateURL;PHP:Function Name;117700445;f11;483;5;507;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getServerProxyValidateURL()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to retrieve the proxy validating URL of the CAS server.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   proxyValidate URL.;;d4,484;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getServerSamlValidateURL;PHP:Function Name;117700445;f11;462;5;476;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getServerSamlValidateURL()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to retrieve the SAML validating URL of the CAS server.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   samlValidate URL.;;d4,463;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getServerServiceValidateURL;PHP:Function Name;117700445;f11;428;5;455;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getServerServiceValidateURL()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to retrieve the service validating URL of the CAS server.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   serviceValidate URL.;;d4,429;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getServerVersion;PHP:Function Name;117700445;f11;266;5;269;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getServerVersion()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to retrieve the version of the CAS server.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the version of the CAS server.;;d4,267;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getTicket;PHP:Function Name;117700445;f11;1892;5;1895;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTicket()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns the Service Ticket provided in the URL of the request.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   service ticket.;;d4,1893;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getURL;PHP:Function Name;117700445;f11;3613;5;3643;;;;vpos;;v;;aThe;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getURL()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns the URL of the current request (without any ticket&#10;CGI parameter).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   URL;;d4,3614;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getUser;PHP:Function Name;117700445;f11;1109;5;1115;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getUser()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns the CAS user&apos;s login name.&#10;&lt;b&gt;warning&lt;/b&gt;: should be called only after CAS_Client::forceAuthentication() or&#10;CAS_Client::isAuthenticated(), otherwise halt with an error.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the login name of the authenticated user;;d4,1110;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="handleLogoutRequests;PHP:Function Name;117700445;f11;1744;5;1860;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    handleLogoutRequests($check_client = true, $allowed_clients = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method handles logout requests.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$check_client&lt;/b&gt;: true to check the client bofore handling the request, false not to perform any access control. True by default.&#10;    bool &lt;b&gt;$allowed_clients&lt;/b&gt;: an array of host names allowed to send logout requests.;;d4,1745;;b1,0;;m0;;e0;;i0;;o;;k;;l $check_client;;p $allowed_clients;;p;;x;;x;;n">
</treenode>
<treenode node="hasAttribute;PHP:Function Name;117700445;f11;1198;5;1204;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasAttribute($key)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check whether a specific attribute with a name is available&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$key&lt;/b&gt;: name of attribute&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   is attribute available;;d4,1199;;b1,0;;m0;;e0;;i0;;o;;k;;l $key;;p;;x;;n">
</treenode>
<treenode node="hasAttributes;PHP:Function Name;117700445;f11;1183;5;1189;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasAttributes()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check whether attributes are available&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   attributes available;;d4,1184;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="hasTicket;PHP:Function Name;117700445;f11;1912;5;1915;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasTicket()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method tells if a Service Ticket was stored.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   if a Service Ticket has been stored.;;d4,1913;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="initializeProxiedService;PHP:Function Name;117700445;f11;2986;5;3007;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    initializeProxiedService(CAS_ProxiedService $proxiedService)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Initialize a proxied-service handler with the proxy-ticket it should use.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_ProxyTicketException If there is a proxy-ticket failure.&#10;The code of the Exception will be one of:&#10;PHPCAS_SERVICE_PT_NO_SERVER_RESPONSE&#10;PHPCAS_SERVICE_PT_BAD_SERVER_RESPONSE&#10;PHPCAS_SERVICE_PT_FAILURE&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_ProxiedService_Exception If there is a failure getting the&#10;url from the proxied service.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    CAS_ProxiedService &lt;b&gt;$proxiedService&lt;/b&gt;: service handler;;d4,2987;;b1,0;;m0;;e0;;i0;;o;;k;;l $proxiedService;;pCAS_ProxiedService;;x;;n">
</treenode>
<treenode node="isAuthenticated;PHP:Function Name;117700445;f11;1384;5;1541;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isAuthenticated($renew = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is called to check if the user is authenticated (previously or by&#10;tickets given in the URL).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$renew&lt;/b&gt;: true to force the authentication with the CAS server&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   when the user is authenticated. Also may redirect to the same URL without the ticket.;;d4,1385;;b1,0;;m0;;e0;;i0;;o;;k;;l $renew;;p;;x;;n">
</treenode>
<treenode node="isProxy;PHP:Function Name;117700445;f11;2287;5;2290;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isProxy()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Tells if a CAS client is a CAS proxy or not&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   when the CAS client is a CAs proxy, false otherwise;;d4,2288;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="isSessionAuthenticated;PHP:Function Name;117700445;f11;1548;5;1551;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isSessionAuthenticated()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method tells if the current session is authenticated.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   if authenticated based soley on $_SESSION variable;;d4,1549;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="logout;PHP:Function Name;117700445;f11;1689;5;1724;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    logout($params)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to logout from CAS.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$params&lt;/b&gt;: an array that contains the optional url and service parameters that will be passed to the CAS server;;d4,1690;;b1,0;;m0;;e0;;i0;;o;;k;;l $params;;p;;x;;n">
</treenode>
<treenode node="markAuthenticationCall;PHP:Function Name;117700445;f11;738;5;748;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    markAuthenticationCall($auth)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Mark the caller of authentication. This will help client integraters determine&#10;problems with their code flow if they call a function such as getUser() before&#10;authentication has occurred.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$auth&lt;/b&gt;: True if authentication was successful, false otherwise.;;d4,739;;b1,0;;m0;;e0;;i0;;o;;k;;l $auth;;p;;x;;n">
</treenode>
<treenode node="printHTMLFooter;PHP:Function Name;117700445;f11;123;5;135;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    printHTMLFooter()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method prints the footer of the HTML output (after filtering). If&#10;CAS_Client::setHTMLFooter() was not used, a default footer is output.&#10;&lt;b&gt;see&lt;/b&gt;: _htmlFilterOutput();;d4,124;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="printHTMLHeader;PHP:Function Name;117700445;f11;95;5;106;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    printHTMLHeader($title)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method prints the header of the HTML output (after filtering). If&#10;CAS_Client::setHTMLHeader() was not used, a default header is output.&#10;&lt;b&gt;see&lt;/b&gt;: _htmlFilterOutput()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$title&lt;/b&gt;: the title of the page;;d4,96;;b1,0;;m0;;e0;;i0;;o;;k;;l $title;;p;;x;;n">
</treenode>
<treenode node="redirectToCas;PHP:Function Name;117700445;f11;1663;5;1681;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    redirectToCas($gateway = false, $renew = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to redirect the client to the CAS server.&#10;It is used by CAS_Client::forceAuthentication() and&#10;CAS_Client::checkAuthentication().&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$gateway&lt;/b&gt;: true to check authentication, false to force it&#10;    bool &lt;b&gt;$renew&lt;/b&gt;: true to force the authentication with the CAS server;;d4,1664;;b1,0;;m0;;e0;;i0;;o;;k;;l $gateway;;p $renew;;p;;x;;x;;n">
</treenode>
<treenode node="renewAuthentication;PHP:Function Name;117700445;f11;1243;5;1262;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    renewAuthentication()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is called to renew the authentication of the user&#10;If the user is authenticated, renew the connection&#10;If not, redirect to CAS&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   when the user is authenticated;s otherwise halt.;;d4,1244;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="retrievePT;PHP:Function Name;117700445;f11;2713;5;2814;;;;vpos;;v;;aa;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    retrievePT($target_service, &amp;$err_code, &amp;$err_msg)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to retrieve PT&apos;s from the CAS server thanks to a PGT.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$target_service&lt;/b&gt;: the service to ask for with the PT.&#10;    string: &amp;$err_code      an error code (PHPCAS_SERVICE_OK on success).&#10;    string: &amp;$err_msg       an error message (empty on success).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Proxy Ticket, or false on error.;;d4,2714;;b1,0;;m0;;e0;;i0;;o;;k;;l $target_service;;p;;p;;p;;x;;x;;x;;n">
</treenode>
<treenode node="serviceMail;PHP:Function Name;117700445;f11;3076;5;3120;;;;vpos;;v;;aobject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    serviceMail($url, $serviceUrl, $flags, &amp;$err_code, &amp;$err_msg, &amp;$pt)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to access an IMAP/POP3/NNTP service.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: a string giving the URL of the service, including the mailing box for IMAP URLs, as accepted by imap_open().&#10;    string &lt;b&gt;$serviceUrl&lt;/b&gt;: a string giving for CAS retrieve Proxy ticket&#10;    string &lt;b&gt;$flags&lt;/b&gt;: options given to imap_open().&#10;    int: &amp;$err_code  an error code Possible values are PHPCAS_SERVICE_OK (on success), PHPCAS_SERVICE_PT_NO_SERVER_RESPONSE, PHPCAS_SERVICE_PT_BAD_SERVER_RESPONSE, PHPCAS_SERVICE_PT_FAILURE, PHPCAS_SERVICE_NOT_AVAILABLE.&#10;    string: &amp;$err_msg   an error message on failure&#10;    string: &amp;$pt        the Proxy Ticket (PT) retrieved from the CAS server to access the URL on success, false on error).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   an IMAP stream on success, false otherwise (in this later case, $err_code gives the reason why it failed and $err_msg contains an error message).;;d4,3077;;b1,0;;m0;;e0;;i0;;o;;k;;l $url;;p $serviceUrl;;p $flags;;p;;p;;p;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="serviceWeb;PHP:Function Name;117700445;f11;3023;5;3055;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    serviceWeb($url, &amp;$err_code, &amp;$output)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to access an HTTP[S] service.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: the service to access.&#10;    int: &amp;$err_code an error code Possible values are PHPCAS_SERVICE_OK (on success), PHPCAS_SERVICE_PT_NO_SERVER_RESPONSE, PHPCAS_SERVICE_PT_BAD_SERVER_RESPONSE, PHPCAS_SERVICE_PT_FAILURE, PHPCAS_SERVICE_NOT_AVAILABLE.&#10;    string: &amp;$output   the output of the service (also used to give an error message on failure).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   on success, false otherwise (in this later case, $err_code gives the reason why it failed and $output contains an error message).;;d4,3024;;b1,0;;m0;;e0;;i0;;o;;k;;l $url;;p;;p;;p;;x;;x;;x;;n">
</treenode>
<treenode node="setAttributes;PHP:Function Name;117700445;f11;1152;5;1155;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setAttributes($attributes)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set an array of attributes&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$attributes&lt;/b&gt;: a key value array of attributes;;d4,1153;;b1,0;;m0;;e0;;i0;;o;;k;;l $attributes;;p;;x;;n">
</treenode>
<treenode node="setBaseURL;PHP:Function Name;117700445;f11;3652;5;3660;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setBaseURL($url)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method sets the base URL of the CAS server.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: the base URL&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   base url;;d4,3653;;b1,0;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
<treenode node="setCacheTimesForAuthRecheck;PHP:Function Name;117700445;f11;1306;5;1313;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCacheTimesForAuthRecheck($n)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the number of times authentication will be cached before rechecked.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$n&lt;/b&gt;: number of times to wait for a recheck;;d4,1307;;b1,0;;m0;;e0;;i0;;o;;k;;l $n;;p;;x;;n">
</treenode>
<treenode node="setCallbackURL;PHP:Function Name;117700445;f11;2423;5;2433;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCallbackURL($url)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method sets the callback url.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: url to set callback;;d4,2424;;b1,0;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
<treenode node="setCasAttributeParserCallback;PHP:Function Name;117700445;f11;653;5;657;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCasAttributeParserCallback($function, array $additionalArgs = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set a callback function to be run when parsing CAS attributes&#10;The callback function will be passed a XMLNode as its first parameter,&#10;followed by any $additionalArgs you pass.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$function&lt;/b&gt;: callback function to call&#10;    array &lt;b&gt;$additionalArgs&lt;/b&gt;: optional array of arguments;;d4,654;;b1,0;;m0;;e0;;i0;;o;;k;;l $function;;p $additionalArgs;;p;;x;;x;;n">
</treenode>
<treenode node="setCasServerCACert;PHP:Function Name;117700445;f11;1957;5;1974;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCasServerCACert($cert, $validate_cn)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the CA certificate of the CAS server.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$cert&lt;/b&gt;: the PEM certificate file name of the CA that emited the cert of the server&#10;    bool &lt;b&gt;$validate_cn&lt;/b&gt;: valiate CN of the CAS server certificate;;d4,1958;;b1,0;;m0;;e0;;i0;;o;;k;;l $cert;;p $validate_cn;;p;;x;;x;;n">
</treenode>
<treenode node="setExtraCurlOption;PHP:Function Name;117700445;f11;575;5;578;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setExtraCurlOption($key, $value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to set additional user curl options.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$key&lt;/b&gt;: name of the curl option&#10;    string &lt;b&gt;$value&lt;/b&gt;: value of the curl option;;d4,576;;b1,0;;m0;;e0;;i0;;o;;k;;l $key;;p $value;;p;;x;;x;;n">
</treenode>
<treenode node="setHTMLFooter;PHP:Function Name;117700445;f11;157;5;165;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setHTMLFooter($footer)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method set the HTML footer used for all outputs.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$footer&lt;/b&gt;: the HTML footer.;;d4,158;;b1,0;;m0;;e0;;i0;;o;;k;;l $footer;;p;;x;;n">
</treenode>
<treenode node="setHTMLHeader;PHP:Function Name;117700445;f11;142;5;150;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setHTMLHeader($header)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method set the HTML header used for all outputs.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$header&lt;/b&gt;: the HTML header.;;d4,143;;b1,0;;m0;;e0;;i0;;o;;k;;l $header;;p;;x;;n">
</treenode>
<treenode node="setLang;PHP:Function Name;117700445;f11;190;5;207;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setLang($lang)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to set the language used by phpCAS.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$lang&lt;/b&gt;: representing the language.;;d4,191;;b1,0;;m0;;e0;;i0;;o;;k;;l $lang;;p;;x;;n">
</treenode>
<treenode node="setNoCasServerValidation;PHP:Function Name;117700445;f11;1979;5;1982;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setNoCasServerValidation()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set no SSL validation for the CAS server.;;d4,1980;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="setNoClearTicketsFromUrl;PHP:Function Name;117700445;f11;631;5;634;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setNoClearTicketsFromUrl()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Configure the client to not send redirect headers and call exit() on&#10;authentication success. The normal redirect is used to remove the service&#10;ticket from the client&apos;s URL, but for running unit tests we need to&#10;continue without exiting.&#10;Needed for testing authentication;;d4,632;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="setPGTStorage;PHP:Function Name;117700445;f11;2539;5;2556;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPGTStorage($storage)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method can be used to set a custom PGT storage object.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    CAS_PGTStorage_AbstractStorage &lt;b&gt;$storage&lt;/b&gt;: a PGT storage object that inherits from the CAS_PGTStorage_AbstractStorage class;;d4,2540;;b1,0;;m0;;e0;;i0;;o;;k;;l $storage;;p;;x;;n">
</treenode>
<treenode node="setPGTStorageDb;PHP:Function Name;117700445;f11;2573;5;2610;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPGTStorageDb(&#10;        $dsn_or_pdo,&#10;        $username = &apos;&apos;,&#10;        $password = &apos;&apos;,&#10;        $table = &apos;&apos;,&#10;        $driver_options = null&#10;    )&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to tell phpCAS to store the response of the&#10;CAS server to PGT requests in a database.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$dsn_or_pdo&lt;/b&gt;: a dsn string to use for creating a PDO object or a PDO object&#10;    string &lt;b&gt;$username&lt;/b&gt;: the username to use when connecting to the database&#10;    string &lt;b&gt;$password&lt;/b&gt;: the password to use when connecting to the database&#10;    string &lt;b&gt;$table&lt;/b&gt;: the table to use for storing and retrieving PGTs&#10;    string &lt;b&gt;$driver_options&lt;/b&gt;: any driver options to use when connecting to the database;;d6,2579;;b1,0;;m0;;e0;;i0;;o;;k;;l $dsn_or_pdo;;p $username;;p $password;;p $table;;p $driver_options;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="setPGTStorageFile;PHP:Function Name;117700445;f11;2618;5;2630;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPGTStorageFile($path = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to tell phpCAS to store the response of the&#10;CAS server to PGT requests onto the filesystem.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$path&lt;/b&gt;: the path where the PGT&apos;s should be stored;;d4,2619;;b1,0;;m0;;e0;;i0;;o;;k;;l $path;;p;;x;;n">
</treenode>
<treenode node="setPostAuthenticateCallback;PHP:Function Name;117700445;f11;683;5;687;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPostAuthenticateCallback($function, array $additionalArgs = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set a callback function to be run when a user authenticates.&#10;The callback function will be passed a $logoutTicket as its first parameter,&#10;followed by any $additionalArgs you pass. The $logoutTicket parameter is an&#10;opaque string that can be used to map a session-id to the logout request&#10;in order to support single-signout in applications that manage their own&#10;sessions (rather than letting phpCAS start the session).&#10;phpCAS::forceAuthentication() will always exit and forward client unless&#10;they are already authenticated. To perform an action at the moment the user&#10;logs in (such as registering an account, performing logging, etc), register&#10;a callback function here.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$function&lt;/b&gt;: callback function to call&#10;    array &lt;b&gt;$additionalArgs&lt;/b&gt;: optional array of arguments;;d4,684;;b1,0;;m0;;e0;;i0;;o;;k;;l $function;;p $additionalArgs;;p;;x;;x;;n">
</treenode>
<treenode node="setRequestImplementation;PHP:Function Name;117700445;f11;605;5;615;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setRequestImplementation($className)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Override the default implementation used to make web requests in readUrl().&#10;This class must implement the CAS_Request_RequestInterface.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$className&lt;/b&gt;: name of the RequestImplementation class;;d4,606;;b1,0;;m0;;e0;;i0;;o;;k;;l $className;;p;;x;;n">
</treenode>
<treenode node="setServerLoginURL;PHP:Function Name;117700445;f11;362;5;370;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setServerLoginURL($url)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method sets the login URL of the CAS server.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: the login URL&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   login url;;d4,363;;b1,0;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
<treenode node="setServerLogoutURL;PHP:Function Name;117700445;f11;554;5;562;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setServerLogoutURL($url)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method sets the logout URL of the CAS server.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: the logout URL&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   logout url;;d4,555;;b1,0;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
<treenode node="setServerProxyValidateURL;PHP:Function Name;117700445;f11;396;5;404;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setServerProxyValidateURL($url)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method sets the proxyValidate URL of the CAS server.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: the proxyValidate URL&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   proxyValidate URL;;d4,397;;b1,0;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
<treenode node="setServerSamlValidateURL;PHP:Function Name;117700445;f11;413;5;421;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setServerSamlValidateURL($url)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method sets the samlValidate URL of the CAS server.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: the samlValidate URL&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   samlValidate URL;;d4,414;;b1,0;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
<treenode node="setServerServiceValidateURL;PHP:Function Name;117700445;f11;379;5;387;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setServerServiceValidateURL($url)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method sets the serviceValidate URL of the CAS server.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: the serviceValidate URL&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   serviceValidate URL;;d4,380;;b1,0;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
<treenode node="setSingleSignoutCallback;PHP:Function Name;117700445;f11;709;5;713;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setSingleSignoutCallback($function, array $additionalArgs = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set a callback function to be run when a single-signout request is received.&#10;The callback function will be passed a $logoutTicket as its first parameter,&#10;followed by any $additionalArgs you pass. The $logoutTicket parameter is an&#10;opaque string that can be used to map a session-id to the logout request in&#10;order to support single-signout in applications that manage their own sessions&#10;(rather than letting phpCAS start and destroy the session).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$function&lt;/b&gt;: callback function to call&#10;    array &lt;b&gt;$additionalArgs&lt;/b&gt;: optional array of arguments;;d4,710;;b1,0;;m0;;e0;;i0;;o;;k;;l $function;;p $additionalArgs;;p;;x;;x;;n">
</treenode>
<treenode node="setTicket;PHP:Function Name;117700445;f11;1902;5;1905;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setTicket($st)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method stores the Service Ticket.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$st&lt;/b&gt;: The Service Ticket.;;d4,1903;;b1,0;;m0;;e0;;i0;;o;;k;;l $st;;p;;x;;n">
</treenode>
<treenode node="setURL;PHP:Function Name;117700445;f11;3597;5;3605;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setURL($url)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method sets the URL of the current request&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: url to set for service;;d4,3598;;b1,0;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
<treenode node="validateCAS10;PHP:Function Name;117700445;f11;1999;5;2062;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    validateCAS10(&amp;$validate_url, &amp;$text_response, &amp;$tree_response, $renew = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to validate a CAS 1,0 ticket;s halt on failure, and&#10;sets $validate_url, $text_reponse and $tree_response on success.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string: &amp;$validate_url  reference to the the URL of the request to the CAS server.&#10;    string: &amp;$text_response reference to the response of the CAS server, as is (XML text).&#10;    string: &amp;$tree_response reference to the response of the CAS server, as a DOM XML tree.&#10;    bool &lt;b&gt;$renew&lt;/b&gt;: true to force the authentication with the CAS server&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true when successfull and issue a CAS_AuthenticationException and false on an error;;d4,2000;;b1,0;;m0;;e0;;i0;;o;;k;;l;;p;;p;;p $renew;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="validateCAS20;PHP:Function Name;117700445;f11;3226;5;3390;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    validateCAS20(&amp;$validate_url, &amp;$text_response, &amp;$tree_response, $renew = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to validate a cas 2.0 ST or PT;s halt on failure&#10;Used for all CAS 2.0 validations&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string: &amp;$validate_url  the url of the reponse&#10;    string: &amp;$text_response the text of the repsones&#10;    string: &amp;$tree_response the domxml tree of the respones&#10;    bool &lt;b&gt;$renew&lt;/b&gt;: true to force the authentication with the CAS server&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true when successfull and issue a CAS_AuthenticationException and false on an error;;d4,3227;;b1,0;;m0;;e0;;i0;;o;;k;;l;;p;;p;;p $renew;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="validateSA;PHP:Function Name;117700445;f11;2091;5;2193;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    validateSA(&amp;$validate_url, &amp;$text_response, &amp;$tree_response, $renew = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to validate a SAML TICKET;s halt on failure, and sets&#10;$validate_url, $text_reponse and $tree_response on success. These&#10;parameters are used later by CAS_Client::_validatePGT() for CAS proxies.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string: &amp;$validate_url  reference to the the URL of the request to the CAS server.&#10;    string: &amp;$text_response reference to the response of the CAS server, as is (XML text).&#10;    string: &amp;$tree_response reference to the response of the CAS server, as a DOM XML tree.&#10;    bool &lt;b&gt;$renew&lt;/b&gt;: true to force the authentication with the CAS server&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true when successfull and issue a CAS_AuthenticationException and false on an error;;d4,2092;;b1,0;;m0;;e0;;i0;;o;;k;;l;;p;;p;;p $renew;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="wasAuthenticationCallSuccessful;PHP:Function Name;117700445;f11;783;5;787;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    wasAuthenticationCallSuccessful()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer the result of the authentication call.&#10;Throws a CAS_OutOfSequenceException if wasAuthenticationCalled() is false&#10;and markAuthenticationCall() didn&apos;t happen.;;d4,784;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="wasAuthenticationCalled;PHP:Function Name;117700445;f11;757;5;760;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    wasAuthenticationCalled()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer true if authentication has been checked.;;d4,758;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_allowed_proxy_chains;PHP:Var Name;117700445;f41;3189;63;3189;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A container of patterns to be allowed as proxies in front of the cas client.;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_attributes;PHP:Var Name;117700445;f18;1145;30;1145;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The Authenticated users attributes. Written by&#10;CAS_Client::setAttributes(), read by CAS_Client::getAttributes().&#10;&lt;b&gt;attention&lt;/b&gt;: client applications should use phpCAS::getAttributes().&#10;&lt;b&gt;hideinitializer&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_authentication_caller;PHP:Var Name;117700445;f19;750;42;750;;;;vpos;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_cache_times_for_auth_recheck;PHP:Var Name;117700445;f16;1299;46;1299;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    An integer that gives the number of times authentication will be cached&#10;before rechecked.&#10;&lt;b&gt;hideinitializer&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_callback_mode;PHP:Var Name;117700445;f17;2362;32;2362;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    a boolean to know if the CAS client is running in callback mode. Written by&#10;CAS_Client::setCallBackMode(), read by CAS_Client::_isCallbackMode().&#10;&lt;b&gt;hideinitializer&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_callback_url;PHP:Var Name;117700445;f19;2392;33;2392;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    the URL that should be used for the PGT callback (in fact the URL of the&#10;current request without any CGI parameter). Written and read by&#10;CAS_Client::_getCallbackURL().&#10;&lt;b&gt;hideinitializer&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_casAttributeParserCallbackArgs;PHP:Var Name;117700445;f18;642;50;642;;;;vpos;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_casAttributeParserCallbackFunction;PHP:Var Name;117700445;f12;639;48;639;;;;vposcallback;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_cas_server_ca_cert;PHP:Var Name;117700445;f20;1932;40;1932;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    the certificate of the CAS server CA.&#10;&lt;b&gt;hideinitializer&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_cas_server_cn_validate;PHP:Var Name;117700445;f17;1941;41;1941;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    validate CN of the CAS server certificate&#10;&lt;b&gt;hideinitializer&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_change_session_id;PHP:Var Name;117700445;f17;1048;36;1048;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A variable to whether phpcas will use its own session handling. Default = true&#10;&lt;b&gt;hideinitializer&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_clearTicketsFromUrl;PHP:Var Name;117700445;f17;621;38;621;;;;vposboolean;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_curl_options;PHP:Var Name;117700445;f18;567;32;567;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    An array to store extra curl options.;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_lang;PHP:Var Name;117700445;f19;183;25;183;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A string corresponding to the language used by phpCAS. Written by&#10;CAS_Client::setLang(), read by CAS_Client::getLang().&#10;&lt;b&gt;note&lt;/b&gt;: debugging information is always in english (debug purposes only).;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_no_cas_server_validation;PHP:Var Name;117700445;f17;1948;43;1948;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set to true not to validate the CAS server.&#10;&lt;b&gt;hideinitializer&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_output_footer;PHP:Var Name;117700445;f19;115;34;115;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A string used to print the footer of HTML pages. Written by&#10;CAS_Client::setHTMLFooter(), read by printHTMLFooter().&#10;&lt;b&gt;hideinitializer&lt;/b&gt;&#10;&lt;b&gt;see&lt;/b&gt;: CAS_Client::setHTMLFooter, CAS_Client::printHTMLFooter();;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_output_header;PHP:Var Name;117700445;f19;85;34;85;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A string used to print the header of HTML pages. Written by&#10;CAS_Client::setHTMLHeader(), read by CAS_Client::printHTMLHeader().&#10;&lt;b&gt;hideinitializer&lt;/b&gt;&#10;&lt;b&gt;see&lt;/b&gt;: CAS_Client::setHTMLHeader, CAS_Client::printHTMLHeader();;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_pgt;PHP:Var Name;117700445;f19;2309;24;2309;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    the Proxy Grnting Ticket given by the CAS server (empty otherwise).&#10;Written by CAS_Client::_setPGT(), read by CAS_Client::_getPGT() and&#10;CAS_Client::_hasPGT().&#10;&lt;b&gt;hideinitializer&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_pgt_storage;PHP:Var Name;117700445;f45;2486;58;2486;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    an instance of a class inheriting of PGTStorage, used to deal with PGT&#10;storage. Created by CAS_Client::setPGTStorageFile(), used&#10;by CAS_Client::setPGTStorageFile() and CAS_Client::_initPGTStorage().&#10;&lt;b&gt;hideinitializer&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_postAuthenticateCallbackArgs;PHP:Var Name;117700445;f18;664;48;664;;;;vpos;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_postAuthenticateCallbackFunction;PHP:Var Name;117700445;f12;661;46;661;;;;vpos;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_proxies;PHP:Var Name;117700445;f18;3148;27;3148;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This array will store a list of proxies in front of this application. This&#10;property will only be populated if this script is being proxied rather than&#10;accessed directly.&#10;It is set in CAS_Client::validateCAS20() and can be read by&#10;CAS_Client::getProxies()&#10;&lt;b&gt;access&lt;/b&gt;: private;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_proxy;PHP:Var Name;117700445;f17;2275;24;2275;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A boolean telling if the client is a CAS proxy or not. Written by&#10;CAS_Client::CAS_Client(), read by CAS_Client::isProxy().;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_rebroadcast;PHP:Var Name;117700445;f17;3870;30;3870;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Boolean of whether to rebroadcast pgtIou/pgtId and logoutRequest, and&#10;array of the nodes.;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_rebroadcast_headers;PHP:Var Name;117700445;f18;3920;39;3920;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    An array to store extra rebroadcast curl options.;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_rebroadcast_nodes;PHP:Var Name;117700445;f18;3872;37;3872;;;;vpos;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_requestImplementation;PHP:Var Name;117700445;f19;597;42;597;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The class to instantiate for making web requests in readUrl().&#10;The class specified must implement the CAS_Request_RequestInterface.&#10;By default CAS_Request_CurlRequest is used, but this may be overridden to&#10;supply alternate request mechanisms for testing.;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_server;PHP:Var Name;117700445;f18;254;26;254;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    a record to store information about the CAS server.&#10;- $_server[&apos;version&apos;]: the version of the CAS server&#10;- $_server[&apos;hostname&apos;]: the hostname of the CAS server&#10;- $_server[&apos;port&apos;]: the port the CAS server is running on&#10;- $_server[&apos;uri&apos;]: the base URI the CAS server is responding on&#10;- $_server[&apos;base_url&apos;]: the base URL of the CAS server&#10;- $_server[&apos;login_url&apos;]: the login URL of the CAS server&#10;- $_server[&apos;service_validate_url&apos;]: the service validating URL of the&#10;CAS server&#10;- $_server[&apos;proxy_url&apos;]: the proxy URL of the CAS server&#10;- $_server[&apos;proxy_validate_url&apos;]: the proxy validating URL of the CAS server&#10;- $_server[&apos;logout_url&apos;]: the logout URL of the CAS server&#10;$_server[&apos;version&apos;], $_server[&apos;hostname&apos;], $_server[&apos;port&apos;] and&#10;$_server[&apos;uri&apos;] are written by CAS_Client::CAS_Client(), read by&#10;CAS_Client::getServerVersion(), CAS_Client::_getServerHostname(),&#10;CAS_Client::_getServerPort() and CAS_Client::_getServerURI().&#10;The other fields are written and read by CAS_Client::_getServerBaseURL(),&#10;CAS_Client::getServerLoginURL(), CAS_Client::getServerServiceValidateURL(),&#10;CAS_Client::getServerProxyValidateURL() and CAS_Client::getServerLogoutURL().&#10;&lt;b&gt;hideinitializer&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_serviceCookieJar;PHP:Var Name;117700445;f28;2280;46;2280;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Handler for managing service cookies.;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_signoutCallbackArgs;PHP:Var Name;117700445;f18;695;39;695;;;;vpos;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_signoutCallbackFunction;PHP:Var Name;117700445;f12;692;37;692;;;;vposcallback;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_ticket;PHP:Var Name;117700445;f19;1885;27;1885;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The Ticket provided in the URL of the request if present&#10;(empty otherwise). Written by CAS_Client::CAS_Client(), read by&#10;CAS_Client::getTicket() and CAS_Client::_hasPGT().&#10;&lt;b&gt;hideinitializer&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_url;PHP:Var Name;117700445;f19;3590;24;3590;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    the URL of the current request (without any ticket CGI parameter). Written&#10;and read by CAS_Client::getURL().&#10;&lt;b&gt;hideinitializer&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_user;PHP:Var Name;117700445;f19;1089;25;1089;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The Authenticated user. Written by CAS_Client::_setUser(), read by&#10;CAS_Client::getUser().&#10;&lt;b&gt;hideinitializer&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_CookieJar;PHP:Class Name;3709168633;f0;40;1;377;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_CookieJar&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This class provides access to service cookies and handles parsing of response&#10;headers to pull out cookie values.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_CookieJar&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,41;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;3709168633;f11;50;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(array &amp;$storageArray)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Create a new cookie jar by passing it a reference to an array in which it&#10;should store cookies.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array: &amp;$storageArray Array to store cookies;;d4,51;;b1,0;;m0;;e0;;i0;;o;;k;;l;;p;;x;;n">
</treenode>
<treenode node="cookieMatchesTarget;PHP:Function Name;3709168633;f14;312;5;376;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    cookieMatchesTarget($cookie, $target)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer true if cookie is applicable to a target.&#10;&lt;b&gt;access&lt;/b&gt;: private&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$cookie&lt;/b&gt;: An array of cookie attributes.&#10;    array &lt;b&gt;$target&lt;/b&gt;: An array of URL attributes as generated by parse_url().;;d4,313;;b2,0;;m0;;e0;;i0;;o;;k;;l $cookie;;p $target;;p;;x;;x;;n">
</treenode>
<treenode node="discardCookie;PHP:Function Name;3709168633;f14;256;5;280;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    discardCookie($cookie)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Discard an existing cookie&#10;&lt;b&gt;access&lt;/b&gt;: protected&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$cookie&lt;/b&gt;: An cookie;;d4,257;;b2,0;;m0;;e0;;i0;;o;;k;;l $cookie;;p;;x;;n">
</treenode>
<treenode node="expireCookies;PHP:Function Name;3709168633;f14;287;5;300;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    expireCookies()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Go through our stored cookies and remove any that are expired.&#10;&lt;b&gt;access&lt;/b&gt;: protected;;d4,288;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getCookies;PHP:Function Name;3709168633;f11;96;5;118;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCookies($request_url)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Retrieve cookies applicable for a web service request.&#10;Cookie applicability is based on RFC 2965: http://www.ietf.org/rfc/rfc2965.txt&#10;&lt;b&gt;access&lt;/b&gt;: private&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$request_url&lt;/b&gt;: The url that the cookies will be for.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An array containing cookies. E.g. array(&apos;name&apos; =&gt; &apos;val&apos;);s;;d4,97;;b1,0;;m0;;e0;;i0;;o;;k;;l $request_url;;p;;x;;n">
</treenode>
<treenode node="parseCookieHeader;PHP:Function Name;3709168633;f14;155;5;233;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parseCookieHeader($line, $defaultDomain)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Parse a single cookie header line.&#10;Based on RFC2965 http://www.ietf.org/rfc/rfc2965.txt&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$line&lt;/b&gt;: The header line.&#10;    string &lt;b&gt;$defaultDomain&lt;/b&gt;: The domain to use if none is specified in the cookie.;;d4,156;;b2,0;;m0;;e0;;i0;;o;;k;;l $line;;p $defaultDomain;;p;;x;;x;;n">
</treenode>
<treenode node="parseCookieHeaders;PHP:Function Name;3709168633;f14;130;5;142;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parseCookieHeaders($header, $defaultDomain)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Parse Cookies without PECL&#10;From the comments in http://php.net/manual/en/function.http-parse-cookie.php&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$header&lt;/b&gt;: array of header lines.&#10;    string &lt;b&gt;$defaultDomain&lt;/b&gt;: The domain to use if none is specified in the cookie.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of cookies;;d4,131;;b2,0;;m0;;e0;;i0;;o;;k;;l $header;;p $defaultDomain;;p;;x;;x;;n">
</treenode>
<treenode node="storeCookie;PHP:Function Name;3709168633;f14;242;5;247;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    storeCookie($cookie)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add, update, or remove a cookie.&#10;&lt;b&gt;access&lt;/b&gt;: protected&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$cookie&lt;/b&gt;: A cookie array as created by parseCookieHeaders();;d4,243;;b2,0;;m0;;e0;;i0;;o;;k;;l $cookie;;p;;x;;n">
</treenode>
<treenode node="storeCookies;PHP:Function Name;3709168633;f11;64;5;84;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    storeCookies($request_url, $response_headers)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Store cookies for a web service request.&#10;Cookie storage is based on RFC 2965: http://www.ietf.org/rfc/rfc2965.txt&#10;&lt;b&gt;access&lt;/b&gt;: private&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$request_url&lt;/b&gt;: The URL that generated the response headers.&#10;    array &lt;b&gt;$response_headers&lt;/b&gt;: An array of the HTTP response header strings.;;d4,65;;b1,0;;m0;;e0;;i0;;o;;k;;l $request_url;;p $response_headers;;p;;x;;x;;n">
</treenode>
<treenode node="$_cookies;PHP:Var Name;3709168633;f12;42;21;42;;;;vpos;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_GracefullTerminationException;PHP:Class Name;1711334334;f0;42;1;77;;;;vpos;;v;;aRuntimeException;;cCAS_Exception;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_GracefullTerminationException extends RuntimeException implements CAS_Exception&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    An exception for terminatinating execution or to throw for unit testing&#10;&lt;b&gt;class&lt;/b&gt;: CAS_GracefullTerminationException.php&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Joachim Fritschi &lt;jfritschi&#10;&lt;b&gt;freenet&lt;/b&gt;: .de&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,43;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;1711334334;f11;54;5;63;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($message = &apos;Terminate Gracefully&apos;, $code = 0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Test if exceptions should be thrown or if we should just exit.&#10;In production usage we want to just exit cleanly when prompting the user&#10;for a redirect without filling the error logs with uncaught exceptions.&#10;In unit testing scenarios we cannot exit or we won&apos;t be able to continue&#10;with our tests.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;: Message Text&#10;    string &lt;b&gt;$code&lt;/b&gt;: Error code;;d4,55;;b1,0;;m0;;e0;;i0;;o;;k;;l $message;;p $code;;p;;x;;x;;n">
</treenode>
<treenode node="throwInsteadOfExiting;PHP:Function Name;1711334334;f18;73;5;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    throwInsteadOfExiting()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Force phpcas to thow Exceptions instead of calling exit()&#10;Needed for unit testing. Generally shouldn&apos;t be used in production due to&#10;an increase in Apache error logging if CAS_GracefulTerminiationExceptions&#10;are not caught and handled.;;d4,74;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_exitWhenThrown;PHP:Var Name;1711334334;f24;65;40;65;;;;vpos;;v;;a;;r;;d-1,-1;;b3,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_InvalidArgumentException;PHP:Class Name;311434121;f0;39;1;41;;;;vpos;;v;;aInvalidArgumentException;;cCAS_Exception;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_InvalidArgumentException extends InvalidArgumentException implements CAS_Exception&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Exception that denotes invalid arguments were passed.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_InvalidArgumentException&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,40;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CAS_Languages_Catalan;PHP:Class Name;986666181;f0;42;1;113;;;;vpos;;v;;aCAS_Languages_LanguageInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_Languages_Catalan implements CAS_Languages_LanguageInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Catalan language class&#10;&lt;b&gt;class&lt;/b&gt;: CAS_Languages_Catalan&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Iván-Benjamín García Torà &lt;ivaniclixx&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS&#10;&lt;b&gt;sa&lt;/b&gt;&#10;&lt;b&gt;link&lt;/b&gt;: internalLang Internationalization&#10;&lt;b&gt;endlink&lt;/b&gt;&#10;&lt;b&gt;ingroup&lt;/b&gt;: internalLang;;d0,43;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="getAuthenticationFailed;PHP:Function Name;986666181;f11;89;5;92;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAuthenticationFailed()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get authentication failed string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   authentication failed;;d4,90;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;986666181;f11;59;5;62;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAuthenticationWanted()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get authentication wanted string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   authentication wanted;;d4,60;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getLogout;PHP:Function Name;986666181;f11;69;5;72;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLogout()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get logout string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   logout;;d4,70;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;986666181;f11;109;5;112;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getServiceUnavailable()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the service unavailable string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   service unavailable;;d4,110;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;986666181;f11;79;5;82;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getShouldHaveBeenRedirected()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the should have been redirected string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   should habe been redirected;;d4,80;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;986666181;f11;49;5;52;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getUsingServer()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the using server string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   using server;;d4,50;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;986666181;f11;99;5;102;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getYouWereNotAuthenticated()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the your were not authenticated string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   not authenticated;;d4,100;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_Languages_ChineseSimplified;PHP:Class Name;180423282;f0;42;1;113;;;;vpos;;v;;aCAS_Languages_LanguageInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_Languages_ChineseSimplified implements CAS_Languages_LanguageInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Chinese Simplified language class&#10;&lt;b&gt;class&lt;/b&gt;: CAS_Languages_ChineseSimplified&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Pascal Aubry &lt;pascal.aubry&#10;&lt;b&gt;univ&lt;/b&gt;: -rennes1.fr&gt;, Phy25 &lt;caslang&#10;&lt;b&gt;phy25&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS&#10;&lt;b&gt;sa&lt;/b&gt;&#10;&lt;b&gt;link&lt;/b&gt;: internalLang Internationalization&#10;&lt;b&gt;endlink&lt;/b&gt;&#10;&lt;b&gt;ingroup&lt;/b&gt;: internalLang;;d0,43;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="getAuthenticationFailed;PHP:Function Name;180423282;f11;89;5;92;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAuthenticationFailed()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get authentication failed string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   authentication failed;;d4,90;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;180423282;f11;59;5;62;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAuthenticationWanted()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get authentication wanted string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   authentication wanted;;d4,60;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getLogout;PHP:Function Name;180423282;f11;69;5;72;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLogout()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get logout string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   logout;;d4,70;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;180423282;f11;109;5;112;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getServiceUnavailable()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the service unavailable string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   service unavailable;;d4,110;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;180423282;f11;79;5;82;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getShouldHaveBeenRedirected()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the should have been redirected string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   should habe been redirected;;d4,80;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;180423282;f11;49;5;52;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getUsingServer()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the using server string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   using server;;d4,50;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;180423282;f11;99;5;102;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getYouWereNotAuthenticated()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the your were not authenticated string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   not authenticated;;d4,100;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_Languages_English;PHP:Class Name;1798340131;f0;42;1;113;;;;vpos;;v;;aCAS_Languages_LanguageInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_Languages_English implements CAS_Languages_LanguageInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    English language class&#10;&lt;b&gt;class&lt;/b&gt;: CAS_Languages_English&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Pascal Aubry &lt;pascal.aubry&#10;&lt;b&gt;univ&lt;/b&gt;: -rennes1.fr&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS&#10;&lt;b&gt;sa&lt;/b&gt;&#10;&lt;b&gt;link&lt;/b&gt;: internalLang Internationalization&#10;&lt;b&gt;endlink&lt;/b&gt;&#10;&lt;b&gt;ingroup&lt;/b&gt;: internalLang;;d0,43;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="getAuthenticationFailed;PHP:Function Name;1798340131;f11;89;5;92;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAuthenticationFailed()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get authentication failed string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   authentication failed;;d4,90;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;1798340131;f11;59;5;62;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAuthenticationWanted()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get authentication wanted string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   authentication wanted;;d4,60;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getLogout;PHP:Function Name;1798340131;f11;69;5;72;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLogout()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get logout string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   logout;;d4,70;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;1798340131;f11;109;5;112;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getServiceUnavailable()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the service unavailable string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   service unavailable;;d4,110;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;1798340131;f11;79;5;82;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getShouldHaveBeenRedirected()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the should have been redirected string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   should habe been redirected;;d4,80;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;1798340131;f11;49;5;52;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getUsingServer()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the using server string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   using server;;d4,50;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;1798340131;f11;99;5;102;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getYouWereNotAuthenticated()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the your were not authenticated string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   not authenticated;;d4,100;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_Languages_French;PHP:Class Name;3993992949;f0;42;1;113;;;;vpos;;v;;aCAS_Languages_LanguageInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_Languages_French implements CAS_Languages_LanguageInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    French language class&#10;&lt;b&gt;class&lt;/b&gt;: CAS_Languages_French&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Pascal Aubry &lt;pascal.aubry&#10;&lt;b&gt;univ&lt;/b&gt;: -rennes1.fr&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS&#10;&lt;b&gt;sa&lt;/b&gt;&#10;&lt;b&gt;link&lt;/b&gt;: internalLang Internationalization&#10;&lt;b&gt;endlink&lt;/b&gt;&#10;&lt;b&gt;ingroup&lt;/b&gt;: internalLang;;d0,43;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="getAuthenticationFailed;PHP:Function Name;3993992949;f11;89;5;92;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAuthenticationFailed()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get authentication failed string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   authentication failed;;d4,90;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;3993992949;f11;59;5;62;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAuthenticationWanted()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get authentication wanted string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   authentication wanted;;d4,60;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getLogout;PHP:Function Name;3993992949;f11;69;5;72;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLogout()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get logout string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   logout;;d4,70;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;3993992949;f11;109;5;112;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getServiceUnavailable()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the service unavailable string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   service unavailable;;d4,110;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;3993992949;f11;79;5;82;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getShouldHaveBeenRedirected()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the should have been redirected string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   should habe been redirected;;d4,80;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;3993992949;f11;49;5;52;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getUsingServer()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the using server string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   using server;;d4,50;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;3993992949;f11;99;5;102;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getYouWereNotAuthenticated()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the your were not authenticated string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   not authenticated;;d4,100;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_Languages_German;PHP:Class Name;2148998499;f0;42;1;113;;;;vpos;;v;;aCAS_Languages_LanguageInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_Languages_German implements CAS_Languages_LanguageInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    German language class&#10;&lt;b&gt;class&lt;/b&gt;: CAS_Languages_German&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Henrik Genssen &lt;hg&#10;&lt;b&gt;mediafactory&lt;/b&gt;: .de&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS&#10;&lt;b&gt;sa&lt;/b&gt;&#10;&lt;b&gt;link&lt;/b&gt;: internalLang Internationalization&#10;&lt;b&gt;endlink&lt;/b&gt;&#10;&lt;b&gt;ingroup&lt;/b&gt;: internalLang;;d0,43;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="getAuthenticationFailed;PHP:Function Name;2148998499;f11;89;5;92;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAuthenticationFailed()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get authentication failed string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   authentication failed;;d4,90;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;2148998499;f11;59;5;62;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAuthenticationWanted()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get authentication wanted string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   authentication wanted;;d4,60;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getLogout;PHP:Function Name;2148998499;f11;69;5;72;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLogout()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get logout string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   logout;;d4,70;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;2148998499;f11;109;5;112;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getServiceUnavailable()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the service unavailable string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   service unavailable;;d4,110;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;2148998499;f11;79;5;82;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getShouldHaveBeenRedirected()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the should have been redirected string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   should habe been redirected;;d4,80;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;2148998499;f11;49;5;52;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getUsingServer()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the using server string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   using server;;d4,50;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;2148998499;f11;99;5;102;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getYouWereNotAuthenticated()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the your were not authenticated string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   not authenticated;;d4,100;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_Languages_Greek;PHP:Class Name;1396569439;f0;42;1;113;;;;vpos;;v;;aCAS_Languages_LanguageInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_Languages_Greek implements CAS_Languages_LanguageInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Greek language class&#10;&lt;b&gt;class&lt;/b&gt;: CAS_Languages_Greek&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Vangelis Haniotakis &lt;haniotak&#10;&lt;b&gt;ucnet&lt;/b&gt;: .uoc.gr&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS&#10;&lt;b&gt;sa&lt;/b&gt;&#10;&lt;b&gt;link&lt;/b&gt;: internalLang Internationalization&#10;&lt;b&gt;endlink&lt;/b&gt;&#10;&lt;b&gt;ingroup&lt;/b&gt;: internalLang;;d0,43;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="getAuthenticationFailed;PHP:Function Name;1396569439;f11;89;5;92;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAuthenticationFailed()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get authentication failed string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   authentication failed;;d4,90;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;1396569439;f11;59;5;62;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAuthenticationWanted()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get authentication wanted string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   authentication wanted;;d4,60;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getLogout;PHP:Function Name;1396569439;f11;69;5;72;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLogout()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get logout string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   logout;;d4,70;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;1396569439;f11;109;5;112;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getServiceUnavailable()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the service unavailable string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   service unavailable;;d4,110;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;1396569439;f11;79;5;82;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getShouldHaveBeenRedirected()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the should have been redirected string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   should habe been redirected;;d4,80;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;1396569439;f11;49;5;52;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getUsingServer()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the using server string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   using server;;d4,50;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;1396569439;f11;99;5;102;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getYouWereNotAuthenticated()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the your were not authenticated string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   not authenticated;;d4,100;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_Languages_Japanese;PHP:Class Name;971821910;f0;40;1;111;;;;vpos;;v;;aCAS_Languages_LanguageInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_Languages_Japanese implements CAS_Languages_LanguageInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Japanese language class. Now Encoding is UTF-8.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_Languages_Japanese&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: fnorif &lt;fnorif&#10;&lt;b&gt;yahoo&lt;/b&gt;: .co.jp&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,41;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="getAuthenticationFailed;PHP:Function Name;971821910;f11;87;5;90;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAuthenticationFailed()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get authentication failed string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   authentication failed;;d4,88;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;971821910;f11;57;5;60;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAuthenticationWanted()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get authentication wanted string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   authentication wanted;;d4,58;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getLogout;PHP:Function Name;971821910;f11;67;5;70;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLogout()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get logout string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   logout;;d4,68;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;971821910;f11;107;5;110;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getServiceUnavailable()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the service unavailable string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   service unavailable;;d4,108;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;971821910;f11;77;5;80;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getShouldHaveBeenRedirected()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the should have been redirected string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   should habe been redirected;;d4,78;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;971821910;f11;47;5;50;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getUsingServer()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the using server string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   using server;;d4,48;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;971821910;f11;97;5;100;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getYouWereNotAuthenticated()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the your were not authenticated string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   not authenticated;;d4,98;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_Languages_Spanish;PHP:Class Name;1412579471;f0;43;1;114;;;;vpos;;v;;aCAS_Languages_LanguageInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_Languages_Spanish implements CAS_Languages_LanguageInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Spanish language class&#10;&lt;b&gt;class&lt;/b&gt;: CAS_Languages_Spanish&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Iván-Benjamín García Torà &lt;ivaniclixx&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS&#10;&lt;b&gt;sa&lt;/b&gt;&#10;&lt;b&gt;link&lt;/b&gt;: internalLang Internationalization&#10;&lt;b&gt;endlink&lt;/b&gt;&#10;&lt;b&gt;ingroup&lt;/b&gt;: internalLang;;d0,44;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="getAuthenticationFailed;PHP:Function Name;1412579471;f11;90;5;93;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAuthenticationFailed()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get authentication failed string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   authentication failed;;d4,91;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAuthenticationWanted;PHP:Function Name;1412579471;f11;60;5;63;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAuthenticationWanted()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get authentication wanted string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   authentication wanted;;d4,61;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getLogout;PHP:Function Name;1412579471;f11;70;5;73;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLogout()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get logout string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   logout;;d4,71;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getServiceUnavailable;PHP:Function Name;1412579471;f11;110;5;113;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getServiceUnavailable()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the service unavailable string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   service unavailable;;d4,111;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getShouldHaveBeenRedirected;PHP:Function Name;1412579471;f11;80;5;83;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getShouldHaveBeenRedirected()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the should have been redirected string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   should habe been redirected;;d4,81;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getUsingServer;PHP:Function Name;1412579471;f11;50;5;53;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getUsingServer()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the using server string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   using server;;d4,51;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getYouWereNotAuthenticated;PHP:Function Name;1412579471;f11;100;5;103;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getYouWereNotAuthenticated()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the your were not authenticated string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   not authenticated;;d4,101;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_OutOfSequenceBeforeAuthenticationCallException;PHP:Class Name;1486469896;f0;42;1;51;;;;vpos;;v;;aCAS_OutOfSequenceException;;cCAS_Exception;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_OutOfSequenceBeforeAuthenticationCallException extends CAS_OutOfSequenceException implements CAS_Exception&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This class defines Exceptions that should be thrown when the sequence of&#10;operations is invalid. In this case it should be thrown when an&#10;authentication call has not yet happened.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_OutOfSequenceBeforeAuthenticationCallException&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Joachim Fritschi &lt;jfritschi&#10;&lt;b&gt;freenet&lt;/b&gt;: .de&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,43;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;1486469896;f11;47;5;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return standard error meessage;;d4,48;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_OutOfSequenceBeforeClientException;PHP:Class Name;2242757787;f0;42;1;53;;;;vpos;;v;;aCAS_OutOfSequenceException;;cCAS_Exception;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_OutOfSequenceBeforeClientException extends CAS_OutOfSequenceException implements CAS_Exception&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This class defines Exceptions that should be thrown when the sequence of&#10;operations is invalid. In this case it should be thrown when the client() or&#10;proxy() call has not yet happened and no client or proxy object exists.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_OutOfSequenceBeforeClientException&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Joachim Fritschi &lt;jfritschi&#10;&lt;b&gt;freenet&lt;/b&gt;: .de&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,43;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;2242757787;f11;47;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return standard error message;;d4,48;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_OutOfSequenceBeforeProxyException;PHP:Class Name;3837998214;f0;42;1;53;;;;vpos;;v;;aCAS_OutOfSequenceException;;cCAS_Exception;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_OutOfSequenceBeforeProxyException extends CAS_OutOfSequenceException implements CAS_Exception&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This class defines Exceptions that should be thrown when the sequence of&#10;operations is invalid. In this case it should be thrown when the proxy() call&#10;has not yet happened and no proxy object exists.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_OutOfSequenceBeforeProxyException&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Joachim Fritschi &lt;jfritschi&#10;&lt;b&gt;freenet&lt;/b&gt;: .de&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,43;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;3837998214;f11;47;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return standard error message;;d4,48;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_OutOfSequenceException;PHP:Class Name;2122193739;f0;43;1;45;;;;vpos;;v;;aBadMethodCallException;;cCAS_Exception;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_OutOfSequenceException extends BadMethodCallException implements CAS_Exception&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This class defines Exceptions that should be thrown when the sequence of&#10;operations is invalid. Examples are:&#10;- Requesting the response before executing a request.&#10;- Changing the URL of a request after executing the request.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_OutOfSequenceException&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,44;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CAS_PGTStorage_AbstractStorage;PHP:Class Name;4103145027;f9;45;1;204;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_PGTStorage_AbstractStorage&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Basic class for PGT storage&#10;The CAS_PGTStorage_AbstractStorage class is a generic class for PGT storage.&#10;This class should not be instanciated itself but inherited by specific PGT&#10;storage classes.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_PGTStorage_AbstractStorage&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Pascal Aubry &lt;pascal.aubry&#10;&lt;b&gt;univ&lt;/b&gt;: -rennes1.fr&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS&#10;&lt;b&gt;ingroup&lt;/b&gt;: internalPGTStorage;;d0,46;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;4103145027;f11;64;5;74;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($cas_parent)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The constructor of the class, should be called only by inherited classes.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    CAS_Client &lt;b&gt;$cas_parent&lt;/b&gt;: the CAS _client instance that creates the current object.;;d4,65;;b1,0;;m0;;e0;;i0;;o;;k;;l $cas_parent;;p;;x;;n">
</treenode>
<treenode node="getErrorMessage;PHP:Function Name;4103145027;f11;136;5;139;;;;vpos;;v;;aan;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getErrorMessage()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns an error message set by PGTStorage::setErrorMessage().&#10;&lt;b&gt;deprecated&lt;/b&gt;: not used.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   error message when set by PGTStorage::setErrorMessage(), FALSE otherwise.;;d4,137;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getStorageInfo;PHP:Function Name;4103145027;f11;97;5;100;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStorageInfo()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This virtual method returns an informational string giving information on the&#10;parameters of the storage.(used for debugging purposes).&#10;&lt;b&gt;public&lt;/b&gt;;;d4,98;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getStorageType;PHP:Function Name;4103145027;f11;86;5;89;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStorageType()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This virtual method returns an informational string giving the type of storage&#10;used by the object (used for debugging purposes).&#10;&lt;b&gt;public&lt;/b&gt;;;d4,87;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="init;PHP:Function Name;4103145027;f11;168;5;171;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    init()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This virtual method initializes the object.;;d4,169;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="isInitialized;PHP:Function Name;4103145027;f11;160;5;163;;;;vpos;;v;;aa;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isInitialized()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method tells if the storage has already been intialized.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   boolean;;d4,161;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="read;PHP:Function Name;4103145027;f11;198;5;201;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    read($pgt_iou)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This virtual method reads a PGT corresponding to a PGT Iou and deletes&#10;the corresponding storage entry.&#10;&lt;b&gt;note&lt;/b&gt;: Should never be called.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$pgt_iou&lt;/b&gt;: the PGT iou;;d4,199;;b1,0;;m0;;e0;;i0;;o;;k;;l $pgt_iou;;p;;x;;n">
</treenode>
<treenode node="setErrorMessage;PHP:Function Name;4103145027;f11;123;5;126;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setErrorMessage($error_message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method sets en error message, which can be read later by&#10;PGTStorage::getErrorMessage().&#10;&lt;b&gt;deprecated&lt;/b&gt;: not used.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$error_message&lt;/b&gt;: an error message;;d4,124;;b1,0;;m0;;e0;;i0;;o;;k;;l $error_message;;p;;x;;n">
</treenode>
<treenode node="write;PHP:Function Name;4103145027;f11;185;5;188;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    write($pgt, $pgt_iou)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This virtual method stores a PGT and its corresponding PGT Iuo.&#10;&lt;b&gt;note&lt;/b&gt;: Should never be called.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$pgt&lt;/b&gt;: the PGT&#10;    string &lt;b&gt;$pgt_iou&lt;/b&gt;: the PGT iou;;d4,186;;b1,0;;m0;;e0;;i0;;o;;k;;l $pgt;;p $pgt_iou;;p;;x;;x;;n">
</treenode>
<treenode node="$_error_message;PHP:Var Name;4103145027;f11;113;26;113;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    string used to store an error message. Written by&#10;PGTStorage::setErrorMessage(), read by PGTStorage::getErrorMessage().&#10;&lt;b&gt;hideinitializer&lt;/b&gt;&#10;&lt;b&gt;deprecated&lt;/b&gt;: not used.;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_initialized;PHP:Var Name;4103145027;f11;151;24;151;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    a boolean telling if the storage has already been initialized. Written by&#10;PGTStorage::init(), read by PGTStorage::isInitialized().&#10;&lt;b&gt;hideinitializer&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_PGTStorage_Db;PHP:Class Name;445965636;f0;45;1;439;;;;vpos;;v;;aCAS_PGTStorage_AbstractStorage;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_PGTStorage_Db extends CAS_PGTStorage_AbstractStorage&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Basic class for PGT database storage&#10;The CAS_PGTStorage_Db class is a class for PGT database storage.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_PGTStorage_Db&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Daniel Frett &lt;daniel.frett&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS&#10;&lt;b&gt;ingroup&lt;/b&gt;: internalPGTStorageDb;;d0,46;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;445965636;f11;145;5;182;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(&#10;        $cas_parent,&#10;        $dsn_or_pdo,&#10;        $username = &apos;&apos;,&#10;        $password = &apos;&apos;,&#10;        $table = &apos;&apos;,&#10;        $driver_options = null&#10;    )&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The class constructor.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    CAS_Client &lt;b&gt;$cas_parent&lt;/b&gt;: the CAS_Client instance that creates the object.&#10;    string &lt;b&gt;$dsn_or_pdo&lt;/b&gt;: a dsn string to use for creating a PDO object or a PDO object&#10;    string &lt;b&gt;$username&lt;/b&gt;: the username to use when connecting to the database&#10;    string &lt;b&gt;$password&lt;/b&gt;: the password to use when connecting to the database&#10;    string &lt;b&gt;$table&lt;/b&gt;: the table to use for storing and retrieving PGT&apos;s&#10;    string &lt;b&gt;$driver_options&lt;/b&gt;: any driver options to use when connecting to the database;;d6,152;;b1,0;;m0;;e0;;i0;;o;;k;;l $cas_parent;;p $dsn_or_pdo;;p $username;;p $password;;p $table;;p $driver_options;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="_getPdo;PHP:Function Name;445965636;f12;67;5;70;;;;vpos;;v;;athe;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getPdo()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns the PDO object to use for database interactions.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   PDO object;;d4,68;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_getTable;PHP:Function Name;445965636;f12;93;5;96;;;;vpos;;v;;athe;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getTable()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns the table to use when storing/retrieving PGT&apos;s&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   name of the pgt storage table.;;d4,94;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_resetErrorMode;PHP:Function Name;445965636;f12;243;5;248;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _resetErrorMode()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    this method will reset the error mode on the PDO object;;d4,244;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_setErrorMode;PHP:Function Name;445965636;f12;232;5;238;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _setErrorMode()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method will enable the Exception error mode on the PDO object;;d4,233;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="createTable;PHP:Function Name;445965636;f11;310;5;344;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createTable()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method creates the database table used to store pgt&apos;s and pgtiou&apos;s;;d4,311;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="createTableSql;PHP:Function Name;445965636;f14;262;5;266;;;;vpos;;v;;athe;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createTableSql()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns the query used to create a pgt storage table&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   create table SQL, no bind params in query;;d4,263;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="deletePgtSql;PHP:Function Name;445965636;f14;298;5;301;;;;vpos;;v;;athe;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    deletePgtSql()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns the query used to delete a pgt.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   delete PGT SQL, :pgt_iou is the only bind param contained in the query;;d4,299;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getStorageInfo;PHP:Function Name;445965636;f11;120;5;123;;;;vpos;;v;;aan;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStorageInfo()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns an informational string giving information on the&#10;parameters of the storage.(used for debugging purposes).&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   informational string.;;d4,121;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getStorageType;PHP:Function Name;445965636;f11;108;5;111;;;;vpos;;v;;aan;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStorageType()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns an informational string giving the type of storage&#10;used by the object (used for debugging purposes).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   informational string.;;d4,109;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="init;PHP:Function Name;445965636;f11;191;5;217;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    init()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to initialize the storage. Halts on error.;;d4,192;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="read;PHP:Function Name;445965636;f11;395;5;436;;;;vpos;;v;;athe;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    read($pgt_iou)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method reads a PGT corresponding to a PGT Iou and deletes the&#10;corresponding db entry.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$pgt_iou&lt;/b&gt;: the PGT iou&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   corresponding PGT, or FALSE on error;;d4,396;;b1,0;;m0;;e0;;i0;;o;;k;;l $pgt_iou;;p;;x;;n">
</treenode>
<treenode node="retrievePgtSql;PHP:Function Name;445965636;f14;287;5;290;;;;vpos;;v;;athe;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    retrievePgtSql()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns the query used to retrieve a pgt. the first column&#10;of the first row should contain the pgt&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   retrieve PGT SQL, :pgt_iou is the only bind param contained in the query;;d4,288;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="storePgtSql;PHP:Function Name;445965636;f14;274;5;278;;;;vpos;;v;;athe;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    storePgtSql()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns the query used to store a pgt&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   store PGT SQL, :pgt and :pgt_iou are the bind params contained in the query;;d4,275;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="write;PHP:Function Name;445965636;f11;353;5;385;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    write($pgt, $pgt_iou)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method stores a PGT and its corresponding PGT Iou in the database.&#10;Echoes a warning on error.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$pgt&lt;/b&gt;: the PGT&#10;    string &lt;b&gt;$pgt_iou&lt;/b&gt;: the PGT iou;;d4,354;;b1,0;;m0;;e0;;i0;;o;;k;;l $pgt;;p $pgt_iou;;p;;x;;x;;n">
</treenode>
<treenode node="$_driver_options;PHP:Var Name;445965636;f11;50;27;50;;;;vposint;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_dsn;PHP:Var Name;445965636;f12;75;17;75;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    database connection options to use when creating a new PDO object;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_errMode;PHP:Var Name;445965636;f12;227;21;227;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    attribute that stores the previous error mode for the PDO handle while&#10;processing a transaction;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_password;PHP:Var Name;445965636;f12;79;22;79;;;;vpos;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_pdo;PHP:Var Name;445965636;f18;60;23;60;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    the PDO object to use for database interactions;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_table;PHP:Var Name;445965636;f12;86;19;86;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    the table to use for storing/retrieving pgt&apos;s;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_table_options;PHP:Var Name;445965636;f12;81;27;81;;;;vpos;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_username;PHP:Var Name;445965636;f12;77;22;77;;;;vpos;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_PGTStorage_File;PHP:Class Name;124147892;f0;43;1;256;;;;vpos;;v;;aCAS_PGTStorage_AbstractStorage;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_PGTStorage_File extends CAS_PGTStorage_AbstractStorage&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The CAS_PGTStorage_File class is a class for PGT file storage. An instance of&#10;this class is returned by CAS_Client::SetPGTStorageFile().&#10;&lt;b&gt;class&lt;/b&gt;: CAS_PGTStorage_File&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Pascal Aubry &lt;pascal.aubry&#10;&lt;b&gt;univ&lt;/b&gt;: -rennes1.fr&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS&#10;&lt;b&gt;ingroup&lt;/b&gt;: internalPGTStorageFile;;d0,44;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;124147892;f11;111;5;138;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($cas_parent, $path)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The class constructor, called by CAS_Client::SetPGTStorageFile().&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    CAS_Client &lt;b&gt;$cas_parent&lt;/b&gt;: the CAS_Client instance that creates the object.&#10;    string &lt;b&gt;$path&lt;/b&gt;: the path where the PGT&apos;s should be stored;;d4,112;;b1,0;;m0;;e0;;i0;;o;;k;;l $cas_parent;;p $path;;p;;x;;x;;n">
</treenode>
<treenode node="getPGTIouFilename;PHP:Function Name;124147892;f11;174;5;182;;;;vpos;;v;;aa;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPGTIouFilename($pgt_iou)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns the filename corresponding to a PGT Iou.&#10;&lt;b&gt;private&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$pgt_iou&lt;/b&gt;: the PGT iou.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   filename;;d4,175;;b1,0;;m0;;e0;;i0;;o;;k;;l $pgt_iou;;p;;x;;n">
</treenode>
<treenode node="getPath;PHP:Function Name;124147892;f11;66;5;69;;;;vpos;;v;;athe;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPath()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns the name of the directory where PGT&apos;s should be stored&#10;on the filesystem.&#10;&lt;b&gt;private&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   name of a directory (with leading and trailing &apos;/&apos;);;d4,67;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getStorageInfo;PHP:Function Name;124147892;f11;94;5;97;;;;vpos;;v;;aan;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStorageInfo()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns an informational string giving information on the&#10;parameters of the storage.(used for debugging purposes).&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   informational string.;;d4,95;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getStorageType;PHP:Function Name;124147892;f11;82;5;85;;;;vpos;;v;;aan;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStorageType()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns an informational string giving the type of storage&#10;used by the object (used for debugging purposes).&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   informational string.;;d4,83;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="init;PHP:Function Name;124147892;f11;149;5;160;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    init()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to initialize the storage. Halts on error.&#10;&lt;b&gt;public&lt;/b&gt;;;d4,150;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="read;PHP:Function Name;124147892;f11;228;5;253;;;;vpos;;v;;athe;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    read($pgt_iou)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method reads a PGT corresponding to a PGT Iou and deletes the&#10;corresponding file.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$pgt_iou&lt;/b&gt;: the PGT iou&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   corresponding PGT, or FALSE on error;;d4,229;;b1,0;;m0;;e0;;i0;;o;;k;;l $pgt_iou;;p;;x;;n">
</treenode>
<treenode node="write;PHP:Function Name;124147892;f11;193;5;216;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    write($pgt, $pgt_iou)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method stores a PGT and its corresponding PGT Iou into a file. Echoes a&#10;warning on error.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$pgt&lt;/b&gt;: the PGT&#10;    string &lt;b&gt;$pgt_iou&lt;/b&gt;: the PGT iou;;d4,194;;b1,0;;m0;;e0;;i0;;o;;k;;l $pgt;;p $pgt_iou;;p;;x;;x;;n">
</treenode>
<treenode node="$_path;PHP:Var Name;124147892;f11;56;17;56;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    a string telling where PGT&apos;s should be stored on the filesystem. Written by&#10;PGTStorageFile::PGTStorageFile(), read by getPath().&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_ProxiedService_Abstract;PHP:Class Name;3821676792;f9;40;1;142;;;;vpos;;v;;aCAS_ProxiedService;;cCAS_ProxiedService_Testable;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_ProxiedService_Abstract implements CAS_ProxiedService, CAS_ProxiedService_Testable&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This class implements common methods for ProxiedService implementations included&#10;with phpCAS.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_ProxiedService_Abstract&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,41;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="getProxyTicket;PHP:Function Name;3821676792;f14;81;5;90;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getProxyTicket()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer the proxy ticket to be used when making requests.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called before a proxy ticket has&#10;already been initialized/set.;;d4,82;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="initializeProxyTicket;PHP:Function Name;3821676792;f14;127;5;141;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    initializeProxyTicket()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fetch our proxy ticket.&#10;Descendent classes should call this method once their service URL is available&#10;to initialize their proxy ticket.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after a proxy ticket has&#10;already been initialized.;;d4,128;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="setCasClient;PHP:Function Name;3821676792;f11;107;5;116;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCasClient(CAS_Client $casClient)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Use a particular CAS_Client-&gt;initializeProxiedService() rather than the&#10;static phpCAS::initializeProxiedService().&#10;This method should not be called in standard operation, but is needed for unit&#10;testing.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after a proxy ticket has&#10;already been initialized/set.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    CAS_Client &lt;b&gt;$casClient&lt;/b&gt;: cas client;;d4,108;;b1,0;;m0;;e0;;i0;;o;;k;;l $casClient;;pCAS_Client;;x;;n">
</treenode>
<treenode node="setProxyTicket;PHP:Function Name;3821676792;f11;57;5;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setProxyTicket($proxyTicket)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Register a proxy ticket with the Proxy that it can use when making requests.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException If the $proxyTicket is invalid.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after a proxy ticket has&#10;already been initialized/set.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$proxyTicket&lt;/b&gt;: proxy ticket;;d4,58;;b1,0;;m0;;e0;;i0;;o;;k;;l $proxyTicket;;p;;x;;n">
</treenode>
<treenode node="$_casClient;PHP:Var Name;3821676792;f25;93;36;93;;;;vpos;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_proxyTicket;PHP:Var Name;3821676792;f12;46;25;46;;;;vposstring;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_ProxiedService_Exception;PHP:Class Name;3194360799;f0;39;1;41;;;;vpos;;v;;aException;;cCAS_Exception;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_ProxiedService_Exception extends Exception implements CAS_Exception&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    An Exception for problems communicating with a proxied service.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_ProxiedService_Exception&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,40;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CAS_ProxiedService_Http_Abstract;PHP:Class Name;1082263564;f9;40;1;343;;;;vpos;;v;;aCAS_ProxiedService_Abstract;;cCAS_ProxiedService_Http;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_ProxiedService_Http_Abstract extends CAS_ProxiedService_Abstract implements CAS_ProxiedService_Http&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This class implements common methods for ProxiedService implementations included&#10;with phpCAS.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_ProxiedService_Http_Abstract&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,41;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;1082263564;f11;55;5;63;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(&#10;        CAS_Request_RequestInterface $requestHandler,&#10;        /**&#10;         * The storage mechanism for cookies set by the target service.&#10;         */&#10;        private CAS_CookieJar $_cookieJar&#10;    )&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Constructor.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    CAS_Request_RequestInterface &lt;b&gt;$requestHandler&lt;/b&gt;: request handler object&#10;    CAS_CookieJar &lt;b&gt;$_cookieJar&lt;/b&gt;: cookieJar object;;d6,61;;b1,0;;m0;;e0;;i0;;o;;k;;l $requestHandler;;p $_cookieJar;;pCAS_Request_RequestInterface;;xCAS_CookieJar;;x;;n">
</treenode>
<treenode node="getCookies;PHP:Function Name;1082263564;f11;339;5;342;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCookies()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer the cookies from the response. This may include cookies set during&#10;redirect responses.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An array containing cookies. E.g. array(&apos;name&apos; =&gt; &apos;val&apos;);s;;d4,340;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getRedirectUrl;PHP:Function Name;1082263564;f14;255;5;266;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRedirectUrl(array $responseHeaders)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer a redirect URL if a redirect header is found, otherwise null.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$responseHeaders&lt;/b&gt;: response header to extract a redirect from&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   or null;;d4,256;;b2,0;;m0;;e0;;i0;;o;;k;;l $responseHeaders;;p;;x;;n">
</treenode>
<treenode node="getResponseBody;PHP:Function Name;1082263564;f11;322;5;331;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getResponseBody()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer the body of response.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called before the Request has been sent.;;d4,323;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getResponseHeaders;PHP:Function Name;1082263564;f11;288;5;297;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getResponseHeaders()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer the headers of the response.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called before the Request has been sent.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An array of header strings.;;d4,289;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getResponseStatusCode;PHP:Function Name;1082263564;f11;305;5;314;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getResponseStatusCode()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer HTTP status code of the response&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called before the Request has been sent.;;d4,306;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getServiceUrl;PHP:Function Name;1082263564;f11;76;5;85;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getServiceUrl()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer a service identifier (URL) for whom we should fetch a proxy ticket.&#10;&lt;b&gt;throws&lt;/b&gt;: Exception If no service url is available.;;d4,77;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="hasBeenSent;PHP:Function Name;1082263564;f14;277;5;280;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasBeenSent()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer true if our request has been sent yet.;;d4,278;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="makeRequest;PHP:Function Name;1082263564;f14;195;5;237;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    makeRequest($url)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Build and perform a request, following redirects&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_ProxyTicketException If there is a proxy-ticket failure.&#10;The code of the Exception will be one of:&#10;PHPCAS_SERVICE_PT_NO_SERVER_RESPONSE&#10;PHPCAS_SERVICE_PT_BAD_SERVER_RESPONSE&#10;PHPCAS_SERVICE_PT_FAILURE&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_ProxiedService_Exception If there is a failure sending the&#10;request to the target service.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: url for the request;;d4,196;;b2,0;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
<treenode node="populateRequest;PHP:Function Name;1082263564;f23;244;5;246;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add any other parts of the request needed by concrete classes&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    CAS_Request_RequestInterface &lt;b&gt;$request&lt;/b&gt;: request interface object;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l $request;;pCAS_Request_RequestInterface;;x;;n">
</treenode>
<treenode node="send;PHP:Function Name;1082263564;f11;129;5;154;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    send()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Perform the request.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called multiple times.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_ProxyTicketException If there is a proxy-ticket failure.&#10;The code of the Exception will be one of:&#10;PHPCAS_SERVICE_PT_NO_SERVER_RESPONSE&#10;PHPCAS_SERVICE_PT_BAD_SERVER_RESPONSE&#10;PHPCAS_SERVICE_PT_FAILURE&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_ProxiedService_Exception If there is a failure sending the&#10;request to the target service.;;d4,130;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="setUrl;PHP:Function Name;1082263564;f11;98;5;111;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setUrl($url)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the URL of the Request&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the Request has been sent.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: url to set;;d4,99;;b1,0;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
<treenode node="$_numRequests;PHP:Var Name;1082263564;f16;159;29;159;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Indicator of the number of requests (including redirects performed.;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_responseBody;PHP:Var Name;1082263564;f12;180;26;180;;;;vposstring;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_responseHeaders;PHP:Var Name;1082263564;f12;166;29;166;;;;vposarray;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_responseStatusCode;PHP:Var Name;1082263564;f12;173;32;173;;;;vposstring;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_url;PHP:Var Name;1082263564;f20;68;25;68;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The target service url.;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$requestHandler;PHP:Var Name;1082263564;f14;47;29;47;;;;vposCAS_Request_RequestInterface;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_ProxiedService_Http_Get;PHP:Class Name;916742298;f0;67;1;79;;;;vpos;;v;;aCAS_ProxiedService_Http_Abstract;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_ProxiedService_Http_Get extends CAS_ProxiedService_Http_Abstract&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This class is used to make proxied service requests via the HTTP GET method.&#10;Usage Example:&#10;try {&#10;$service = phpCAS::getProxiedService(PHPCAS_PROXIED_SERVICE_HTTP_GET);s&#10;$service-&gt;setUrl(&apos;http://www.example.com/path/&apos;);s&#10;$service-&gt;send();s&#10;if ($service-&gt;getResponseStatusCode() == 200)&#10;return $service-&gt;getResponseBody();s&#10;else&#10;// The service responded with an error code 404, 500, etc.&#10;throw new Exception(&apos;The service responded with an error.&apos;);s&#10;} catch (CAS_ProxyTicketException $e) {&#10;if ($e-&gt;getCode() == PHPCAS_SERVICE_PT_FAILURE)&#10;return &quot;Your login has timed out. You need to log in again.&quot;;s&#10;else&#10;// Other proxy ticket errors are from bad request format&#10;// (shouldn&apos;t happen) or CAS server failure (unlikely)&#10;// so lets just stop if we hit those.&#10;throw $e;s&#10;} catch (CAS_ProxiedService_Exception $e) {&#10;// Something prevented the service request from being sent or received.&#10;// We didn&apos;t even get a valid error response (404, 500, etc), so this&#10;// might be caused by a network error or a DNS resolution failure.&#10;// We could handle it in some way, but for now we will just stop.&#10;throw $e;s&#10;}&#10;&lt;b&gt;class&lt;/b&gt;: CAS_ProxiedService_Http_Get&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,68;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="populateRequest;PHP:Function Name;916742298;f14;74;5;78;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    populateRequest(CAS_Request_RequestInterface $request)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add any other parts of the request needed by concrete classes&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    CAS_Request_RequestInterface &lt;b&gt;$request&lt;/b&gt;: request interface;;d4,75;;b2,0;;m0;;e0;;i0;;o;;k;;l $request;;pCAS_Request_RequestInterface;;x;;n">
</treenode>
</treenode>
<treenode node="CAS_ProxiedService_Http_Post;PHP:Class Name;285841492;f0;69;1;142;;;;vpos;;v;;aCAS_ProxiedService_Http_Abstract;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_ProxiedService_Http_Post extends CAS_ProxiedService_Http_Abstract&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This class is used to make proxied service requests via the HTTP POST method.&#10;Usage Example:&#10;try {&#10;$service = phpCAS::getProxiedService(PHPCAS_PROXIED_SERVICE_HTTP_POST);s&#10;$service-&gt;setUrl(&apos;http://www.example.com/path/&apos;);s&#10;$service-&gt;setContentType(&apos;text/xml&apos;);s&#10;$service-&gt;setBody(&apos;&lt;?xml version=&quot;1.0&quot;?&apos;.&apos;&gt;&lt;methodCall&gt;&lt;methodName&gt;example.search&lt;/methodName&gt;&lt;/methodCall&gt;&apos;);s&#10;$service-&gt;send();s&#10;if ($service-&gt;getResponseStatusCode() == 200)&#10;return $service-&gt;getResponseBody();s&#10;else&#10;// The service responded with an error code 404, 500, etc.&#10;throw new Exception(&apos;The service responded with an error.&apos;);s&#10;} catch (CAS_ProxyTicketException $e) {&#10;if ($e-&gt;getCode() == PHPCAS_SERVICE_PT_FAILURE)&#10;return &quot;Your login has timed out. You need to log in again.&quot;;s&#10;else&#10;// Other proxy ticket errors are from bad request format&#10;// (shouldn&apos;t happen) or CAS server failure (unlikely) so lets just&#10;// stop if we hit those.&#10;throw $e;s&#10;} catch (CAS_ProxiedService_Exception $e) {&#10;// Something prevented the service request from being sent or received.&#10;// We didn&apos;t even get a valid error response (404, 500, etc), so this&#10;// might be caused by a network error or a DNS resolution failure.&#10;// We could handle it in some way, but for now we will just stop.&#10;throw $e;s&#10;}&#10;&lt;b&gt;class&lt;/b&gt;: CAS_ProxiedService_Http_Post&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,70;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="populateRequest;PHP:Function Name;285841492;f14;126;5;141;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    populateRequest(CAS_Request_RequestInterface $request)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add any other parts of the request needed by concrete classes&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    CAS_Request_RequestInterface &lt;b&gt;$request&lt;/b&gt;: request interface class;;d4,127;;b2,0;;m0;;e0;;i0;;o;;k;;l $request;;pCAS_Request_RequestInterface;;x;;n">
</treenode>
<treenode node="setBody;PHP:Function Name;285841492;f11;110;5;119;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setBody($body)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the body of this POST request.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the Request has been sent.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$body&lt;/b&gt;: body to set;;d4,111;;b1,0;;m0;;e0;;i0;;o;;k;;l $body;;p;;x;;n">
</treenode>
<treenode node="setContentType;PHP:Function Name;285841492;f11;92;5;101;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setContentType($contentType)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the content type of this POST request.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the Request has been sent.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$contentType&lt;/b&gt;: content type;;d4,93;;b1,0;;m0;;e0;;i0;;o;;k;;l $contentType;;p;;x;;n">
</treenode>
<treenode node="$_body;PHP:Var Name;285841492;f12;83;18;83;;;;vposstring;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_contentType;PHP:Var Name;285841492;f12;76;25;76;;;;vposstring;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_ProxiedService_Imap;PHP:Class Name;3449687437;f0;39;1;270;;;;vpos;;v;;aCAS_ProxiedService_Abstract;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_ProxiedService_Imap extends CAS_ProxiedService_Abstract&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Provides access to a proxy-authenticated IMAP stream&#10;&lt;b&gt;class&lt;/b&gt;: CAS_ProxiedService_Imap&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,40;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;3449687437;f11;51;5;58;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($username)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Constructor.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$username&lt;/b&gt;: Username;;d4,52;;b1,0;;m0;;e0;;i0;;o;;k;;l $username;;p;;x;;n">
</treenode>
<treenode node="getImapProxyTicket;PHP:Function Name;3449687437;f11;260;5;269;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getImapProxyTicket()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    CAS_Client::serviceMail() needs to return the proxy ticket for some reason,&#10;so this method provides access to it.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called before the stream has been&#10;opened.;;d4,261;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getServiceUrl;PHP:Function Name;3449687437;f11;71;5;80;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getServiceUrl()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer a service identifier (URL) for whom we should fetch a proxy ticket.&#10;&lt;b&gt;throws&lt;/b&gt;: Exception If no service url is available.;;d4,72;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getStream;PHP:Function Name;3449687437;f11;241;5;250;;;;vpos;;v;;aresource;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStream()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer the IMAP stream;;d4,242;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="hasBeenOpened;PHP:Function Name;3449687437;f14;223;5;226;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasBeenOpened()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer true if our request has been sent yet.;;d4,224;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="open;PHP:Function Name;3449687437;f11;180;5;216;;;;vpos;;v;;aresource;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    open()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Open the IMAP stream (similar to imap_open()).&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called multiple times.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_ProxyTicketException If there is a proxy-ticket failure.&#10;The code of the Exception will be one of:&#10;PHPCAS_SERVICE_PT_NO_SERVER_RESPONSE&#10;PHPCAS_SERVICE_PT_BAD_SERVER_RESPONSE&#10;PHPCAS_SERVICE_PT_FAILURE&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_ProxiedService_Exception If there is a failure sending the&#10;request to the target service.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Returns an IMAP stream on success;;d4,181;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="setMailbox;PHP:Function Name;3449687437;f11;120;5;133;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setMailbox($mailbox)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the mailbox to open. See the $mailbox parameter of imap_open().&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the stream has been opened.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$mailbox&lt;/b&gt;: Mailbox to set;;d4,121;;b1,0;;m0;;e0;;i0;;o;;k;;l $mailbox;;p;;x;;n">
</treenode>
<treenode node="setOptions;PHP:Function Name;3449687437;f11;148;5;161;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setOptions($options)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the options for opening the stream. See the $options parameter of&#10;imap_open().&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the stream has been opened.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$options&lt;/b&gt;: Options for the stream;;d4,149;;b1,0;;m0;;e0;;i0;;o;;k;;l $options;;p;;x;;n">
</treenode>
<treenode node="setServiceUrl;PHP:Function Name;3449687437;f11;93;5;106;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setServiceUrl($url)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the URL of the service to pass to CAS for proxy-ticket retrieval.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the stream has been opened.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: Url to set;;d4,94;;b1,0;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
<treenode node="$_mailbox;PHP:Var Name;3449687437;f20;111;29;111;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The mailbox to open. See the $mailbox parameter of imap_open().;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_options;PHP:Var Name;3449687437;f17;138;26;138;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A bit mask of options to pass to imap_open() as the $options parameter.;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_stream;PHP:Var Name;3449687437;f39;234;47;234;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The IMAP stream;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_url;PHP:Var Name;3449687437;f20;63;25;63;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The target service url.;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_username;PHP:Var Name;3449687437;f19;44;29;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The username to send via imap_open.;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_ProxyChain;PHP:Class Name;3754859421;f0;41;1;124;;;;vpos;;v;;aCAS_ProxyChain_Interface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_ProxyChain implements CAS_ProxyChain_Interface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A normal proxy-chain definition that lists each level of the chain as either&#10;a string or regular expression.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_ProxyChain&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,42;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;3754859421;f11;57;5;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(array $chain)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A chain is an array of strings or regexp strings that will be matched&#10;against. Regexp will be matched with preg_match and strings will be&#10;matched from the beginning. A string must fully match the beginning of&#10;an proxy url. So you can define a full domain as acceptable or go further&#10;down.&#10;Proxies have to be defined in reverse from the service to the user. If a&#10;user hits service A get proxied via B to service C the list of acceptable&#10;proxies on C would be array(B,A);s&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$chain&lt;/b&gt;: A chain of proxies;;d4,58;;b1,0;;m0;;e0;;i0;;o;;k;;l $chain;;p;;x;;n">
</treenode>
<treenode node="isSizeValid;PHP:Function Name;3754859421;f14;120;5;123;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isSizeValid(array $list)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Validate the size of the the list as compared to our chain.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$list&lt;/b&gt;: List of proxies;;d4,121;;b2,0;;m0;;e0;;i0;;o;;k;;l $list;;p;;x;;n">
</treenode>
<treenode node="matches;PHP:Function Name;3754859421;f11;70;5;111;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    matches(array $list)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Match a list of proxies.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$list&lt;/b&gt;: The list of proxies in front of this service.;;d4,71;;b1,0;;m0;;e0;;i0;;o;;k;;l $list;;p;;x;;n">
</treenode>
<treenode node="$chain;PHP:Var Name;3754859421;f14;43;20;43;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_ProxyChain_AllowedList;PHP:Class Name;1203276547;f0;42;1;117;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_ProxyChain_AllowedList&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ProxyChain is a container for storing chains of valid proxies that can&#10;be used to validate proxied requests to a service&#10;&lt;b&gt;class&lt;/b&gt;: CAS_ProxyChain_AllowedList&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,43;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="allowProxyChain;PHP:Function Name;1203276547;f11;61;5;64;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    allowProxyChain(CAS_ProxyChain_Interface $chain)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add a chain of proxies to the list of possible chains&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    CAS_ProxyChain_Interface &lt;b&gt;$chain&lt;/b&gt;: A chain of proxies;;d4,62;;b1,0;;m0;;e0;;i0;;o;;k;;l $chain;;pCAS_ProxyChain_Interface;;x;;n">
</treenode>
<treenode node="contains;PHP:Function Name;1203276547;f11;101;5;116;;;;vpos;;v;;aif;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    contains(array $list)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Validate the proxies from the proxy ticket validation against the&#10;chains that were definded.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$list&lt;/b&gt;: List of proxies from the proxy ticket validation.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   any chain fully matches the supplied list;;d4,102;;b1,0;;m0;;e0;;i0;;o;;k;;l $list;;p;;x;;n">
</treenode>
<treenode node="isProxyListAllowed;PHP:Function Name;1203276547;f11;73;5;91;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isProxyListAllowed(array $proxies)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if the proxies found in the response match the allowed proxies&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$proxies&lt;/b&gt;: list of proxies to check&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   whether the proxies match the allowed proxies;;d4,74;;b1,0;;m0;;e0;;i0;;o;;k;;l $proxies;;p;;x;;n">
</treenode>
<treenode node="isProxyingAllowed;PHP:Function Name;1203276547;f11;51;5;54;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isProxyingAllowed()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check whether proxies are allowed by configuration;;d4,52;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_chains;PHP:Var Name;1203276547;f18;44;26;44;;;;vpos;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_ProxyChain_Any;PHP:Class Name;897095943;f0;46;1;60;;;;vpos;;v;;aCAS_ProxyChain_Interface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_ProxyChain_Any implements CAS_ProxyChain_Interface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A proxy-chain definition that will match any list of proxies.&#10;Use this class for quick testing or in certain production screnarios you&#10;might want to allow allow any other valid service to proxy your service.&#10;THIS CLASS IS HOWEVER NOT RECOMMENDED FOR PRODUCTION AND HAS SECURITY&#10;IMPLICATIONS: YOU ARE ALLOWING ANY SERVICE TO ACT ON BEHALF OF A USER&#10;ON THIS SERVICE.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_ProxyChain_Any&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,47;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="matches;PHP:Function Name;897095943;f11;55;5;59;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    matches(array $list)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Match a list of proxies.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$list&lt;/b&gt;: The list of proxies in front of this service.;;d4,56;;b1,0;;m0;;e0;;i0;;o;;k;;l $list;;p;;x;;n">
</treenode>
</treenode>
<treenode node="CAS_ProxyChain_Trusted;PHP:Class Name;3473748796;f0;41;1;54;;;;vpos;;v;;aCAS_ProxyChain;;cCAS_ProxyChain_Interface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_ProxyChain_Trusted extends CAS_ProxyChain implements CAS_ProxyChain_Interface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A proxy-chain definition that defines a chain up to a trusted proxy and&#10;delegates the resposibility of validating the rest of the chain to that&#10;trusted proxy.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_ProxyChain_Trusted&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,42;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="isSizeValid;PHP:Function Name;3473748796;f14;50;5;53;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isSizeValid(array $list)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Validate the size of the the list as compared to our chain.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$list&lt;/b&gt;: list of proxies;;d4,51;;b2,0;;m0;;e0;;i0;;o;;k;;l $list;;p;;x;;n">
</treenode>
</treenode>
<treenode node="CAS_ProxyTicketException;PHP:Class Name;2156768635;f0;39;1;60;;;;vpos;;v;;aBadMethodCallException;;cCAS_Exception;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_ProxyTicketException extends BadMethodCallException implements CAS_Exception&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    An Exception for errors related to fetching or validating proxy tickets.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_ProxyTicketException&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,40;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;2156768635;f11;47;5;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($message, $code = PHPCAS_SERVICE_PT_FAILURE)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Constructor&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;: Message text&#10;    int &lt;b&gt;$code&lt;/b&gt;: Error code;;d4,48;;b1,0;;m0;;e0;;i0;;o;;k;;l $message;;p $code;;p;;x;;x;;n">
</treenode>
</treenode>
<treenode node="CAS_Request_AbstractRequest;PHP:Class Name;493664184;f9;39;1;377;;;;vpos;;v;;aCAS_Request_RequestInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_Request_AbstractRequest implements CAS_Request_RequestInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Provides support for performing web-requests via curl&#10;&lt;b&gt;class&lt;/b&gt;: CAS_Request_AbstractRequest&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,40;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="addCookie;PHP:Function Name;493664184;f11;93;5;102;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addCookie($name, $value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add a cookie to the request.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the Request has been sent.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: Name of entry&#10;    string &lt;b&gt;$value&lt;/b&gt;: value of entry;;d4,94;;b1,0;;m0;;e0;;i0;;o;;k;;l $name;;p $value;;p;;x;;x;;n">
</treenode>
<treenode node="addCookies;PHP:Function Name;493664184;f11;113;5;122;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addCookies(array $cookies)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add an array of cookies to the request.&#10;The cookie array is of the form&#10;array(&apos;cookie_name&apos; =&gt; &apos;cookie_value&apos;, &apos;cookie_name2&apos; =&gt; cookie_value2&apos;)&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the Request has been sent.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$cookies&lt;/b&gt;: cookies to add;;d4,114;;b1,0;;m0;;e0;;i0;;o;;k;;l $cookies;;p;;x;;n">
</treenode>
<treenode node="addHeader;PHP:Function Name;493664184;f11;131;5;140;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addHeader($header)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add a header string to the request.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the Request has been sent.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$header&lt;/b&gt;: Header to add;;d4,132;;b1,0;;m0;;e0;;i0;;o;;k;;l $header;;p;;x;;n">
</treenode>
<treenode node="addHeaders;PHP:Function Name;493664184;f11;149;5;158;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addHeaders(array $headers)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add an array of header strings to the request.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the Request has been sent.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$headers&lt;/b&gt;: headers to add;;d4,150;;b1,0;;m0;;e0;;i0;;o;;k;;l $headers;;p;;x;;n">
</treenode>
<treenode node="getErrorMessage;PHP:Function Name;493664184;f11;367;5;376;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getErrorMessage()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer a message describing any errors if the request failed.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called before the Request has been sent.;;d4,368;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getResponseBody;PHP:Function Name;493664184;f11;350;5;359;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getResponseBody()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer the body of response.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called before the Request has been sent.;;d4,351;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getResponseHeaders;PHP:Function Name;493664184;f11;305;5;314;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getResponseHeaders()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer the headers of the response.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called before the Request has been sent.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An array of header strings.;;d4,306;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getResponseStatusCode;PHP:Function Name;493664184;f11;322;5;342;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getResponseStatusCode()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer HTTP status code of the response&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called before the Request has been sent.;;d4,323;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="makePost;PHP:Function Name;493664184;f11;165;5;174;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    makePost()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Make the request a POST request rather than the default GET request.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the Request has been sent.;;d4,166;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="send;PHP:Function Name;493664184;f11;230;5;246;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    send()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Perform the request.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called multiple times.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   TRUE on success, FALSE on failure.;;d4,231;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="sendRequest;PHP:Function Name;493664184;f23;253;45;253;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Send the request and store the results.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   TRUE on success, FALSE on failure.;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="setPostBody;PHP:Function Name;493664184;f11;183;5;198;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPostBody($body)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add a POST body to the request&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the Request has been sent.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$body&lt;/b&gt;: body to add;;d4,184;;b1,0;;m0;;e0;;i0;;o;;k;;l $body;;p;;x;;n">
</treenode>
<treenode node="setSslCaCert;PHP:Function Name;493664184;f11;208;5;218;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setSslCaCert($caCertPath, $validate_cn = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Specify the path to an SSL CA certificate to validate the server with.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the Request has been sent.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$caCertPath&lt;/b&gt;: path to cert&#10;    bool &lt;b&gt;$validate_cn&lt;/b&gt;: valdiate CN of certificate;;d4,209;;b1,0;;m0;;e0;;i0;;o;;k;;l $caCertPath;;p $validate_cn;;p;;x;;x;;n">
</treenode>
<treenode node="setUrl;PHP:Function Name;493664184;f11;74;5;83;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setUrl($url)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the URL of the Request&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the Request has been sent.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: Url to set;;d4,75;;b1,0;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
<treenode node="storeErrorMessage;PHP:Function Name;493664184;f14;290;5;293;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    storeErrorMessage($message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add a string to our error message.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;: message to add;;d4,291;;b2,0;;m0;;e0;;i0;;o;;k;;l $message;;p;;x;;n">
</treenode>
<treenode node="storeResponseBody;PHP:Function Name;493664184;f14;280;5;283;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    storeResponseBody($body)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Store the response body.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$body&lt;/b&gt;: body to store;;d4,281;;b2,0;;m0;;e0;;i0;;o;;k;;l $body;;p;;x;;n">
</treenode>
<treenode node="storeResponseHeader;PHP:Function Name;493664184;f14;270;5;273;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    storeResponseHeader($header)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Store a single response header to our array.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$header&lt;/b&gt;: header to store;;d4,271;;b2,0;;m0;;e0;;i0;;o;;k;;l $header;;p;;x;;n">
</treenode>
<treenode node="storeResponseHeaders;PHP:Function Name;493664184;f14;260;5;263;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    storeResponseHeaders(array $headers)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Store the response headers.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$headers&lt;/b&gt;: headers to store;;d4,261;;b2,0;;m0;;e0;;i0;;o;;k;;l $headers;;p;;x;;n">
</treenode>
<treenode node="$_errorMessage;PHP:Var Name;493664184;f19;61;33;61;;;;vpos;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_responseBody;PHP:Var Name;493664184;f12;59;26;59;;;;vpos;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_responseHeaders;PHP:Var Name;493664184;f18;57;35;57;;;;vpos;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_sent;PHP:Var Name;493664184;f17;55;23;55;;;;vpos;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$caCertPath;PHP:Var Name;493664184;f14;51;25;51;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$cookies;PHP:Var Name;493664184;f14;43;22;43;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$headers;PHP:Var Name;493664184;f14;45;22;45;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$isPost;PHP:Var Name;493664184;f14;47;21;47;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$postBody;PHP:Var Name;493664184;f14;49;23;49;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$url;PHP:Var Name;493664184;f14;41;18;41;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$validateCN;PHP:Var Name;493664184;f14;53;25;53;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_Request_CurlMultiRequest;PHP:Class Name;3996054425;f0;41;1;147;;;;vpos;;v;;aCAS_Request_MultiRequestInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_Request_CurlMultiRequest implements CAS_Request_MultiRequestInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This interface defines a class library for performing multiple web requests&#10;in batches. Implementations of this interface may perform requests serially&#10;or in parallel.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_Request_CurlMultiRequest&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,42;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="addRequest;PHP:Function Name;3996054425;f11;62;5;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addRequest(CAS_Request_RequestInterface $request)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add a new Request to this batch.&#10;Note, implementations will likely restrict requests to their own concrete&#10;class hierarchy.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called after the Request has been sent.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_InvalidArgumentException If passed a Request of the wrong&#10;implmentation.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    CAS_Request_RequestInterface &lt;b&gt;$request&lt;/b&gt;: reqest to add;;d4,63;;b1,0;;m0;;e0;;i0;;o;;k;;l $request;;pCAS_Request_RequestInterface;;x;;n">
</treenode>
<treenode node="getNumRequests;PHP:Function Name;3996054425;f11;84;5;93;;;;vpos;;v;;anumber;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNumRequests()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Retrieve the number of requests added to this batch.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of request elements;;d4,85;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="send;PHP:Function Name;3996054425;f11;106;5;146;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    send()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Perform the request. After sending, all requests will have their&#10;responses poulated.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceException If called multiple times.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   TRUE on success, FALSE on failure.;;d4,107;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_requests;PHP:Var Name;3996054425;f18;43;28;43;;;;vpos;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_sent;PHP:Var Name;3996054425;f17;45;23;45;;;;vpos;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_Request_CurlRequest;PHP:Class Name;3482539536;f0;39;1;195;;;;vpos;;v;;aCAS_Request_AbstractRequest;;cCAS_Request_RequestInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_Request_CurlRequest extends CAS_Request_AbstractRequest implements CAS_Request_RequestInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Provides support for performing web-requests via curl&#10;&lt;b&gt;class&lt;/b&gt;: CAS_Request_CurlRequest&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,40;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="_curlReadHeaders;PHP:Function Name;3482539536;f12;190;5;194;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _curlReadHeaders($ch, $header)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Internal method for capturing the headers from a curl request.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    handle &lt;b&gt;$ch&lt;/b&gt;: handle of curl&#10;    string &lt;b&gt;$header&lt;/b&gt;: header;;d4,191;;b3,0;;m0;;e0;;i0;;o;;k;;l $ch;;p $header;;p;;x;;x;;n">
</treenode>
<treenode node="_storeResponseBody;PHP:Function Name;3482539536;f12;179;5;182;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _storeResponseBody($body)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Store the response body.&#10;This method should NOT be used outside of the CurlRequest or the&#10;CurlMultiRequest.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$body&lt;/b&gt;: body to stor;;d4,180;;b3,0;;m0;;e0;;i0;;o;;k;;l $body;;p;;x;;n">
</treenode>
<treenode node="initAndConfigure;PHP:Function Name;3482539536;f11;97;5;170;;;;vpos;;v;;aresource;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    initAndConfigure()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Internal method to initialize our cURL handle and configure the request.&#10;This method should NOT be used outside of the CurlRequest or the&#10;CurlMultiRequest.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The cURL handle on success, false on failure;;d4,98;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="sendRequest;PHP:Function Name;3482539536;f14;58;5;88;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    sendRequest()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Send the request and store the results.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true on success, false on failure.;;d4,59;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="setCurlOptions;PHP:Function Name;3482539536;f11;46;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCurlOptions(array $options)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set additional curl options&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$options&lt;/b&gt;: option to set;;d4,47;;b1,0;;m0;;e0;;i0;;o;;k;;l $options;;p;;x;;n">
</treenode>
<treenode node="$_curlOptions;PHP:Var Name;3482539536;f18;51;31;51;;;;vpos;;v;;a;;r;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_Request_Exception;PHP:Class Name;2584268670;f0;39;1;41;;;;vpos;;v;;aException;;cCAS_Exception;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_Request_Exception extends Exception implements CAS_Exception&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    An Exception for problems performing requests&#10;&lt;b&gt;class&lt;/b&gt;: CAS_Request_Exception&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,40;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CAS_TypeMismatchException;PHP:Class Name;970429983;f0;39;1;66;;;;vpos;;v;;aCAS_InvalidArgumentException;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CAS_TypeMismatchException extends CAS_InvalidArgumentException&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Exception that denotes invalid arguments were passed.&#10;&lt;b&gt;class&lt;/b&gt;: CAS_InvalidArgumentException&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,40;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;970429983;f11;50;5;65;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(&#10;        mixed $argument,&#10;        $argumentName,&#10;        $type,&#10;        $message = &apos;&apos;,&#10;        $code = 0&#10;    )&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Constructor, provides a nice message.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$argument&lt;/b&gt;: Argument&#10;    string &lt;b&gt;$argumentName&lt;/b&gt;: Argument Name&#10;    string &lt;b&gt;$type&lt;/b&gt;: Type&#10;    string &lt;b&gt;$message&lt;/b&gt;: Error Message&#10;    integer &lt;b&gt;$code&lt;/b&gt;: Code;;d6,56;;b1,0;;m0;;e0;;i0;;o;;k;;l $argument;;p $argumentName;;p $type;;p $message;;p $code;;p;;x;;x;;x;;x;;x;;n">
</treenode>
</treenode>
<treenode node="C_mailer;PHP:Class Name;2366629182;f0;52;1;91;;;;vpos;;v;;aPHPMailer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class C_mailer extends PHPMailer\PHPMailer\PHPMailer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;class&lt;/b&gt;: C_mailer&#10;PHPMailer class extension.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;package&lt;/b&gt;: PHPMailer&#10;&lt;b&gt;since&lt;/b&gt;: 2005-02-24;;d0,53;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="lang;PHP:Function Name;2366629182;f14;87;5;90;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    lang($key)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a message in the appropriate language.&#10;(override original lang() method).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$key&lt;/b&gt;: (string) language key;;d4,88;;b2,0;;m0;;e0;;i0;;o;;k;;l $key;;p;;x;;n">
</treenode>
<treenode node="setError;PHP:Function Name;2366629182;f11;63;5;68;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setError($msg)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Replace the default SetError&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$msg&lt;/b&gt;: (string) error message;;d4,64;;b1,0;;m0;;e0;;i0;;o;;k;;l $msg;;p;;x;;n">
</treenode>
<treenode node="setLanguageData;PHP:Function Name;2366629182;f11;75;5;78;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setLanguageData($lang)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the language array&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$lang&lt;/b&gt;: (array) Language array;;d4,76;;b1,0;;m0;;e0;;i0;;o;;k;;l $lang;;p;;x;;n">
</treenode>
<treenode node="$ErrorInfo;PHP:Var Name;2366629182;f11;54;21;54;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$language;PHP:Var Name;2366629182;f11;56;20;56;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="Datamatrix;PHP:Class Name;3233793924;f0;109;1;1172;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Datamatrix&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;class&lt;/b&gt;: Datamatrix&#10;Class to create DataMatrix ECC 200 barcode arrays for TCPDF class.&#10;DataMatrix (ISO/IEC 16022:2006) is a 2-dimensional bar code.&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcpdf&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;version&lt;/b&gt;: 1.0.004;;d17,109;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;3233793924;f8;234;2;344;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($code)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This is the class constructor.&#10;Creates a datamatrix object&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: Code to represent using Datamatrix.;;d36,234;;b1,0;;m0;;e0;;i0;;o;;k;;l $code;;p;;x;;n">
</treenode>
<treenode node="get253StateCodeword;PHP:Function Name;3233793924;f11;445;2;451;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    get253StateCodeword($cwpad, $cwpos)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the 253-state codeword&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$cwpad&lt;/b&gt;: Pad codeword.&#10;    int &lt;b&gt;$cwpos&lt;/b&gt;: Number of data codewords from the beginning of encoded data.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   pad codeword;;d56,445;;b2,0;;m0;;e0;;i0;;o;;k;;l $cwpad;;p $cwpos;;p;;x;;x;;n">
</treenode>
<treenode node="get255StateCodeword;PHP:Function Name;3233793924;f11;460;2;466;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    get255StateCodeword($cwpad, $cwpos)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the 255-state codeword&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$cwpad&lt;/b&gt;: Pad codeword.&#10;    int &lt;b&gt;$cwpos&lt;/b&gt;: Number of data codewords from the beginning of encoded data.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   pad codeword;;d56,460;;b2,0;;m0;;e0;;i0;;o;;k;;l $cwpad;;p $cwpos;;p;;x;;x;;n">
</treenode>
<treenode node="getBarcodeArray;PHP:Function Name;3233793924;f8;351;2;353;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBarcodeArray()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a barcode array which is readable by TCPDF&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   barcode array readable by TCPDF;s;;d35,351;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getErrorCorrection;PHP:Function Name;3233793924;f11;383;2;436;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getErrorCorrection($wd, $nb, $nd, $nc, $gf=256, $pp=301)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add error correction codewords to data codewords array (ANNEX E).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$wd&lt;/b&gt;: Array of datacodewords.&#10;    int &lt;b&gt;$nb&lt;/b&gt;: Number of blocks.&#10;    int &lt;b&gt;$nd&lt;/b&gt;: Number of data codewords per block.&#10;    int &lt;b&gt;$nc&lt;/b&gt;: Number of correction codewords per block.&#10;    int &lt;b&gt;$gf&lt;/b&gt;: numner of fields on log/antilog table (power of 2).&#10;    int &lt;b&gt;$pp&lt;/b&gt;: The value of its prime modulus polynomial (301 for ECC200).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   data codewords + error codewords;;d77,383;;b2,0;;m0;;e0;;i0;;o;;k;;l $wd;;p $nb;;p $nd;;p $nc;;p $gf;;p $pp;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="getGFProduct;PHP:Function Name;3233793924;f11;365;2;370;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getGFProduct($a, $b, $log, $alog, $gf)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Product of two numbers in a Power-of-Two Galois Field&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$a&lt;/b&gt;: first number to multiply.&#10;    int &lt;b&gt;$b&lt;/b&gt;: second number to multiply.&#10;    array &lt;b&gt;$log&lt;/b&gt;: Log table.&#10;    array &lt;b&gt;$alog&lt;/b&gt;: Anti-Log table.&#10;    int &lt;b&gt;$gf&lt;/b&gt;: Number of Factors of the Reed-Solomon polynomial.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   product;;d59,365;;b2,0;;m0;;e0;;i0;;o;;k;;l $a;;p $b;;p $log;;p $alog;;p $gf;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="getHighLevelEncoding;PHP:Function Name;3233793924;f11;706;2;967;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getHighLevelEncoding($data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get high level encoding using the minimum symbol data characters for ECC 200&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$data&lt;/b&gt;: data to encode&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of codewords;;d48,706;;b2,0;;m0;;e0;;i0;;o;;k;;l $data;;p;;x;;n">
</treenode>
<treenode node="getMaxDataCodewords;PHP:Function Name;3233793924;f11;691;2;698;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMaxDataCodewords($numcw)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Choose the minimum matrix size and return the max number of data codewords.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$numcw&lt;/b&gt;: Number of current codewords.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   number of data codewords in matrix;;d48,691;;b2,0;;m0;;e0;;i0;;o;;k;;l $numcw;;p;;x;;n">
</treenode>
<treenode node="getPlacementMap;PHP:Function Name;3233793924;f11;1115;2;1170;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPlacementMap($nrow, $ncol)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Build a placement map.&#10;(Annex F - ECC 200 symbol character placement)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$nrow&lt;/b&gt;: Number of rows.&#10;    int &lt;b&gt;$ncol&lt;/b&gt;: Number of columns.;;d50,1115;;b2,0;;m0;;e0;;i0;;o;;k;;l $nrow;;p $ncol;;p;;x;;x;;n">
</treenode>
<treenode node="getSwitchEncodingCodeword;PHP:Function Name;3233793924;f11;652;2;683;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSwitchEncodingCodeword($mode)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the switching codeword to a new encoding mode (latch codeword)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$mode&lt;/b&gt;: New encoding mode.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Switch codeword.;;d53,652;;b2,0;;m0;;e0;;i0;;o;;k;;l $mode;;p;;x;;n">
</treenode>
<treenode node="isCharMode;PHP:Function Name;3233793924;f11;475;2;512;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCharMode($chr, $mode)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the char belongs to the selected mode&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$chr&lt;/b&gt;: Character (byte) to check.&#10;    int &lt;b&gt;$mode&lt;/b&gt;: Current encoding mode.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the char is of the selected mode.;;d44,475;;b2,0;;m0;;e0;;i0;;o;;k;;l $chr;;p $mode;;p;;x;;x;;n">
</treenode>
<treenode node="lookAheadTest;PHP:Function Name;3233793924;f11;522;2;644;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    lookAheadTest($data, $pos, $mode)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The look-ahead test scans the data to be encoded to find the best mode (Annex P - steps from J to S).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$data&lt;/b&gt;: data to encode&#10;    int &lt;b&gt;$pos&lt;/b&gt;: current position&#10;    int &lt;b&gt;$mode&lt;/b&gt;: current encoding mode&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   encoding mode;;d54,522;;b2,0;;m0;;e0;;i0;;o;;k;;l $data;;p $pos;;p $mode;;p;;x;;x;;x;;n">
</treenode>
<treenode node="placeCornerA;PHP:Function Name;3233793924;f11;1029;2;1039;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    placeCornerA($marr, $nrow, $ncol, $chr)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Places the 8 bits of the first special corner case.&#10;(Annex F - ECC 200 symbol character placement)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$marr&lt;/b&gt;: Array of symbols.&#10;    int &lt;b&gt;$nrow&lt;/b&gt;: Number of rows.&#10;    int &lt;b&gt;$ncol&lt;/b&gt;: Number of columns.&#10;    int &lt;b&gt;$chr&lt;/b&gt;: Char byte.;;d60,1029;;b2,0;;m0;;e0;;i0;;o;;k;;l $marr;;p $nrow;;p $ncol;;p $chr;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="placeCornerB;PHP:Function Name;3233793924;f11;1051;2;1061;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    placeCornerB($marr, $nrow, $ncol, $chr)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Places the 8 bits of the second special corner case.&#10;(Annex F - ECC 200 symbol character placement)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$marr&lt;/b&gt;: Array of symbols.&#10;    int &lt;b&gt;$nrow&lt;/b&gt;: Number of rows.&#10;    int &lt;b&gt;$ncol&lt;/b&gt;: Number of columns.&#10;    int &lt;b&gt;$chr&lt;/b&gt;: Char byte.;;d60,1051;;b2,0;;m0;;e0;;i0;;o;;k;;l $marr;;p $nrow;;p $ncol;;p $chr;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="placeCornerC;PHP:Function Name;3233793924;f11;1073;2;1083;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    placeCornerC($marr, $nrow, $ncol, $chr)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Places the 8 bits of the third special corner case.&#10;(Annex F - ECC 200 symbol character placement)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$marr&lt;/b&gt;: Array of symbols.&#10;    int &lt;b&gt;$nrow&lt;/b&gt;: Number of rows.&#10;    int &lt;b&gt;$ncol&lt;/b&gt;: Number of columns.&#10;    int &lt;b&gt;$chr&lt;/b&gt;: Char byte.;;d60,1073;;b2,0;;m0;;e0;;i0;;o;;k;;l $marr;;p $nrow;;p $ncol;;p $chr;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="placeCornerD;PHP:Function Name;3233793924;f11;1095;2;1105;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    placeCornerD($marr, $nrow, $ncol, $chr)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Places the 8 bits of the fourth special corner case.&#10;(Annex F - ECC 200 symbol character placement)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$marr&lt;/b&gt;: Array of symbols.&#10;    int &lt;b&gt;$nrow&lt;/b&gt;: Number of rows.&#10;    int &lt;b&gt;$ncol&lt;/b&gt;: Number of columns.&#10;    int &lt;b&gt;$chr&lt;/b&gt;: Char byte.;;d60,1095;;b2,0;;m0;;e0;;i0;;o;;k;;l $marr;;p $nrow;;p $ncol;;p $chr;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="placeModule;PHP:Function Name;3233793924;f11;982;2;993;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    placeModule($marr, $nrow, $ncol, $row, $col, $chr, $bit)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Places &quot;chr+bit&quot; with appropriate wrapping within array[].&#10;(Annex F - ECC 200 symbol character placement)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$marr&lt;/b&gt;: Array of symbols.&#10;    int &lt;b&gt;$nrow&lt;/b&gt;: Number of rows.&#10;    int &lt;b&gt;$ncol&lt;/b&gt;: Number of columns.&#10;    int &lt;b&gt;$row&lt;/b&gt;: Row number.&#10;    int &lt;b&gt;$col&lt;/b&gt;: Column number.&#10;    int &lt;b&gt;$chr&lt;/b&gt;: Char byte.&#10;    int &lt;b&gt;$bit&lt;/b&gt;: Bit.;;d77,982;;b2,0;;m0;;e0;;i0;;o;;k;;l $marr;;p $nrow;;p $ncol;;p $row;;p $col;;p $chr;;p $bit;;p;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="placeUtah;PHP:Function Name;3233793924;f11;1007;2;1017;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    placeUtah($marr, $nrow, $ncol, $row, $col, $chr)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Places the 8 bits of a utah-shaped symbol character.&#10;(Annex F - ECC 200 symbol character placement)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$marr&lt;/b&gt;: Array of symbols.&#10;    int &lt;b&gt;$nrow&lt;/b&gt;: Number of rows.&#10;    int &lt;b&gt;$ncol&lt;/b&gt;: Number of columns.&#10;    int &lt;b&gt;$row&lt;/b&gt;: Row number.&#10;    int &lt;b&gt;$col&lt;/b&gt;: Column number.&#10;    int &lt;b&gt;$chr&lt;/b&gt;: Char byte.;;d69,1007;;b2,0;;m0;;e0;;i0;;o;;k;;l $marr;;p $nrow;;p $ncol;;p $row;;p $col;;p $chr;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="$barcode_array;PHP:Var Name;3233793924;f11;115;25;115;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Barcode array to be returned which is readable by TCPDF.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$chset;PHP:Var Name;3233793924;f11;189;17;189;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Basic set of characters for each encodation mode.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$chset_id;PHP:Var Name;3233793924;f11;183;20;183;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Map encodation modes whit character sets.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$last_enc;PHP:Var Name;3233793924;f11;121;20;121;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Store last used encoding for data codewords.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$symbattr;PHP:Var Name;3233793924;f11;144;20;144;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Table of Data Matrix ECC 200 Symbol Attributes:&lt;ul&gt;&#10;&lt;li&gt;total matrix rows (including finder pattern)&lt;/li&gt;&#10;&lt;li&gt;total matrix cols (including finder pattern)&lt;/li&gt;&#10;&lt;li&gt;total matrix rows (without finder pattern)&lt;/li&gt;&#10;&lt;li&gt;total matrix cols (without finder pattern)&lt;/li&gt;&#10;&lt;li&gt;region data rows (with finder pattern)&lt;/li&gt;&#10;&lt;li&gt;region data col (with finder pattern)&lt;/li&gt;&#10;&lt;li&gt;region data rows (without finder pattern)&lt;/li&gt;&#10;&lt;li&gt;region data col (without finder pattern)&lt;/li&gt;&#10;&lt;li&gt;horizontal regions&lt;/li&gt;&#10;&lt;li&gt;vertical regions&lt;/li&gt;&#10;&lt;li&gt;regions&lt;/li&gt;&#10;&lt;li&gt;data codewords&lt;/li&gt;&#10;&lt;li&gt;error codewords&lt;/li&gt;&#10;&lt;li&gt;blocks&lt;/li&gt;&#10;&lt;li&gt;data codewords per block&lt;/li&gt;&#10;&lt;li&gt;error codewords per block&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="LatexRender;PHP:Class Name;1139764871;f0;41;1;554;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class LatexRender&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;class&lt;/b&gt;: LatexRender&#10;This is a PHP5 class for generating images from LaTeX Formulas.&#10;This class is based on the following:&#10;LaTeX Rendering Class v0.8 (Licensed under GPL 2)&#10;Copyright (C) 2003 Benjamin Zeiss &lt;zeiss&#10;&lt;b&gt;math&lt;/b&gt;: .uni-goettingen.de&gt;&#10;Currently the project is maintained by Steve Mayer.&#10;Please check the following Website to obtain the original&#10;source code: http://www.mayer.dial.pipex.com/tex.htm&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcexam.shared&#10;&lt;b&gt;authors&lt;/b&gt;: Benjamin Zeiss, Nicola Asuni;;d0,42;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;1139764871;f11;177;5;180;;;;vpos;;v;;a;;r;;d4,178;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="__destruct;PHP:Function Name;1139764871;f11;185;5;187;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __destruct()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default destructor.;;d4,186;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="checkImageDimensions;PHP:Function Name;1139764871;f12;477;5;489;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    checkImageDimensions($filename)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check the dimensions of a picture file using &apos;identify&apos; of the&#10;ImageMagick tools.&#10;&lt;b&gt;returns&lt;/b&gt;: array containing the picture dimensions&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$filename&lt;/b&gt;: (string) path to a picture;;d4,478;;b3,0;;m0;;e0;;i0;;o;;k;;l $filename;;p;;x;;n">
</treenode>
<treenode node="cleanTemporaryDirectory;PHP:Function Name;1139764871;f12;457;5;468;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    cleanTemporaryDirectory($current_dir, $error_code = 0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Removes temporary files.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$current_dir&lt;/b&gt;: (string) current directory.&#10;     &lt;b&gt;$error_code&lt;/b&gt;: (int) error code.;;d4,458;;b3,0;;m0;;e0;;i0;;o;;k;;l $current_dir;;p $error_code;;p;;x;;x;;n">
</treenode>
<treenode node="getErrorCode;PHP:Function Name;1139764871;f11;410;5;413;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getErrorCode()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the error code&#10;&lt;b&gt;returns&lt;/b&gt;: int error code.;;d4,411;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getFilename;PHP:Function Name;1139764871;f12;426;5;429;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFilename($latex_formula)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Wraps a minimalistic LaTeX document around the formula and returns a string&#10;containing the whole document as string.&#10;Customize if you want other fonts for example.&#10;&lt;b&gt;returns&lt;/b&gt;: minimalistic LaTeX document containing the given formula&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$latex_formula&lt;/b&gt;: (string) formula in LaTeX format;;d4,427;;b3,0;;m0;;e0;;i0;;o;;k;;l $latex_formula;;p;;x;;n">
</treenode>
<treenode node="getFormulaURL;PHP:Function Name;1139764871;f11;350;5;386;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormulaURL($latex_formula)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Tries to match the LaTeX Formula given as argument against the&#10;formula cache. If the picture has not been rendered before, it&apos;ll&#10;try to render the formula and drop it in the picture cache directory.&#10;&lt;b&gt;returns&lt;/b&gt;: the webserver based URL to a picture which contains the&#10;requested LaTeX formula. If anything fails, the result value is false.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$latex_formula&lt;/b&gt;: (string) formula in LaTeX format;;d4,351;;b1,0;;m0;;e0;;i0;;o;;k;;l $latex_formula;;p;;x;;n">
</treenode>
<treenode node="getImageHeight;PHP:Function Name;1139764871;f11;401;5;404;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getImageHeight()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns Image height&#10;&lt;b&gt;returns&lt;/b&gt;: image height in pixels.;;d4,402;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getImageWidth;PHP:Function Name;1139764871;f11;392;5;395;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getImageWidth()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns Image width&#10;&lt;b&gt;returns&lt;/b&gt;: image width in pixels.;;d4,393;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="renderLatex;PHP:Function Name;1139764871;f12;507;5;553;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    renderLatex($latex_formula)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Renders a LaTeX formula by the using the following method:&#10;- write the formula into a wrapped tex-file in a temporary directory&#10;and change to it&#10;- Create a DVI file using latex (tetex)&#10;- Convert DVI file to Postscript (PS) using dvips (tetex)&#10;- convert, trim and add transparancy by using &apos;convert&apos; from the&#10;ImageMagick package.&#10;- Save the resulting image to the picture cache directory using an&#10;md5 hash as filename. Already rendered formulas can be found directly&#10;this way.&#10;&lt;b&gt;returns&lt;/b&gt;: true if the picture has been successfully saved to the picture&#10;cache directory&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$latex_formula&lt;/b&gt;: (string) LaTeX formula;;d4,508;;b3,0;;m0;;e0;;i0;;o;;k;;l $latex_formula;;p;;x;;n">
</treenode>
<treenode node="setFilenamePrefix;PHP:Function Name;1139764871;f11;316;5;319;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFilenamePrefix($img_prefix)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set filename prefix for chached images.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$img_prefix&lt;/b&gt;: (string) filename prefix.;;d4,317;;b1,0;;m0;;e0;;i0;;o;;k;;l $img_prefix;;p;;x;;n">
</treenode>
<treenode node="setFontSize;PHP:Function Name;1139764871;f11;297;5;300;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFontSize($font_size)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set font size.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$font_size&lt;/b&gt;: (int) font size in points.;;d4,298;;b1,0;;m0;;e0;;i0;;o;;k;;l $font_size;;p;;x;;n">
</treenode>
<treenode node="setFormulaDensity;PHP:Function Name;1139764871;f11;261;5;264;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFormulaDensity($formula_density)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set formula density (used by ImageMagick)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$formula_density&lt;/b&gt;: (int) formula density.;;d4,262;;b1,0;;m0;;e0;;i0;;o;;k;;l $formula_density;;p;;x;;n">
</treenode>
<treenode node="setImageFormat;PHP:Function Name;1139764871;f11;325;5;328;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setImageFormat($image_format)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the image format (default = PNG).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$image_format&lt;/b&gt;: (string) image format(e.g.: png).;;d4,326;;b1,0;;m0;;e0;;i0;;o;;k;;l $image_format;;p;;x;;n">
</treenode>
<treenode node="setLatexBlackList;PHP:Function Name;1139764871;f11;334;5;337;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setLatexBlackList($latex_tags_blacklist)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the list of unauthorized LaTeX commands.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$latex_tags_blacklist&lt;/b&gt;: (array) array of blacklisted commands.;;d4,335;;b1,0;;m0;;e0;;i0;;o;;k;;l $latex_tags_blacklist;;p;;x;;n">
</treenode>
<treenode node="setLatexClass;PHP:Function Name;1139764871;f11;307;5;310;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setLatexClass($latexclass)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set LaTeX class.&#10;Install extarticle class if you wish to have smaller font sizes.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$latexclass&lt;/b&gt;: (string) LaTeX class.;;d4,308;;b1,0;;m0;;e0;;i0;;o;;k;;l $latexclass;;p;;x;;n">
</treenode>
<treenode node="setMaxHeight;PHP:Function Name;1139764871;f11;279;5;282;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setMaxHeight($height_limit)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set image height limit in pixels.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$height_limit&lt;/b&gt;: (string) Max image height in pixels.;;d4,280;;b1,0;;m0;;e0;;i0;;o;;k;;l $height_limit;;p;;x;;n">
</treenode>
<treenode node="setMaxLenght;PHP:Function Name;1139764871;f11;288;5;291;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setMaxLenght($string_length_limit)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set size limit for input string.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$string_length_limit&lt;/b&gt;: (string) max lenght for LaTeX string.;;d4,289;;b1,0;;m0;;e0;;i0;;o;;k;;l $string_length_limit;;p;;x;;n">
</treenode>
<treenode node="setMaxWidth;PHP:Function Name;1139764871;f11;270;5;273;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setMaxWidth($width_limit)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set image width limit in pixels.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$width_limit&lt;/b&gt;: (string) Max image width in pixels.;;d4,271;;b1,0;;m0;;e0;;i0;;o;;k;;l $width_limit;;p;;x;;n">
</treenode>
<treenode node="setPathToDvips;PHP:Function Name;1139764871;f11;234;5;237;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPathToDvips($dvips_path)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set path to DVIPS.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$dvips_path&lt;/b&gt;: (string) path to DVIPS.;;d4,235;;b1,0;;m0;;e0;;i0;;o;;k;;l $dvips_path;;p;;x;;n">
</treenode>
<treenode node="setPathToImageMagicConvert;PHP:Function Name;1139764871;f11;243;5;246;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPathToImageMagicConvert($convert_path)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set path to ImageMagick convert.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$convert_path&lt;/b&gt;: (string) path to ImageMagick convert.;;d4,244;;b1,0;;m0;;e0;;i0;;o;;k;;l $convert_path;;p;;x;;n">
</treenode>
<treenode node="setPathToImageMagicIdentify;PHP:Function Name;1139764871;f11;252;5;255;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPathToImageMagicIdentify($identify_path)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set path to ImageMagick identify.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$identify_path&lt;/b&gt;: (string) path to ImageMagick identify.;;d4,253;;b1,0;;m0;;e0;;i0;;o;;k;;l $identify_path;;p;;x;;n">
</treenode>
<treenode node="setPathToLatex;PHP:Function Name;1139764871;f11;225;5;228;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPathToLatex($latex_path)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set path to LATEX.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$latex_path&lt;/b&gt;: (string) path to LATEX.;;d4,226;;b1,0;;m0;;e0;;i0;;o;;k;;l $latex_path;;p;;x;;n">
</treenode>
<treenode node="setPathToPicturesDir;PHP:Function Name;1139764871;f11;198;5;201;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPathToPicturesDir($picture_path)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the absolute path to images directory.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$picture_path&lt;/b&gt;: (string) absolute path to images directory.;;d4,199;;b1,0;;m0;;e0;;i0;;o;;k;;l $picture_path;;p;;x;;n">
</treenode>
<treenode node="setPathToPicturesDirHttpd;PHP:Function Name;1139764871;f11;207;5;210;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPathToPicturesDirHttpd($picture_path_httpd)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set relative path to images directory.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$picture_path_httpd&lt;/b&gt;: (string) relative path to images directory.;;d4,208;;b1,0;;m0;;e0;;i0;;o;;k;;l $picture_path_httpd;;p;;x;;n">
</treenode>
<treenode node="setPathToTempDir;PHP:Function Name;1139764871;f11;216;5;219;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPathToTempDir($tmp_dir)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set path to temporary directory.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$tmp_dir&lt;/b&gt;: (string) path to temporary directory.;;d4,217;;b1,0;;m0;;e0;;i0;;o;;k;;l $tmp_dir;;p;;x;;n">
</treenode>
<treenode node="wrapFormula;PHP:Function Name;1139764871;f12;439;5;450;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    wrapFormula($latex_formula)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Wraps a minimalistic LaTeX document around the formula and returns a string&#10;containing the whole document as string.&#10;Customize if you want other fonts for example.&#10;&lt;b&gt;returns&lt;/b&gt;: minimalistic LaTeX document containing the given formula&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$latex_formula&lt;/b&gt;: (string) formula in LaTeX format;;d4,440;;b3,0;;m0;;e0;;i0;;o;;k;;l $latex_formula;;p;;x;;n">
</treenode>
<treenode node="$convert_path;PHP:Var Name;1139764871;f14;79;27;79;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Path to ImageMagick convert.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$dvips_path;PHP:Var Name;1139764871;f14;73;25;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Path to DVIPS.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$errorcode;PHP:Var Name;1139764871;f16;147;26;147;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Error code.&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$font_size;PHP:Var Name;1139764871;f14;115;24;115;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Font size.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$formula_density;PHP:Var Name;1139764871;f14;91;30;91;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formula density (used by ImageMagick)&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$height_limit;PHP:Var Name;1139764871;f14;103;27;103;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Image height limit in pixels.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$identify_path;PHP:Var Name;1139764871;f14;85;28;85;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Path to ImageMagick identify.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$image_format;PHP:Var Name;1139764871;f14;133;27;133;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Image format (default = PNG).&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$img_height;PHP:Var Name;1139764871;f12;171;23;171;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Image height.&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$img_prefix;PHP:Var Name;1139764871;f14;127;25;127;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Filename prefix for chached images.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$img_width;PHP:Var Name;1139764871;f12;165;22;165;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Image width.&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$latex_formula;PHP:Var Name;1139764871;f19;159;33;159;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Latex formula.&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$latex_path;PHP:Var Name;1139764871;f14;67;25;67;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Path to LATEX.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$latex_tags_blacklist;PHP:Var Name;1139764871;f14;139;35;139;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    List of unauthorized LaTeX commands.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$latexclass;PHP:Var Name;1139764871;f14;121;25;121;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    LaTeX class.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$picture_path;PHP:Var Name;1139764871;f14;49;27;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Absolute path to images directory.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$picture_path_httpd;PHP:Var Name;1139764871;f14;55;33;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Relative path to images directory.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$string_length_limit;PHP:Var Name;1139764871;f14;109;34;109;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Size limit for input string.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$tmp_dir;PHP:Var Name;1139764871;f14;61;22;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Path to temporary directory.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$tmp_filename;PHP:Var Name;1139764871;f19;153;32;153;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Temporary filename.&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$width_limit;PHP:Var Name;1139764871;f14;97;26;97;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Image width limit in pixels.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="PDF417;PHP:Class Name;2869520383;f0;92;1;991;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PDF417&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;class&lt;/b&gt;: PDF417&#10;Class to create PDF417 barcode arrays for TCPDF class.&#10;PDF417 (ISO/IEC 15438:2006) is a 2-dimensional stacked bar code created by Symbol Technologies in 1991.&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcpdf&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;version&lt;/b&gt;: 1.0.003;;d13,92;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;2869520383;f8;531;2;723;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($code, $ecl=-1, $aspectratio=2, $macro=array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This is the class constructor.&#10;Creates a PDF417 object&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to represent using PDF417&#10;    int &lt;b&gt;$ecl&lt;/b&gt;: error correction level (0-8);s default -1 = automatic correction level&#10;    float &lt;b&gt;$aspectratio&lt;/b&gt;: the width to height of the symbol (excluding quiet zones)&#10;    array &lt;b&gt;$macro&lt;/b&gt;: information for macro block;;d77,531;;b1,0;;m0;;e0;;i0;;o;;k;;l $code;;p $ecl;;p $aspectratio;;p $macro;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="getBarcodeArray;PHP:Function Name;2869520383;f8;730;2;732;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBarcodeArray()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a barcode array which is readable by TCPDF&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   barcode array readable by TCPDF;s;;d35,730;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getCompaction;PHP:Function Name;2869520383;f11;872;2;989;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCompaction($mode, $code, $addmode=true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Compact data by mode.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$mode&lt;/b&gt;: compaction mode number&#10;    string &lt;b&gt;$code&lt;/b&gt;: data to compact&#10;    boolean &lt;b&gt;$addmode&lt;/b&gt;: if true add the mode codeword at first position&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of codewords;;d63,872;;b2,0;;m0;;e0;;i0;;o;;k;;l $mode;;p $code;;p $addmode;;p;;x;;x;;x;;n">
</treenode>
<treenode node="getErrorCorrection;PHP:Function Name;2869520383;f11;779;2;807;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getErrorCorrection($cw, $ecl)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the error correction codewords&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$cw&lt;/b&gt;: array of codewords including Symbol Length Descriptor and pad&#10;    int &lt;b&gt;$ecl&lt;/b&gt;: error correction level 0-8&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of error correction codewords;;d50,779;;b2,0;;m0;;e0;;i0;;o;;k;;l $cw;;p $ecl;;p;;x;;x;;n">
</treenode>
<treenode node="getErrorCorrectionLevel;PHP:Function Name;2869520383;f11;741;2;770;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getErrorCorrectionLevel($ecl, $numcw)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the error correction level (0-8) to be used&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$ecl&lt;/b&gt;: error correction level&#10;    int &lt;b&gt;$numcw&lt;/b&gt;: number of data codewords&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   error correction level;;d58,741;;b2,0;;m0;;e0;;i0;;o;;k;;l $ecl;;p $numcw;;p;;x;;x;;n">
</treenode>
<treenode node="getInputSequences;PHP:Function Name;2869520383;f11;815;2;862;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getInputSequences($code)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Create array of sequences from input&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   bi-dimensional array containing characters and classification;;d45,815;;b2,0;;m0;;e0;;i0;;o;;k;;l $code;;p;;x;;n">
</treenode>
<treenode node="$barcode_array;PHP:Var Name;2869520383;f11;98;25;98;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Barcode array to be returned which is readable by TCPDF.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$clusters;PHP:Var Name;2869520383;f11;155;20;155;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Clusters of codewords (0, 3, 6)&lt;br/&gt;&#10;Values are hex equivalents of binary representation of bars (1 = bar, 0 = space).&lt;br/&gt;&#10;The codewords numbered from 900 to 928 have special meaning, some enable to switch between modes in order to optimise the code:&lt;ul&gt;&#10;&lt;li&gt;900 : Switch to &quot;Text&quot; mode&lt;/li&gt;&#10;&lt;li&gt;901 : Switch to &quot;Byte&quot; mode&lt;/li&gt;&#10;&lt;li&gt;902 : Switch to &quot;Numeric&quot; mode&lt;/li&gt;&#10;&lt;li&gt;903 - 912 : Reserved&lt;/li&gt;&#10;&lt;li&gt;913 : Switch to &quot;Octet&quot; only for the next codeword&lt;/li&gt;&#10;&lt;li&gt;914 - 920 : Reserved&lt;/li&gt;&#10;&lt;li&gt;921 : Initialization&lt;/li&gt;&#10;&lt;li&gt;922 : Terminator codeword for Macro PDF control block&lt;/li&gt;&#10;&lt;li&gt;923 : Sequence tag to identify the beginning of optional fields in the Macro PDF control block&lt;/li&gt;&#10;&lt;li&gt;924 : Switch to &quot;Byte&quot; mode (If the total number of byte is multiple of 6)&lt;/li&gt;&#10;&lt;li&gt;925 : Identifier for a user defined Extended Channel Interpretation (ECI)&lt;/li&gt;&#10;&lt;li&gt;926 : Identifier for a general purpose ECI format&lt;/li&gt;&#10;&lt;li&gt;927 : Identifier for an ECI of a character set or code page&lt;/li&gt;&#10;&lt;li&gt;928 : Macro marker codeword to indicate the beginning of a Macro PDF Control Block&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$rsfactors;PHP:Var Name;2869520383;f11;444;21;444;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of factors of the Reed-Solomon polynomial equations used for error correction;s one sub array for each correction level (0-8).&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$start_pattern;PHP:Var Name;2869520383;f11;104;25;104;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Start pattern.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$stop_pattern;PHP:Var Name;2869520383;f11;110;24;110;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Stop pattern.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$textlatch;PHP:Var Name;2869520383;f11;127;21;127;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of switching codes for Text Compaction Sub-Modes.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$textsubmodes;PHP:Var Name;2869520383;f11;116;24;116;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of text Compaction Sub-Modes (values 0xFB - 0xFF are used for submode changers).&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="PHPMailer;PHP:NameSpace Name;1009982011;f9;20;30;20;;2740093509;f9;20;30;20;;802537343;f9;20;30;20;;1147530134;f9;20;30;20;;243411998;f9;20;30;20;;718930949;f9;30;1;56;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get an OAuth2 token from an OAuth2 provider.&#10;* Install this script on your server so that it&apos;s accessible&#10;as [https/http]://&lt;yourdomain&gt;/&lt;folder&gt;/get_oauth_token.php&#10;e.g.: http://localhost/phpmailer/get_oauth_token.php&#10;* Ensure dependencies are installed with &apos;composer install&apos;&#10;* Set up an app in your Google/Yahoo/Microsoft account&#10;* Set the script address as the app&apos;s redirect URL&#10;If no refresh token is obtained when running this file,&#10;revoke access to your app and run the script again.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="PHPMailer;PHP:NameSpace Name;1009982011;f9;20;30;20;;2740093509;f9;20;30;20;;802537343;f9;20;30;20;;1147530134;f9;20;30;20;;243411998;f9;20;30;20;;718930949;f9;30;1;56;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="Exception;PHP:Class Name;243411998;f0;27;1;38;;;;vpos;;v;;aException;;c;;r;;d0,28;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="errorMessage;PHP:Function Name;243411998;f11;34;5;37;;;;vpos;;v;;a;;r;;d4,35;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="OAuth;PHP:Class Name;1147530134;f0;34;1;137;;;;vpos;;v;;a;;r;;d0,35;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;1147530134;f11;85;5;92;;;;vpos;;v;;a;;r;;d4,86;;b1,0;;m0;;e0;;i0;;o;;k;;loptions;;p;;x;;n">
</treenode>
<treenode node="getGrant;PHP:Function Name;1147530134;f14;99;5;102;;;;vpos;;v;;a;;r;;d4,100;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getOauth64;PHP:Function Name;1147530134;f11;122;5;136;;;;vpos;;v;;a;;r;;d4,123;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getToken;PHP:Function Name;1147530134;f14;109;5;115;;;;vpos;;v;;a;;r;;d4,110;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$oauthClientId;PHP:Var Name;1147530134;f14;70;28;70;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$oauthClientSecret;PHP:Var Name;1147530134;f14;63;32;63;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$oauthRefreshToken;PHP:Var Name;1147530134;f14;77;32;77;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$oauthToken;PHP:Var Name;1147530134;f14;48;25;48;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$oauthUserEmail;PHP:Var Name;1147530134;f14;56;29;56;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$provider;PHP:Var Name;1147530134;f14;41;23;41;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="PHPMailer;PHP:Class Name;802537343;f0;30;1;4777;;;;vpos;;v;;a;;r;;d0,31;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="CHARSET_ASCII;PHP:PHP Word;802537343;f9;32;23;32;;;;vpos;;v;;a;;r&apos;us-ascii&apos;;;d-1,-1;;b0,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CHARSET_ISO88591;PHP:PHP Word;802537343;f9;33;26;33;;;;vpos;;v;;a;;r&apos;iso-8859-1&apos;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CHARSET_UTF8;PHP:PHP Word;802537343;f9;34;22;34;;;;vpos;;v;;a;;r&apos;utf-8&apos;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CONTENT_TYPE_MULTIPART_ALTERNATIVE;PHP:PHP Word;802537343;f9;39;44;39;;;;vpos;;v;;a;;r&apos;multipart/alternative&apos;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CONTENT_TYPE_MULTIPART_MIXED;PHP:PHP Word;802537343;f9;40;38;40;;;;vpos;;v;;a;;r&apos;multipart/mixed&apos;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CONTENT_TYPE_MULTIPART_RELATED;PHP:PHP Word;802537343;f9;41;40;41;;;;vpos;;v;;a;;r&apos;multipart/related&apos;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CONTENT_TYPE_PLAINTEXT;PHP:PHP Word;802537343;f9;36;32;36;;;;vpos;;v;;a;;r&apos;text/plain&apos;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CONTENT_TYPE_TEXT_CALENDAR;PHP:PHP Word;802537343;f9;37;36;37;;;;vpos;;v;;a;;r&apos;text/calendar&apos;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CONTENT_TYPE_TEXT_HTML;PHP:PHP Word;802537343;f9;38;32;38;;;;vpos;;v;;a;;r&apos;text/html&apos;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ENCODING_7BIT;PHP:PHP Word;802537343;f9;43;23;43;;;;vpos;;v;;a;;r&apos;7bit&apos;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ENCODING_8BIT;PHP:PHP Word;802537343;f9;44;23;44;;;;vpos;;v;;a;;r&apos;8bit&apos;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ENCODING_BASE64;PHP:PHP Word;802537343;f9;45;25;45;;;;vpos;;v;;a;;r&apos;base64&apos;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ENCODING_BINARY;PHP:PHP Word;802537343;f9;46;25;46;;;;vpos;;v;;a;;r&apos;binary&apos;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ENCODING_QUOTED_PRINTABLE;PHP:PHP Word;802537343;f9;47;35;47;;;;vpos;;v;;a;;r&apos;quoted-printable&apos;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ENCRYPTION_SMTPS;PHP:PHP Word;802537343;f9;50;26;50;;;;vpos;;v;;a;;r&apos;ssl&apos;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ENCRYPTION_STARTTLS;PHP:PHP Word;802537343;f9;49;29;49;;;;vpos;;v;;a;;r&apos;tls&apos;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ICAL_METHOD_ADD;PHP:PHP Word;802537343;f9;55;25;55;;;;vpos;;v;;a;;r&apos;ADD&apos;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ICAL_METHOD_CANCEL;PHP:PHP Word;802537343;f9;56;28;56;;;;vpos;;v;;a;;r&apos;CANCEL&apos;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ICAL_METHOD_COUNTER;PHP:PHP Word;802537343;f9;58;29;58;;;;vpos;;v;;a;;r&apos;COUNTER&apos;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ICAL_METHOD_DECLINECOUNTER;PHP:PHP Word;802537343;f9;59;36;59;;;;vpos;;v;;a;;r&apos;DECLINECOUNTER&apos;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ICAL_METHOD_PUBLISH;PHP:PHP Word;802537343;f9;53;29;53;;;;vpos;;v;;a;;r&apos;PUBLISH&apos;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ICAL_METHOD_REFRESH;PHP:PHP Word;802537343;f9;57;29;57;;;;vpos;;v;;a;;r&apos;REFRESH&apos;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ICAL_METHOD_REPLY;PHP:PHP Word;802537343;f9;54;27;54;;;;vpos;;v;;a;;r&apos;REPLY&apos;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ICAL_METHOD_REQUEST;PHP:PHP Word;802537343;f9;52;29;52;;;;vpos;;v;;a;;r&apos;REQUEST&apos;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="MAIL_MAX_LINE_LENGTH;PHP:PHP Word;802537343;f9;785;30;785;;;;vpos;;v;;a;;r63;;d-1,-1;;b0,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="MAX_LINE_LENGTH;PHP:PHP Word;802537343;f9;792;25;792;;;;vpos;;v;;a;;r998;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="STD_LINE_LENGTH;PHP:PHP Word;802537343;f9;802;25;802;;;;vpos;;v;;a;;r76;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="STOP_CONTINUE;PHP:PHP Word;802537343;f9;761;23;761;;;;vpos;;v;;a;;r1;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="STOP_CRITICAL;PHP:PHP Word;802537343;f9;768;23;768;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="STOP_MESSAGE;PHP:PHP Word;802537343;f9;754;22;754;;;;vpos;;v;;a;;r0;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="VERSION;PHP:PHP Word;802537343;f9;747;17;747;;;;vpos;;v;;a;;r&apos;6.1.4&apos;;;d-1,-1;;b0,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="DKIM_Add;PHP:Function Name;802537343;f11;4537;5;4671;;;;vpos;;v;;a;;r;;d4,4538;;b1,0;;m0;;e0;;i0;;o;;k;;lheaders_line;;psubject;;pbody;;p;;x;;x;;x;;n">
</treenode>
<treenode node="DKIM_BodyC;PHP:Function Name;802537343;f11;4514;5;4524;;;;vpos;;v;;a;;r;;d4,4515;;b1,0;;m0;;e0;;i0;;o;;k;;lbody;;p;;x;;n">
</treenode>
<treenode node="DKIM_HeaderC;PHP:Function Name;802537343;f11;4472;5;4501;;;;vpos;;v;;a;;r;;d4,4473;;b1,0;;m0;;e0;;i0;;o;;k;;lsignHeader;;p;;x;;n">
</treenode>
<treenode node="DKIM_QP;PHP:Function Name;802537343;f11;4409;5;4423;;;;vpos;;v;;a;;r;;d4,4410;;b1,0;;m0;;e0;;i0;;o;;k;;ltxt;;p;;x;;n">
</treenode>
<treenode node="DKIM_Sign;PHP:Function Name;802537343;f11;4434;5;4459;;;;vpos;;v;;a;;r;;d4,4435;;b1,0;;m0;;e0;;i0;;o;;k;;lsignHeader;;p;;x;;n">
</treenode>
<treenode node="__construct;PHP:Function Name;802537343;f11;809;5;816;;;;vpos;;v;;a;;r;;d4,810;;b1,0;;m0;;e0;;i0;;o;;k;;lexceptions;;p;;x;;n">
</treenode>
<treenode node="__destruct;PHP:Function Name;802537343;f11;821;5;825;;;;vpos;;v;;a;;r;;d4,822;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_mime_types;PHP:Function Name;802537343;f18;4112;5;4233;;;;vpos;;v;;a;;r;;d4,4113;;b1,5;;m0;;e0;;i0;;o;;k;;lext;;p;;x;;n">
</treenode>
<treenode node="addAddress;PHP:Function Name;802537343;f11;987;5;990;;;;vpos;;v;;a;;r;;d4,988;;b1,0;;m0;;e0;;i0;;o;;k;;laddress;;pname;;p;;x;;x;;n">
</treenode>
<treenode node="addAnAddress;PHP:Function Name;802537343;f14;1106;5;1151;;;;vpos;;v;;a;;r;;d4,1107;;b2,0;;m0;;e0;;i0;;o;;k;;lkind;;paddress;;pname;;p;;x;;x;;x;;n">
</treenode>
<treenode node="addAttachment;PHP:Function Name;802537343;f11;2943;5;2990;;;;vpos;;v;;a;;r;;d6,2949;;b1,0;;m0;;e0;;i0;;o;;k;;lpath;;pname;;pencoding;;ptype;;pdisposition;;p;;x;;x;;xENCODING_BASE64;;xENCODING_BASE64;;x;;n">
</treenode>
<treenode node="addBCC;PHP:Function Name;802537343;f11;1017;5;1020;;;;vpos;;v;;a;;r;;d4,1018;;b1,0;;m0;;e0;;i0;;o;;k;;laddress;;pname;;p;;x;;x;;n">
</treenode>
<treenode node="addCC;PHP:Function Name;802537343;f11;1002;5;1005;;;;vpos;;v;;a;;r;;d4,1003;;b1,0;;m0;;e0;;i0;;o;;k;;laddress;;pname;;p;;x;;x;;n">
</treenode>
<treenode node="addCustomHeader;PHP:Function Name;802537343;f11;3938;5;3946;;;;vpos;;v;;a;;r;;d4,3939;;b1,0;;m0;;e0;;i0;;o;;k;;lname;;pvalue;;p;;x;;x;;n">
</treenode>
<treenode node="addEmbeddedImage;PHP:Function Name;802537343;f11;3509;5;3558;;;;vpos;;v;;a;;r;;d6,3516;;b1,0;;m0;;e0;;i0;;o;;k;;lpath;;pcid;;pname;;pencoding;;ptype;;pdisposition;;p;;x;;x;;x;;xENCODING_BASE64;;xENCODING_BASE64;;x;;n">
</treenode>
<treenode node="addOrEnqueueAnAddress;PHP:Function Name;802537343;f14;1051;5;1092;;;;vpos;;v;;a;;r;;d4,1052;;b2,0;;m0;;e0;;i0;;o;;k;;lkind;;paddress;;pname;;p;;x;;x;;x;;n">
</treenode>
<treenode node="addReplyTo;PHP:Function Name;802537343;f11;1032;5;1035;;;;vpos;;v;;a;;r;;d4,1033;;b1,0;;m0;;e0;;i0;;o;;k;;laddress;;pname;;p;;x;;x;;n">
</treenode>
<treenode node="addStringAttachment;PHP:Function Name;802537343;f11;3447;5;3486;;;;vpos;;v;;a;;r;;d6,3453;;b1,0;;m0;;e0;;i0;;o;;k;;lstring;;pfilename;;pencoding;;ptype;;pdisposition;;p;;x;;x;;xENCODING_BASE64;;xENCODING_BASE64;;x;;n">
</treenode>
<treenode node="addStringEmbeddedImage;PHP:Function Name;802537343;f11;3579;5;3619;;;;vpos;;v;;a;;r;;d6,3586;;b1,0;;m0;;e0;;i0;;o;;k;;lstring;;pcid;;pname;;pencoding;;ptype;;pdisposition;;p;;x;;x;;x;;xENCODING_BASE64;;xENCODING_BASE64;;x;;n">
</treenode>
<treenode node="addrAppend;PHP:Function Name;802537343;f11;2154;5;2162;;;;vpos;;v;;a;;r;;d4,2155;;b1,0;;m0;;e0;;i0;;o;;k;;ltype;;paddr;;p;;x;;x;;n">
</treenode>
<treenode node="addrFormat;PHP:Function Name;802537343;f11;2172;5;2180;;;;vpos;;v;;a;;r;;d4,2173;;b1,0;;m0;;e0;;i0;;o;;k;;laddr;;p;;x;;n">
</treenode>
<treenode node="alternativeExists;PHP:Function Name;802537343;f11;3698;5;3701;;;;vpos;;v;;a;;r;;d4,3699;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="attachAll;PHP:Function Name;802537343;f14;3013;5;3122;;;;vpos;;v;;a;;r;;d4,3014;;b2,0;;m0;;e0;;i0;;o;;k;;ldisposition_type;;pboundary;;p;;x;;x;;n">
</treenode>
<treenode node="attachmentExists;PHP:Function Name;802537343;f11;3682;5;3691;;;;vpos;;v;;a;;r;;d4,3683;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="base64EncodeWrapMB;PHP:Function Name;802537343;f11;3333;5;3364;;;;vpos;;v;;a;;r;;d4,3334;;b1,0;;m0;;e0;;i0;;o;;k;;lstr;;plinebreak;;p;;x;;x;;n">
</treenode>
<treenode node="cidExists;PHP:Function Name;802537343;f14;3650;5;3659;;;;vpos;;v;;a;;r;;d4,3651;;b2,0;;m0;;e0;;i0;;o;;k;;lcid;;p;;x;;n">
</treenode>
<treenode node="clearAddresses;PHP:Function Name;802537343;f11;3721;5;3728;;;;vpos;;v;;a;;r;;d4,3722;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="clearAllRecipients;PHP:Function Name;802537343;f11;3766;5;3773;;;;vpos;;v;;a;;r;;d4,3767;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="clearAttachments;PHP:Function Name;802537343;f11;3778;5;3781;;;;vpos;;v;;a;;r;;d4,3779;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="clearBCCs;PHP:Function Name;802537343;f11;3745;5;3752;;;;vpos;;v;;a;;r;;d4,3746;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="clearCCs;PHP:Function Name;802537343;f11;3733;5;3740;;;;vpos;;v;;a;;r;;d4,3734;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="clearCustomHeaders;PHP:Function Name;802537343;f11;3786;5;3789;;;;vpos;;v;;a;;r;;d4,3787;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="clearQueuedAddresses;PHP:Function Name;802537343;f11;3708;5;3716;;;;vpos;;v;;a;;r;;d4,3709;;b1,0;;m0;;e0;;i0;;o;;k;;lkind;;p;;x;;n">
</treenode>
<treenode node="clearReplyTos;PHP:Function Name;802537343;f11;3757;5;3761;;;;vpos;;v;;a;;r;;d4,3758;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="createBody;PHP:Function Name;802537343;f11;2553;5;2830;;;;vpos;;v;;a;;r;;d4,2554;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="createHeader;PHP:Function Name;802537343;f11;2362;5;2448;;;;vpos;;v;;a;;r;;d4,2363;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="doCallback;PHP:Function Name;802537343;f14;4753;5;4758;;;;vpos;;v;;a;;r;;d4,4754;;b2,0;;m0;;e0;;i0;;o;;k;;lisSent;;pto;;pcc;;pbcc;;psubject;;pbody;;pfrom;;pextra;;p;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="edebug;PHP:Function Name;802537343;f14;868;5;915;;;;vpos;;v;;a;;r;;d4,869;;b2,0;;m0;;e0;;i0;;o;;k;;lstr;;p;;x;;n">
</treenode>
<treenode node="encodeFile;PHP:Function Name;802537343;f14;3133;5;3151;;;;vpos;;v;;a;;r;;d4,3134;;b2,0;;m0;;e0;;i0;;o;;k;;lpath;;pencoding;;p;;x;;x;;n">
</treenode>
<treenode node="encodeHeader;PHP:Function Name;802537343;f11;3210;5;3290;;;;vpos;;v;;a;;r;;d4,3211;;b1,0;;m0;;e0;;i0;;o;;k;;lstr;;pposition;;p;;x;;x;;n">
</treenode>
<treenode node="encodeQ;PHP:Function Name;802537343;f11;3389;5;3430;;;;vpos;;v;;a;;r;;d4,3390;;b1,0;;m0;;e0;;i0;;o;;k;;lstr;;pposition;;p;;x;;x;;n">
</treenode>
<treenode node="encodeQP;PHP:Function Name;802537343;f11;3374;5;3377;;;;vpos;;v;;a;;r;;d4,3375;;b1,0;;m0;;e0;;i0;;o;;k;;lstring;;p;;x;;n">
</treenode>
<treenode node="encodeString;PHP:Function Name;802537343;f11;3164;5;3198;;;;vpos;;v;;a;;r;;d4,3165;;b1,0;;m0;;e0;;i0;;o;;k;;lstr;;pencoding;;p;;x;;x;;n">
</treenode>
<treenode node="endBoundary;PHP:Function Name;802537343;f14;2873;5;2876;;;;vpos;;v;;a;;r;;d4,2874;;b2,0;;m0;;e0;;i0;;o;;k;;lboundary;;p;;x;;n">
</treenode>
<treenode node="filenameToType;PHP:Function Name;802537343;f18;4243;5;4253;;;;vpos;;v;;a;;r;;d4,4244;;b1,5;;m0;;e0;;i0;;o;;k;;lfilename;;p;;x;;n">
</treenode>
<treenode node="generateId;PHP:Function Name;802537343;f14;2521;5;2543;;;;vpos;;v;;a;;r;;d4,2522;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAllRecipientAddresses;PHP:Function Name;802537343;f11;4736;5;4739;;;;vpos;;v;;a;;r;;d4,4737;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAttachments;PHP:Function Name;802537343;f11;2997;5;3000;;;;vpos;;v;;a;;r;;d4,2998;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getBccAddresses;PHP:Function Name;802537343;f11;4714;5;4717;;;;vpos;;v;;a;;r;;d4,4715;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getBoundary;PHP:Function Name;802537343;f14;2842;5;2864;;;;vpos;;v;;a;;r;;d4,2843;;b2,0;;m0;;e0;;i0;;o;;k;;lboundary;;pcharSet;;pcontentType;;pencoding;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="getCcAddresses;PHP:Function Name;802537343;f11;4703;5;4706;;;;vpos;;v;;a;;r;;d4,4704;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getCustomHeaders;PHP:Function Name;802537343;f11;3953;5;3956;;;;vpos;;v;;a;;r;;d4,3954;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getLE;PHP:Function Name;802537343;f18;4371;5;4374;;;;vpos;;v;;a;;r;;d4,4372;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getLastMessageID;PHP:Function Name;802537343;f11;1263;5;1266;;;;vpos;;v;;a;;r;;d4,1264;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getMailMIME;PHP:Function Name;802537343;f11;2455;5;2500;;;;vpos;;v;;a;;r;;d4,2456;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getOAuth;PHP:Function Name;802537343;f11;4765;5;4768;;;;vpos;;v;;a;;r;;d4,4766;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getReplyToAddresses;PHP:Function Name;802537343;f11;4725;5;4728;;;;vpos;;v;;a;;r;;d4,4726;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getSMTPInstance;PHP:Function Name;802537343;f11;1803;5;1810;;;;vpos;;v;;a;;r;;d4,1804;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getSentMIMEMessage;PHP:Function Name;802537343;f11;2511;5;2514;;;;vpos;;v;;a;;r;;d4,2512;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getToAddresses;PHP:Function Name;802537343;f11;4692;5;4695;;;;vpos;;v;;a;;r;;d4,4693;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getTranslations;PHP:Function Name;802537343;f11;2138;5;2141;;;;vpos;;v;;a;;r;;d4,2139;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="has8bitChars;PHP:Function Name;802537343;f11;3316;5;3319;;;;vpos;;v;;a;;r;;d4,3317;;b1,0;;m0;;e0;;i0;;o;;k;;ltext;;p;;x;;n">
</treenode>
<treenode node="hasLineLongerThanMax;PHP:Function Name;802537343;f18;4681;5;4684;;;;vpos;;v;;a;;r;;d4,4682;;b1,5;;m0;;e0;;i0;;o;;k;;lstr;;p;;x;;n">
</treenode>
<treenode node="hasMultiBytes;PHP:Function Name;802537343;f11;3299;5;3307;;;;vpos;;v;;a;;r;;d4,3300;;b1,0;;m0;;e0;;i0;;o;;k;;lstr;;p;;x;;n">
</treenode>
<treenode node="headerLine;PHP:Function Name;802537343;f11;2909;5;2912;;;;vpos;;v;;a;;r;;d4,2910;;b1,0;;m0;;e0;;i0;;o;;k;;lname;;pvalue;;p;;x;;x;;n">
</treenode>
<treenode node="html2text;PHP:Function Name;802537343;f11;4092;5;4103;;;;vpos;;v;;a;;r;;d4,4093;;b1,0;;m0;;e0;;i0;;o;;k;;lhtml;;padvanced;;p;;x;;x;;n">
</treenode>
<treenode node="idnSupported;PHP:Function Name;802537343;f18;1358;5;1361;;;;vpos;;v;;a;;r;;d4,1359;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="inlineImageExists;PHP:Function Name;802537343;f11;3666;5;3675;;;;vpos;;v;;a;;r;;d4,3667;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="isError;PHP:Function Name;802537343;f11;3925;5;3928;;;;vpos;;v;;a;;r;;d4,3926;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="isHTML;PHP:Function Name;802537343;f11;922;5;929;;;;vpos;;v;;a;;r;;d4,923;;b1,0;;m0;;e0;;i0;;o;;k;;lisHtml;;p;;x;;n">
</treenode>
<treenode node="isMail;PHP:Function Name;802537343;f11;942;5;945;;;;vpos;;v;;a;;r;;d4,943;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="isPermittedPath;PHP:Function Name;802537343;f21;1733;5;1736;;;;vpos;;v;;a;;r;;d4,1734;;b2,5;;m0;;e0;;i0;;o;;k;;lpath;;p;;x;;n">
</treenode>
<treenode node="isQmail;PHP:Function Name;802537343;f11;965;5;975;;;;vpos;;v;;a;;r;;d4,966;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="isSMTP;PHP:Function Name;802537343;f11;934;5;937;;;;vpos;;v;;a;;r;;d4,935;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="isSendmail;PHP:Function Name;802537343;f11;950;5;960;;;;vpos;;v;;a;;r;;d4,951;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="isShellSafe;PHP:Function Name;802537343;f21;1699;5;1722;;;;vpos;;v;;a;;r;;d4,1700;;b2,5;;m0;;e0;;i0;;o;;k;;lstring;;p;;x;;n">
</treenode>
<treenode node="isValidHost;PHP:Function Name;802537343;f18;3864;5;3890;;;;vpos;;v;;a;;r;;d4,3865;;b1,5;;m0;;e0;;i0;;o;;k;;lhost;;p;;x;;n">
</treenode>
<treenode node="lang;PHP:Function Name;802537343;f14;3899;5;3918;;;;vpos;;v;;a;;r;;d4,3900;;b2,0;;m0;;e0;;i0;;o;;k;;lkey;;p;;x;;n">
</treenode>
<treenode node="mailPassthru;PHP:Function Name;802537343;f12;841;5;857;;;;vpos;;v;;a;;r;;d4,842;;b3,0;;m0;;e0;;i0;;o;;k;;lto;;psubject;;pbody;;pheader;;pparams;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="mailSend;PHP:Function Name;802537343;f14;1750;5;1794;;;;vpos;;v;;a;;r;;d4,1751;;b2,0;;m0;;e0;;i0;;o;;k;;lheader;;pbody;;p;;x;;x;;n">
</treenode>
<treenode node="mb_pathinfo;PHP:Function Name;802537343;f18;4267;5;4301;;;;vpos;;v;;a;;r;;d4,4268;;b1,5;;m0;;e0;;i0;;o;;k;;lpath;;poptions;;p;;x;;x;;n">
</treenode>
<treenode node="msgHTML;PHP:Function Name;802537343;f11;3978;5;4067;;;;vpos;;v;;a;;r;;d4,3979;;b1,0;;m0;;e0;;i0;;o;;k;;lmessage;;pbasedir;;padvanced;;p;;x;;x;;x;;n">
</treenode>
<treenode node="normalizeBreaks;PHP:Function Name;802537343;f18;4351;5;4364;;;;vpos;;v;;a;;r;;d4,4352;;b1,5;;m0;;e0;;i0;;o;;k;;ltext;;pbreaktype;;p;;x;;x;;n">
</treenode>
<treenode node="parseAddresses;PHP:Function Name;802537343;f18;1166;5;1210;;;;vpos;;v;;a;;r;;d4,1167;;b1,5;;m0;;e0;;i0;;o;;k;;laddrstr;;puseimap;;p;;x;;x;;n">
</treenode>
<treenode node="postSend;PHP:Function Name;802537343;f11;1577;5;1606;;;;vpos;;v;;a;;r;;d4,1578;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="preSend;PHP:Function Name;802537343;f11;1441;5;1568;;;;vpos;;v;;a;;r;;d4,1442;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="punyencodeAddress;PHP:Function Name;802537343;f11;1377;5;1405;;;;vpos;;v;;a;;r;;d4,1378;;b1,0;;m0;;e0;;i0;;o;;k;;laddress;;p;;x;;n">
</treenode>
<treenode node="rfcDate;PHP:Function Name;802537343;f18;3822;5;3829;;;;vpos;;v;;a;;r;;d4,3823;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="secureHeader;PHP:Function Name;802537343;f11;4336;5;4339;;;;vpos;;v;;a;;r;;d4,4337;;b1,0;;m0;;e0;;i0;;o;;k;;lstr;;p;;x;;n">
</treenode>
<treenode node="send;PHP:Function Name;802537343;f11;1415;5;1432;;;;vpos;;v;;a;;r;;d4,1416;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="sendmailSend;PHP:Function Name;802537343;f14;1620;5;1687;;;;vpos;;v;;a;;r;;d4,1621;;b2,0;;m0;;e0;;i0;;o;;k;;lheader;;pbody;;p;;x;;x;;n">
</treenode>
<treenode node="serverHostname;PHP:Function Name;802537343;f14;3837;5;3854;;;;vpos;;v;;a;;r;;d4,3838;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="set;PHP:Function Name;802537343;f11;4317;5;4327;;;;vpos;;v;;a;;r;;d4,4318;;b1,0;;m0;;e0;;i0;;o;;k;;lname;;pvalue;;p;;x;;x;;n">
</treenode>
<treenode node="setError;PHP:Function Name;802537343;f14;3796;5;3815;;;;vpos;;v;;a;;r;;d4,3797;;b2,0;;m0;;e0;;i0;;o;;k;;lmsg;;p;;x;;n">
</treenode>
<treenode node="setFrom;PHP:Function Name;802537343;f11;1223;5;1253;;;;vpos;;v;;a;;r;;d4,1224;;b1,0;;m0;;e0;;i0;;o;;k;;laddress;;pname;;pauto;;p;;x;;x;;x;;n">
</treenode>
<treenode node="setLE;PHP:Function Name;802537343;f21;4381;5;4384;;;;vpos;;v;;a;;r;;d4,4382;;b2,5;;m0;;e0;;i0;;o;;k;;lle;;p;;x;;n">
</treenode>
<treenode node="setLanguage;PHP:Function Name;802537343;f11;2066;5;2131;;;;vpos;;v;;a;;r;;d4,2067;;b1,0;;m0;;e0;;i0;;o;;k;;llangcode;;plang_path;;p;;x;;x;;n">
</treenode>
<treenode node="setMessageType;PHP:Function Name;802537343;f14;2882;5;2899;;;;vpos;;v;;a;;r;;d4,2883;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="setOAuth;PHP:Function Name;802537343;f11;4773;5;4776;;;;vpos;;v;;a;;r;;d4,4774;;b1,0;;m0;;e0;;i0;;o;;k;;loauth;;pOAuth;;x;;n">
</treenode>
<treenode node="setSMTPInstance;PHP:Function Name;802537343;f11;1817;5;1822;;;;vpos;;v;;a;;r;;d4,1818;;b1,0;;m0;;e0;;i0;;o;;k;;lsmtp;;pSMTP;;x;;n">
</treenode>
<treenode node="setWordWrap;PHP:Function Name;802537343;f11;2338;5;2355;;;;vpos;;v;;a;;r;;d4,2339;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="sign;PHP:Function Name;802537343;f11;4394;5;4400;;;;vpos;;v;;a;;r;;d4,4395;;b1,0;;m0;;e0;;i0;;o;;k;;lcert_filename;;pkey_filename;;pkey_pass;;pextracerts_filename;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="smtpClose;PHP:Function Name;802537343;f11;2048;5;2054;;;;vpos;;v;;a;;r;;d4,2049;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="smtpConnect;PHP:Function Name;802537343;f11;1924;5;2043;;;;vpos;;v;;a;;r;;d4,1925;;b1,0;;m0;;e0;;i0;;o;;k;;loptions;;p;;x;;n">
</treenode>
<treenode node="smtpSend;PHP:Function Name;802537343;f14;1839;5;1910;;;;vpos;;v;;a;;r;;d4,1840;;b2,0;;m0;;e0;;i0;;o;;k;;lheader;;pbody;;p;;x;;x;;n">
</treenode>
<treenode node="textLine;PHP:Function Name;802537343;f11;2921;5;2924;;;;vpos;;v;;a;;r;;d4,2922;;b1,0;;m0;;e0;;i0;;o;;k;;lvalue;;p;;x;;n">
</treenode>
<treenode node="utf8CharBoundary;PHP:Function Name;802537343;f11;2294;5;2330;;;;vpos;;v;;a;;r;;d4,2295;;b1,0;;m0;;e0;;i0;;o;;k;;lencodedText;;pmaxLength;;p;;x;;x;;n">
</treenode>
<treenode node="validateAddress;PHP:Function Name;802537343;f18;1292;5;1350;;;;vpos;;v;;a;;r;;d4,1293;;b1,5;;m0;;e0;;i0;;o;;k;;laddress;;ppatternselect;;p;;x;;x;;n">
</treenode>
<treenode node="validateEncoding;PHP:Function Name;802537343;f14;3628;5;3641;;;;vpos;;v;;a;;r;;d4,3629;;b2,0;;m0;;e0;;i0;;o;;k;;lencoding;;p;;x;;n">
</treenode>
<treenode node="wrapText;PHP:Function Name;802537343;f11;2194;5;2282;;;;vpos;;v;;a;;r;;d4,2195;;b1,0;;m0;;e0;;i0;;o;;k;;lmessage;;plength;;pqp_mode;;p;;x;;x;;x;;n">
</treenode>
<treenode node="$AllowEmpty;PHP:Var Name;802537343;f11;469;22;469;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$AltBody;PHP:Var Name;802537343;f11;146;19;146;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$AuthType;PHP:Var Name;802537343;f11;356;20;356;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$Body;PHP:Var Name;802537343;f11;136;16;136;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$CharSet;PHP:Var Name;802537343;f11;75;19;75;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$ConfirmReadingTo;PHP:Var Name;802537343;f11;235;28;235;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$ContentType;PHP:Var Name;802537343;f11;82;23;82;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$CustomHeader;PHP:Var Name;802537343;f14;662;27;662;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$DKIM_copyHeaderFields;PHP:Var Name;802537343;f11;508;33;508;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$DKIM_domain;PHP:Var Name;802537343;f11;501;23;501;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$DKIM_extraHeaders;PHP:Var Name;802537343;f11;517;29;517;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$DKIM_identity;PHP:Var Name;802537343;f11;484;25;484;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$DKIM_passphrase;PHP:Var Name;802537343;f11;492;27;492;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$DKIM_private;PHP:Var Name;802537343;f11;524;24;524;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$DKIM_private_string;PHP:Var Name;802537343;f11;533;31;533;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$DKIM_selector;PHP:Var Name;802537343;f11;476;25;476;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$Debugoutput;PHP:Var Name;802537343;f11;426;23;426;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$Encoding;PHP:Var Name;802537343;f11;90;20;90;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$ErrorInfo;PHP:Var Name;802537343;f11;97;21;97;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$From;PHP:Var Name;802537343;f11;104;16;104;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$FromName;PHP:Var Name;802537343;f11;111;20;111;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$Helo;PHP:Var Name;802537343;f11;299;16;299;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$Host;PHP:Var Name;802537343;f11;281;16;281;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$Hostname;PHP:Var Name;802537343;f11;247;20;247;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$Ical;PHP:Var Name;802537343;f11;158;16;158;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$IcalMethods;PHP:Var Name;802537343;f21;165;33;165;;;;vpos;;v;;a;;r;;d-1,-1;;b2,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$LE;PHP:Var Name;802537343;f21;775;24;775;;;;vpos;;v;;a;;r;;d-1,-1;;b2,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$MIMEBody;PHP:Var Name;802537343;f14;181;23;181;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$MIMEHeader;PHP:Var Name;802537343;f14;188;25;188;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$Mailer;PHP:Var Name;802537343;f11;213;18;213;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$MessageDate;PHP:Var Name;802537343;f11;267;23;267;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$MessageID;PHP:Var Name;802537343;f11;259;21;259;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$Password;PHP:Var Name;802537343;f11;348;20;348;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$Port;PHP:Var Name;802537343;f11;288;16;288;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$Priority;PHP:Var Name;802537343;f11;68;20;68;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$RecipientsQueue;PHP:Var Name;802537343;f14;637;30;637;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$ReplyTo;PHP:Var Name;802537343;f14;610;22;610;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$ReplyToQueue;PHP:Var Name;802537343;f14;648;27;648;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$SMTPAuth;PHP:Var Name;802537343;f11;327;20;327;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$SMTPAutoTLS;PHP:Var Name;802537343;f11;316;23;316;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$SMTPDebug;PHP:Var Name;802537343;f11;400;21;400;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$SMTPKeepAlive;PHP:Var Name;802537343;f11;435;25;435;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$SMTPOptions;PHP:Var Name;802537343;f11;334;23;334;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$SMTPSecure;PHP:Var Name;802537343;f11;307;22;307;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$Sender;PHP:Var Name;802537343;f11;121;18;121;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$Sendmail;PHP:Var Name;802537343;f11;220;20;220;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$SingleTo;PHP:Var Name;802537343;f11;444;20;444;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$SingleToArray;PHP:Var Name;802537343;f14;451;28;451;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$Subject;PHP:Var Name;802537343;f11;128;19;128;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$Timeout;PHP:Var Name;802537343;f11;371;19;371;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$UseSendmailOptions;PHP:Var Name;802537343;f11;228;30;228;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$Username;PHP:Var Name;802537343;f11;341;20;341;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$WordWrap;PHP:Var Name;802537343;f11;205;20;205;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$XMailer;PHP:Var Name;802537343;f11;564;19;564;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$action_function;PHP:Var Name;802537343;f11;556;27;556;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$all_recipients;PHP:Var Name;802537343;f14;622;29;622;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$attachment;PHP:Var Name;802537343;f14;655;25;655;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$bcc;PHP:Var Name;802537343;f14;603;18;603;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$boundary;PHP:Var Name;802537343;f14;683;23;683;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$cc;PHP:Var Name;802537343;f14;596;17;596;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$do_verp;PHP:Var Name;802537343;f11;462;19;462;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$dsn;PHP:Var Name;802537343;f11;384;15;384;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$error_count;PHP:Var Name;802537343;f14;697;26;697;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$exceptions;PHP:Var Name;802537343;f14;733;25;733;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$language;PHP:Var Name;802537343;f14;690;23;690;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$lastMessageID;PHP:Var Name;802537343;f14;669;28;669;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$mailHeader;PHP:Var Name;802537343;f14;195;25;195;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$message_type;PHP:Var Name;802537343;f14;676;27;676;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$oauth;PHP:Var Name;802537343;f14;363;20;363;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$sign_cert_file;PHP:Var Name;802537343;f14;704;29;704;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$sign_extracerts_file;PHP:Var Name;802537343;f14;718;35;718;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$sign_key_file;PHP:Var Name;802537343;f14;711;28;711;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$sign_key_pass;PHP:Var Name;802537343;f14;726;28;726;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$smtp;PHP:Var Name;802537343;f14;582;19;582;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$to;PHP:Var Name;802537343;f14;589;17;589;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$uniqueid;PHP:Var Name;802537343;f14;740;23;740;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$validator;PHP:Var Name;802537343;f18;575;28;575;;;;vpos;;v;;a;;r;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="POP3;PHP:Class Name;2740093509;f0;40;1;418;;;;vpos;;v;;a;;r;;d0,41;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="DEFAULT_PORT;PHP:PHP Word;2740093509;f9;54;22;54;;;;vpos;;v;;a;;r110;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="DEFAULT_TIMEOUT;PHP:PHP Word;2740093509;f9;61;25;61;;;;vpos;;v;;a;;r30;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="LE;PHP:PHP Word;2740093509;f9;130;12;130;;;;vpos;;v;;a;;r&quot;\r\n&quot;;;d-1,-1;;b0,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="VERSION;PHP:PHP Word;2740093509;f9;47;17;47;;;;vpos;;v;;a;;r&apos;6.1.4&apos;;;d-1,-1;;b0,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="authorise;PHP:Function Name;2740093509;f11;171;5;205;;;;vpos;;v;;a;;r;;d4,172;;b1,0;;m0;;e0;;i0;;o;;k;;lhost;;pport;;ptimeout;;pusername;;ppassword;;pdebug_level;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="catchWarning;PHP:Function Name;2740093509;f14;411;5;417;;;;vpos;;v;;a;;r;;d4,412;;b2,0;;m0;;e0;;i0;;o;;k;;lerrno;;perrstr;;perrfile;;perrline;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="checkResponse;PHP:Function Name;2740093509;f14;364;5;373;;;;vpos;;v;;a;;r;;d4,365;;b2,0;;m0;;e0;;i0;;o;;k;;lstring;;p;;x;;n">
</treenode>
<treenode node="connect;PHP:Function Name;2740093509;f11;216;5;266;;;;vpos;;v;;a;;r;;d4,217;;b1,0;;m0;;e0;;i0;;o;;k;;lhost;;pport;;ptval;;p;;x;;x;;x;;n">
</treenode>
<treenode node="disconnect;PHP:Function Name;2740093509;f11;307;5;317;;;;vpos;;v;;a;;r;;d4,308;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getErrors;PHP:Function Name;2740093509;f11;398;5;401;;;;vpos;;v;;a;;r;;d4,399;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getResponse;PHP:Function Name;2740093509;f14;326;5;334;;;;vpos;;v;;a;;r;;d4,327;;b2,0;;m0;;e0;;i0;;o;;k;;lsize;;p;;x;;n">
</treenode>
<treenode node="login;PHP:Function Name;2740093509;f11;277;5;302;;;;vpos;;v;;a;;r;;d4,278;;b1,0;;m0;;e0;;i0;;o;;k;;lusername;;ppassword;;p;;x;;x;;n">
</treenode>
<treenode node="popBeforeSmtp;PHP:Function Name;2740093509;f18;144;5;155;;;;vpos;;v;;a;;r;;d6,151;;b1,5;;m0;;e0;;i0;;o;;k;;lhost;;pport;;ptimeout;;pusername;;ppassword;;pdebug_level;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="sendString;PHP:Function Name;2740093509;f14;343;5;354;;;;vpos;;v;;a;;r;;d4,344;;b2,0;;m0;;e0;;i0;;o;;k;;lstring;;p;;x;;n">
</treenode>
<treenode node="setError;PHP:Function Name;2740093509;f14;381;5;391;;;;vpos;;v;;a;;r;;d4,382;;b2,0;;m0;;e0;;i0;;o;;k;;lerror;;p;;x;;n">
</treenode>
<treenode node="$connected;PHP:Var Name;2740093509;f14;118;24;118;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$do_debug;PHP:Var Name;2740093509;f11;69;20;69;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$errors;PHP:Var Name;2740093509;f14;125;21;125;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$host;PHP:Var Name;2740093509;f11;76;16;76;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$password;PHP:Var Name;2740093509;f11;104;20;104;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$pop_conn;PHP:Var Name;2740093509;f14;111;23;111;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$port;PHP:Var Name;2740093509;f11;83;16;83;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$tval;PHP:Var Name;2740093509;f11;90;16;90;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$username;PHP:Var Name;2740093509;f11;97;20;97;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="SMTP;PHP:Class Name;1009982011;f0;29;1;1369;;;;vpos;;v;;a;;r;;d0,30;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="DEBUG_CLIENT;PHP:PHP Word;1009982011;f9;84;22;84;;;;vpos;;v;;a;;r1;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="DEBUG_CONNECTION;PHP:PHP Word;1009982011;f9;98;26;98;;;;vpos;;v;;a;;r3;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="DEBUG_LOWLEVEL;PHP:PHP Word;1009982011;f9;105;24;105;;;;vpos;;v;;a;;r4;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="DEBUG_OFF;PHP:PHP Word;1009982011;f9;77;19;77;;;;vpos;;v;;a;;r0;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="DEBUG_SERVER;PHP:PHP Word;1009982011;f9;91;22;91;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="DEFAULT_PORT;PHP:PHP Word;1009982011;f9;50;22;50;;;;vpos;;v;;a;;r25;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="LE;PHP:PHP Word;1009982011;f9;43;12;43;;;;vpos;;v;;a;;r&quot;\r\n&quot;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="MAX_LINE_LENGTH;PHP:PHP Word;1009982011;f9;60;25;60;;;;vpos;;v;;a;;r998;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="MAX_REPLY_LENGTH;PHP:PHP Word;1009982011;f9;70;26;70;;;;vpos;;v;;a;;r512;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="VERSION;PHP:PHP Word;1009982011;f9;36;17;36;;;;vpos;;v;;a;;r&apos;6.1.4&apos;;;d-1,-1;;b0,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="authenticate;PHP:Function Name;1009982011;f11;447;5;566;;;;vpos;;v;;a;;r;;d6,452;;b1,0;;m0;;e0;;i0;;o;;k;;lusername;;ppassword;;pauthtype;;pOAuth;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="client_send;PHP:Function Name;1009982011;f11;1056;5;1071;;;;vpos;;v;;a;;r;;d4,1057;;b1,0;;m0;;e0;;i0;;o;;k;;ldata;;pcommand;;p;;x;;x;;n">
</treenode>
<treenode node="close;PHP:Function Name;1009982011;f11;637;5;648;;;;vpos;;v;;a;;r;;d4,638;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="connect;PHP:Function Name;1009982011;f11;311;5;399;;;;vpos;;v;;a;;r;;d4,312;;b1,0;;m0;;e0;;i0;;o;;k;;lhost;;pport;;ptimeout;;poptions;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="connected;PHP:Function Name;1009982011;f11;610;5;629;;;;vpos;;v;;a;;r;;d4,611;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="data;PHP:Function Name;1009982011;f11;663;5;742;;;;vpos;;v;;a;;r;;d4,664;;b1,0;;m0;;e0;;i0;;o;;k;;lmsg_data;;p;;x;;n">
</treenode>
<treenode node="edebug;PHP:Function Name;1009982011;f14;252;5;299;;;;vpos;;v;;a;;r;;d4,253;;b2,0;;m0;;e0;;i0;;o;;k;;lstr;;plevel;;p;;x;;x;;n">
</treenode>
<treenode node="errorHandler;PHP:Function Name;1009982011;f14;1314;5;1326;;;;vpos;;v;;a;;r;;d4,1315;;b2,0;;m0;;e0;;i0;;o;;k;;lerrno;;perrmsg;;perrfile;;perrline;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="getDebugLevel;PHP:Function Name;1009982011;f11;1281;5;1284;;;;vpos;;v;;a;;r;;d4,1282;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getDebugOutput;PHP:Function Name;1009982011;f11;1261;5;1264;;;;vpos;;v;;a;;r;;d4,1262;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getError;PHP:Function Name;1009982011;f11;1078;5;1081;;;;vpos;;v;;a;;r;;d4,1079;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getLastReply;PHP:Function Name;1009982011;f11;1138;5;1141;;;;vpos;;v;;a;;r;;d4,1139;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getLastTransactionID;PHP:Function Name;1009982011;f11;1365;5;1368;;;;vpos;;v;;a;;r;;d4,1366;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getServerExt;PHP:Function Name;1009982011;f11;1110;5;1131;;;;vpos;;v;;a;;r;;d4,1111;;b1,0;;m0;;e0;;i0;;o;;k;;lname;;p;;x;;n">
</treenode>
<treenode node="getServerExtList;PHP:Function Name;1009982011;f11;1088;5;1091;;;;vpos;;v;;a;;r;;d4,1089;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getTimeout;PHP:Function Name;1009982011;f11;1301;5;1304;;;;vpos;;v;;a;;r;;d4,1302;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getVerp;PHP:Function Name;1009982011;f11;1223;5;1226;;;;vpos;;v;;a;;r;;d4,1224;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="get_lines;PHP:Function Name;1009982011;f14;1152;5;1206;;;;vpos;;v;;a;;r;;d4,1153;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="hello;PHP:Function Name;1009982011;f11;755;5;759;;;;vpos;;v;;a;;r;;d4,756;;b1,0;;m0;;e0;;i0;;o;;k;;lhost;;p;;x;;n">
</treenode>
<treenode node="hmac;PHP:Function Name;1009982011;f14;578;5;603;;;;vpos;;v;;a;;r;;d4,579;;b2,0;;m0;;e0;;i0;;o;;k;;ldata;;pkey;;p;;x;;x;;n">
</treenode>
<treenode node="mail;PHP:Function Name;1009982011;f11;839;5;848;;;;vpos;;v;;a;;r;;d4,840;;b1,0;;m0;;e0;;i0;;o;;k;;lfrom;;p;;x;;n">
</treenode>
<treenode node="noop;PHP:Function Name;1009982011;f11;1026;5;1029;;;;vpos;;v;;a;;r;;d4,1027;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="parseHelloFields;PHP:Function Name;1009982011;f14;791;5;825;;;;vpos;;v;;a;;r;;d4,792;;b2,0;;m0;;e0;;i0;;o;;k;;ltype;;p;;x;;n">
</treenode>
<treenode node="quit;PHP:Function Name;1009982011;f11;859;5;869;;;;vpos;;v;;a;;r;;d4,860;;b1,0;;m0;;e0;;i0;;o;;k;;lclose_on_error;;p;;x;;n">
</treenode>
<treenode node="recipient;PHP:Function Name;1009982011;f11;883;5;909;;;;vpos;;v;;a;;r;;d4,884;;b1,0;;m0;;e0;;i0;;o;;k;;laddress;;pdsn;;p;;x;;x;;n">
</treenode>
<treenode node="recordLastTransactionID;PHP:Function Name;1009982011;f14;1337;5;1354;;;;vpos;;v;;a;;r;;d4,1338;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="reset;PHP:Function Name;1009982011;f11;918;5;921;;;;vpos;;v;;a;;r;;d4,919;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="sendAndMail;PHP:Function Name;1009982011;f11;1003;5;1006;;;;vpos;;v;;a;;r;;d4,1004;;b1,0;;m0;;e0;;i0;;o;;k;;lfrom;;p;;x;;n">
</treenode>
<treenode node="sendCommand;PHP:Function Name;1009982011;f14;932;5;987;;;;vpos;;v;;a;;r;;d4,933;;b2,0;;m0;;e0;;i0;;o;;k;;lcommand;;pcommandstring;;pexpect;;p;;x;;x;;x;;n">
</treenode>
<treenode node="sendHello;PHP:Function Name;1009982011;f14;772;5;783;;;;vpos;;v;;a;;r;;d4,773;;b2,0;;m0;;e0;;i0;;o;;k;;lhello;;phost;;p;;x;;x;;n">
</treenode>
<treenode node="setDebugLevel;PHP:Function Name;1009982011;f11;1271;5;1274;;;;vpos;;v;;a;;r;;d4,1272;;b1,0;;m0;;e0;;i0;;o;;k;;llevel;;p;;x;;n">
</treenode>
<treenode node="setDebugOutput;PHP:Function Name;1009982011;f11;1251;5;1254;;;;vpos;;v;;a;;r;;d4,1252;;b1,0;;m0;;e0;;i0;;o;;k;;lmethod;;p;;x;;n">
</treenode>
<treenode node="setError;PHP:Function Name;1009982011;f14;1236;5;1244;;;;vpos;;v;;a;;r;;d4,1237;;b2,0;;m0;;e0;;i0;;o;;k;;lmessage;;pdetail;;psmtp_code;;psmtp_code_ex;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="setTimeout;PHP:Function Name;1009982011;f11;1291;5;1294;;;;vpos;;v;;a;;r;;d4,1292;;b1,0;;m0;;e0;;i0;;o;;k;;ltimeout;;p;;x;;n">
</treenode>
<treenode node="setVerp;PHP:Function Name;1009982011;f11;1213;5;1216;;;;vpos;;v;;a;;r;;d4,1214;;b1,0;;m0;;e0;;i0;;o;;k;;lenabled;;p;;x;;n">
</treenode>
<treenode node="startTLS;PHP:Function Name;1009982011;f11;406;5;432;;;;vpos;;v;;a;;r;;d4,407;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="turn;PHP:Function Name;1009982011;f11;1040;5;1046;;;;vpos;;v;;a;;r;;d4,1041;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="verify;PHP:Function Name;1009982011;f11;1015;5;1018;;;;vpos;;v;;a;;r;;d4,1016;;b1,0;;m0;;e0;;i0;;o;;k;;lname;;p;;x;;n">
</treenode>
<treenode node="$Debugoutput;PHP:Var Name;1009982011;f11;141;23;141;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$Timelimit;PHP:Var Name;1009982011;f11;170;21;170;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$Timeout;PHP:Var Name;1009982011;f11;162;19;162;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$do_debug;PHP:Var Name;1009982011;f11;118;20;118;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$do_verp;PHP:Var Name;1009982011;f11;151;19;151;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$error;PHP:Var Name;1009982011;f14;209;20;209;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$helo_rply;PHP:Var Name;1009982011;f14;222;24;222;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$last_reply;PHP:Var Name;1009982011;f14;241;25;241;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$last_smtp_transaction_id;PHP:Var Name;1009982011;f14;195;39;195;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$server_caps;PHP:Var Name;1009982011;f14;234;26;234;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$smtp_conn;PHP:Var Name;1009982011;f14;202;24;202;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$smtp_transaction_id_patterns;PHP:Var Name;1009982011;f14;179;43;179;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="$_GET;PHP:Var Name;718930949;f11;45;16;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Aliases for League Provider Classes&#10;Make sure you have added these to your composer.json and run `composer install`&#10;Plenty to choose from here:&#10;&lt;b&gt;see&lt;/b&gt;: http://oauth2-client.thephpleague.com/providers/thirdparty/;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
</treenode>
<treenode node="QRcode;PHP:Class Name;643374217;f0;264;1;2838;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class QRcode&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;class&lt;/b&gt;: QRcode&#10;Class to create QR-code arrays for TCPDF class.&#10;QR Code symbol is a 2D barcode that can be scanned by handy terminals such as a mobile phone with CCD.&#10;The capacity of QR Code is up to 7000 digits or 4000 characters, and has high robustness.&#10;This class supports QR Code model 2, described in JIS (Japanese Industrial Standards) X0510:2004 or ISO/IEC 18004.&#10;Currently the following features are not supported: ECI and FNC1 mode, Micro QR Code, QR Code model 1, Structured mode.&#10;This class is derived from &quot;PHP QR Code encoder&quot; by Dominik Dzienia (http://phpqrcode.sourceforge.net/) based on &quot;libqrencode C library 3.1.1.&quot; by Kentaro Fukuchi (http://megaui.net/fukuchi/works/qrencode/index.en.html), contains Reed-Solomon code written by Phil Karn, KA9Q. QR Code is registered trademark of DENSO WAVE INCORPORATED (http://www.denso-wave.com/qrcode/index-e.html).&#10;Please read comments on this class source file for full copyright and license information.&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcpdf&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;version&lt;/b&gt;: 1.0.010;;d13,264;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;643374217;f8;612;2;646;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($code, $eclevel = &apos;L&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This is the class constructor.&#10;Creates a QRcode object&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to represent using QRcode&#10;    string &lt;b&gt;$eclevel&lt;/b&gt;: error level: &lt;ul&gt;&lt;li&gt;L : About 7% or less errors can be corrected.&lt;/li&gt;&lt;li&gt;M : About 15% or less errors can be corrected.&lt;/li&gt;&lt;li&gt;Q : About 25% or less errors can be corrected.&lt;/li&gt;&lt;li&gt;H : About 30% or less errors can be corrected.&lt;/li&gt;&lt;/ul&gt;;;d52,612;;b1,0;;m0;;e0;;i0;;o;;k;;l $code;;p $eclevel;;p;;x;;x;;n">
</treenode>
<treenode node="allocate;PHP:Function Name;643374217;f12;2104;2;2106;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    allocate($setLength)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return an array with zeros&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$setLength&lt;/b&gt;: array size;;d42,2104;;b2,0;;m0;;e0;;i0;;o;;k;;l $setLength;;p;;x;;n">
</treenode>
<treenode node="appendBitstream;PHP:Function Name;643374217;f12;2158;2;2166;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    appendBitstream($bitstream, $append)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Append one bitstream to another&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$bitstream&lt;/b&gt;: original bitstream&#10;    array &lt;b&gt;$append&lt;/b&gt;: bitstream to append&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   bitstream;;d58,2158;;b2,0;;m0;;e0;;i0;;o;;k;;l $bitstream;;p $append;;p;;x;;x;;n">
</treenode>
<treenode node="appendBytes;PHP:Function Name;643374217;f12;2190;2;2196;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    appendBytes($bitstream, $size, $data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Append one bitstream created from bytes to another&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$bitstream&lt;/b&gt;: original bitstream&#10;    int &lt;b&gt;$size&lt;/b&gt;: size&#10;    array &lt;b&gt;$data&lt;/b&gt;: bytes&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   bitstream;;d59,2190;;b2,0;;m0;;e0;;i0;;o;;k;;l $bitstream;;p $size;;p $data;;p;;x;;x;;x;;n">
</treenode>
<treenode node="appendNewInputItem;PHP:Function Name;643374217;f11;1671;2;1677;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    appendNewInputItem($items, $mode, $size, $data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Append data to an input object.&#10;The data is copied and appended to the input object.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$items&lt;/b&gt;: input items&#10;    int &lt;b&gt;$mode&lt;/b&gt;: encoding mode.&#10;    int &lt;b&gt;$size&lt;/b&gt;: size of data (byte).&#10;    array &lt;b&gt;$data&lt;/b&gt;: array of input data.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   items;;d68,1671;;b2,0;;m0;;e0;;i0;;o;;k;;l $items;;p $mode;;p $size;;p $data;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="appendNum;PHP:Function Name;643374217;f12;2175;2;2181;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    appendNum($bitstream, $bits, $num)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Append one bitstream created from number to another&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$bitstream&lt;/b&gt;: original bitstream&#10;    int &lt;b&gt;$bits&lt;/b&gt;: number of bits&#10;    int &lt;b&gt;$num&lt;/b&gt;: number&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   bitstream;;d56,2175;;b2,0;;m0;;e0;;i0;;o;;k;;l $bitstream;;p $bits;;p $num;;p;;x;;x;;x;;n">
</treenode>
<treenode node="appendPaddingBit;PHP:Function Name;643374217;f12;2030;2;2056;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    appendPaddingBit($bstream)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Append Padding Bit to bitstream&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$bstream&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   bitstream;;d48,2030;;b2,0;;m0;;e0;;i0;;o;;k;;l $bstream;;p;;x;;n">
</treenode>
<treenode node="binarize;PHP:Function Name;643374217;f11;662;2;671;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    binarize($frame)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert the frame in binary form&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$frame&lt;/b&gt;: array to binarize&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   frame in binary form;;d37,662;;b2,0;;m0;;e0;;i0;;o;;k;;l $frame;;p;;x;;n">
</treenode>
<treenode node="bitstreamToByte;PHP:Function Name;643374217;f12;2203;2;2233;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    bitstreamToByte($bstream)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert bitstream to bytes&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$bstream&lt;/b&gt;: original bitstream&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of bytes;;d47,2203;;b2,0;;m0;;e0;;i0;;o;;k;;l $bstream;;p;;x;;n">
</treenode>
<treenode node="calcN1N3;PHP:Function Name;643374217;f12;1101;2;1124;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    calcN1N3($length)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    calcN1N3&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$length&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   demerit;;d39,1101;;b2,0;;m0;;e0;;i0;;o;;k;;l $length;;p;;x;;n">
</treenode>
<treenode node="calcParity;PHP:Function Name;643374217;f12;1705;2;1715;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    calcParity($items)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    calcParity&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$items&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   parity;;d40,1705;;b2,0;;m0;;e0;;i0;;o;;k;;l $items;;p;;x;;n">
</treenode>
<treenode node="check;PHP:Function Name;643374217;f11;1834;2;1859;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    check($mode, $size, $data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Validate the input data.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$mode&lt;/b&gt;: encoding mode.&#10;    int &lt;b&gt;$size&lt;/b&gt;: size of data (byte).&#10;    array &lt;b&gt;$data&lt;/b&gt;: data to validate&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true in case of valid data, false otherwise;;d47,1834;;b2,0;;m0;;e0;;i0;;o;;k;;l $mode;;p $size;;p $data;;p;;x;;x;;x;;n">
</treenode>
<treenode node="checkModeAn;PHP:Function Name;643374217;f12;1747;2;1754;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    checkModeAn($size, $data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    checkModeAn&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$size&lt;/b&gt;&#10;    array &lt;b&gt;$data&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true or false;;d47,1747;;b2,0;;m0;;e0;;i0;;o;;k;;l $size;;p $data;;p;;x;;x;;n">
</treenode>
<treenode node="checkModeKanji;PHP:Function Name;643374217;f12;1814;2;1825;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    checkModeKanji($size, $data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    checkModeKanji&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$size&lt;/b&gt;&#10;    array &lt;b&gt;$data&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true or false;;d50,1814;;b2,0;;m0;;e0;;i0;;o;;k;;l $size;;p $data;;p;;x;;x;;n">
</treenode>
<treenode node="checkModeNum;PHP:Function Name;643374217;f12;1723;2;1730;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    checkModeNum($size, $data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    checkModeNum&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$size&lt;/b&gt;&#10;    array &lt;b&gt;$data&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true or false;;d48,1723;;b2,0;;m0;;e0;;i0;;o;;k;;l $size;;p $data;;p;;x;;x;;n">
</treenode>
<treenode node="convertData;PHP:Function Name;643374217;f12;2001;2;2023;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    convertData($items)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    convertData&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$items&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   items;;d41,2001;;b2,0;;m0;;e0;;i0;;o;;k;;l $items;;p;;x;;n">
</treenode>
<treenode node="createBitStream;PHP:Function Name;643374217;f12;1986;2;1994;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createBitStream($items)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    createBitStream&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$items&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of items and total bits;;d45,1986;;b2,0;;m0;;e0;;i0;;o;;k;;l $items;;p;;x;;n">
</treenode>
<treenode node="createFrame;PHP:Function Name;643374217;f11;2505;2;2563;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createFrame($version)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return a copy of initialized frame.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$version&lt;/b&gt;: version&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   array of unsigned char.;;d42,2505;;b2,0;;m0;;e0;;i0;;o;;k;;l $version;;p;;x;;n">
</treenode>
<treenode node="eat8;PHP:Function Name;643374217;f12;1371;2;1414;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    eat8()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    eat8&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   run;;d28,1371;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="eatAn;PHP:Function Name;643374217;f12;1318;2;1351;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    eatAn()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    eatAn&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   run;;d29,1318;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="eatKanji;PHP:Function Name;643374217;f12;1357;2;1365;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    eatKanji()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    eatKanji&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   run;;d32,1357;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="eatNum;PHP:Function Name;643374217;f12;1286;2;1312;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    eatNum()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    eatNum&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   run;;d30,1286;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="encodeBitStream;PHP:Function Name;643374217;f12;1616;2;1655;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    encodeBitStream($inputitem, $version)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    encodeBitStream&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$inputitem&lt;/b&gt;&#10;    int &lt;b&gt;$version&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   input item;;d59,1616;;b2,0;;m0;;e0;;i0;;o;;k;;l $inputitem;;p $version;;p;;x;;x;;n">
</treenode>
<treenode node="encodeMask;PHP:Function Name;643374217;f11;693;2;748;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    encodeMask($mask)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Encode mask&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$mask&lt;/b&gt;: masking mode;;d38,693;;b2,0;;m0;;e0;;i0;;o;;k;;l $mask;;p;;x;;n">
</treenode>
<treenode node="encodeMode8;PHP:Function Name;643374217;f12;1562;2;1570;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    encodeMode8($inputitem, $version)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    encodeMode8&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$inputitem&lt;/b&gt;&#10;    int &lt;b&gt;$version&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   input item;;d55,1562;;b2,0;;m0;;e0;;i0;;o;;k;;l $inputitem;;p $version;;p;;x;;x;;n">
</treenode>
<treenode node="encodeModeAn;PHP:Function Name;643374217;f12;1539;2;1554;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    encodeModeAn($inputitem, $version)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    encodeModeAn&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$inputitem&lt;/b&gt;&#10;    int &lt;b&gt;$version&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   input item;;d56,1539;;b2,0;;m0;;e0;;i0;;o;;k;;l $inputitem;;p $version;;p;;x;;x;;n">
</treenode>
<treenode node="encodeModeKanji;PHP:Function Name;643374217;f12;1578;2;1594;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    encodeModeKanji($inputitem, $version)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    encodeModeKanji&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$inputitem&lt;/b&gt;&#10;    int &lt;b&gt;$version&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   input item;;d59,1578;;b2,0;;m0;;e0;;i0;;o;;k;;l $inputitem;;p $version;;p;;x;;x;;n">
</treenode>
<treenode node="encodeModeNum;PHP:Function Name;643374217;f12;1510;2;1531;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    encodeModeNum($inputitem, $version)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    encodeModeNum&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$inputitem&lt;/b&gt;&#10;    int &lt;b&gt;$version&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   input item;;d57,1510;;b2,0;;m0;;e0;;i0;;o;;k;;l $inputitem;;p $version;;p;;x;;x;;n">
</treenode>
<treenode node="encodeModeStructure;PHP:Function Name;643374217;f12;1601;2;1608;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    encodeModeStructure($inputitem)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    encodeModeStructure&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$inputitem&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   input item;;d53,1601;;b2,0;;m0;;e0;;i0;;o;;k;;l $inputitem;;p;;x;;n">
</treenode>
<treenode node="encodeString;PHP:Function Name;643374217;f11;677;2;687;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    encodeString($string)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Encode the input string to QR code&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$string&lt;/b&gt;: input string to encode;;d42,677;;b2,0;;m0;;e0;;i0;;o;;k;;l $string;;p;;x;;n">
</treenode>
<treenode node="encode_rs_char;PHP:Function Name;643374217;f12;2803;2;2836;;;;vpos;;v;;aparity;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    encode_rs_char($rs, $data, $parity)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Encode a Reed-Solomon codec and returns the parity array&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$rs&lt;/b&gt;: RS values&#10;    array &lt;b&gt;$data&lt;/b&gt;: data&#10;    array &lt;b&gt;$parity&lt;/b&gt;: parity&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   array;;d57,2803;;b2,0;;m0;;e0;;i0;;o;;k;;l $rs;;p $data;;p $parity;;p;;x;;x;;x;;n">
</treenode>
<treenode node="estimateBitStreamSize;PHP:Function Name;643374217;f12;1867;2;1903;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    estimateBitStreamSize($items, $version)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    estimateBitStreamSize&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$items&lt;/b&gt;&#10;    int &lt;b&gt;$version&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   bits;;d61,1867;;b2,0;;m0;;e0;;i0;;o;;k;;l $items;;p $version;;p;;x;;x;;n">
</treenode>
<treenode node="estimateBitsMode8;PHP:Function Name;643374217;f12;1795;2;1797;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    estimateBitsMode8($size)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    estimateBitsMode8&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$size&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   number of bits;;d46,1795;;b2,0;;m0;;e0;;i0;;o;;k;;l $size;;p;;x;;n">
</treenode>
<treenode node="estimateBitsModeAn;PHP:Function Name;643374217;f12;1782;2;1788;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    estimateBitsModeAn($size)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    estimateBitsModeAn&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$size&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   number of bits;;d47,1782;;b2,0;;m0;;e0;;i0;;o;;k;;l $size;;p;;x;;n">
</treenode>
<treenode node="estimateBitsModeKanji;PHP:Function Name;643374217;f12;1804;2;1806;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    estimateBitsModeKanji($size)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    estimateBitsModeKanji&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$size&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   number of bits;;d50,1804;;b2,0;;m0;;e0;;i0;;o;;k;;l $size;;p;;x;;n">
</treenode>
<treenode node="estimateBitsModeNum;PHP:Function Name;643374217;f12;1761;2;1775;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    estimateBitsModeNum($size)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    estimateBitsModeNum&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$size&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   number of bits;;d48,1761;;b2,0;;m0;;e0;;i0;;o;;k;;l $size;;p;;x;;n">
</treenode>
<treenode node="estimateVersion;PHP:Function Name;643374217;f12;1910;2;1922;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    estimateVersion($items)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    estimateVersion&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$items&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   version;;d45,1910;;b2,0;;m0;;e0;;i0;;o;;k;;l $items;;p;;x;;n">
</treenode>
<treenode node="evaluateSymbol;PHP:Function Name;643374217;f12;1132;2;1185;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    evaluateSymbol($width, $frame)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    evaluateSymbol&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$width&lt;/b&gt;&#10;    array &lt;b&gt;$frame&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   demerit;;d52,1132;;b2,0;;m0;;e0;;i0;;o;;k;;l $width;;p $frame;;p;;x;;x;;n">
</treenode>
<treenode node="generateMaskNo;PHP:Function Name;643374217;f11;1038;2;1051;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    generateMaskNo($maskNo, $width, $frame)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return bitmask&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$maskNo&lt;/b&gt;: mask number&#10;    int &lt;b&gt;$width&lt;/b&gt;: width&#10;    array &lt;b&gt;$frame&lt;/b&gt;: frame&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   bitmask;;d60,1038;;b2,0;;m0;;e0;;i0;;o;;k;;l $maskNo;;p $width;;p $frame;;p;;x;;x;;x;;n">
</treenode>
<treenode node="getBarcodeArray;PHP:Function Name;643374217;f8;653;2;655;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBarcodeArray()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a barcode array which is readable by TCPDF&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   barcode array readable by TCPDF;s;;d35,653;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getBitStream;PHP:Function Name;643374217;f11;2080;2;2083;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBitStream($items)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a stream of bits.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$items&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   padded merged byte stream;;d41,2080;;b2,0;;m0;;e0;;i0;;o;;k;;l $items;;p;;x;;n">
</treenode>
<treenode node="getByteStream;PHP:Function Name;643374217;f11;2090;2;2093;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getByteStream($items)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Pack all bit streams padding bits into a byte array.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$items&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   padded merged byte stream;;d42,2090;;b2,0;;m0;;e0;;i0;;o;;k;;l $items;;p;;x;;n">
</treenode>
<treenode node="getCode;PHP:Function Name;643374217;f11;883;2;901;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCode()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return Reed-Solomon block code.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   rsblocks;;d30,883;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getDataLength;PHP:Function Name;643374217;f11;2259;2;2261;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDataLength($version, $level)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return maximum data code length (bytes) for the version.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$version&lt;/b&gt;: version&#10;    int &lt;b&gt;$level&lt;/b&gt;: error correction level&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   maximum size (bytes);;d52,2259;;b2,0;;m0;;e0;;i0;;o;;k;;l $version;;p $level;;p;;x;;x;;n">
</treenode>
<treenode node="getECCLength;PHP:Function Name;643374217;f11;2269;2;2271;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getECCLength($version, $level)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return maximum error correction code length (bytes) for the version.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$version&lt;/b&gt;: version&#10;    int &lt;b&gt;$level&lt;/b&gt;: error correction level&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   ECC size (bytes);;d50,2269;;b2,0;;m0;;e0;;i0;;o;;k;;l $version;;p $level;;p;;x;;x;;n">
</treenode>
<treenode node="getEccSpec;PHP:Function Name;643374217;f11;2360;2;2382;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getEccSpec($version, $level, $spec)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return an array of ECC specification.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$version&lt;/b&gt;: version&#10;    int &lt;b&gt;$level&lt;/b&gt;: error correction level&#10;    array &lt;b&gt;$spec&lt;/b&gt;: an array of ECC specification contains as following: {# of type1 blocks, # of data code, # of ecc code, # of type2 blocks, # of data code}&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   spec;;d56,2360;;b2,0;;m0;;e0;;i0;;o;;k;;l $version;;p $level;;p $spec;;p;;x;;x;;x;;n">
</treenode>
<treenode node="getFormatInfo;PHP:Function Name;643374217;f11;2467;2;2475;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormatInfo($mask, $level)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return BCH encoded format information pattern.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$mask&lt;/b&gt;&#10;    int &lt;b&gt;$level&lt;/b&gt;: error correction level&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   BCH encoded format information pattern;;d49,2467;;b2,0;;m0;;e0;;i0;;o;;k;;l $mask;;p $level;;p;;x;;x;;n">
</treenode>
<treenode node="getFrameAt;PHP:Function Name;643374217;f11;768;2;770;;;;vpos;;v;;avalue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFrameAt($at)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get frame value at specified position&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$at&lt;/b&gt;: x,y position&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   at specified position;;d36,768;;b2,0;;m0;;e0;;i0;;o;;k;;l $at;;p;;x;;n">
</treenode>
<treenode node="getMinimumVersion;PHP:Function Name;643374217;f11;2297;2;2306;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMinimumVersion($size, $level)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return a version number that satisfies the input code length.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$size&lt;/b&gt;: input code length (bytes)&#10;    int &lt;b&gt;$level&lt;/b&gt;: error correction level&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   version number;;d53,2297;;b2,0;;m0;;e0;;i0;;o;;k;;l $size;;p $level;;p;;x;;x;;n">
</treenode>
<treenode node="getNextPosition;PHP:Function Name;643374217;f11;776;2;821;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNextPosition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the next frame position&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of x,y coordinates;;d38,776;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getRemainder;PHP:Function Name;643374217;f11;2287;2;2289;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRemainder($version)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the numer of remainder bits.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$version&lt;/b&gt;: version&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   number of remainder bits;;d43,2287;;b2,0;;m0;;e0;;i0;;o;;k;;l $version;;p;;x;;n">
</treenode>
<treenode node="getVersionPattern;PHP:Function Name;643374217;f11;2454;2;2459;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getVersionPattern($version)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return BCH encoded version information pattern that is used for the symbol of version 7 or greater. Use lower 18 bits.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$version&lt;/b&gt;: version&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   BCH encoded version information pattern;;d48,2454;;b2,0;;m0;;e0;;i0;;o;;k;;l $version;;p;;x;;n">
</treenode>
<treenode node="getWidth;PHP:Function Name;643374217;f11;2278;2;2280;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getWidth($version)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the width of the symbol for the version.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$version&lt;/b&gt;: version&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   width;;d39,2278;;b2,0;;m0;;e0;;i0;;o;;k;;l $version;;p;;x;;n">
</treenode>
<treenode node="identifyMode;PHP:Function Name;643374217;f12;1261;2;1280;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    identifyMode($pos)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    identifyMode&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$pos&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   mode;;d40,1261;;b2,0;;m0;;e0;;i0;;o;;k;;l $pos;;p;;x;;n">
</treenode>
<treenode node="init;PHP:Function Name;643374217;f11;832;2;877;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    init($spec)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Initialize code.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$spec&lt;/b&gt;: array of ECC specification&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   0 in case of success, -1 in case of error;;d32,832;;b2,0;;m0;;e0;;i0;;o;;k;;l $spec;;p;;x;;n">
</treenode>
<treenode node="init_rs;PHP:Function Name;643374217;f12;2678;2;2689;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    init_rs($symsize, $gfpoly, $fcr, $prim, $nroots, $pad)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Initialize a Reed-Solomon codec and add it to existing rsitems&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$symsize&lt;/b&gt;: symbol size, bits&#10;    int &lt;b&gt;$gfpoly&lt;/b&gt;: Field generator polynomial coefficients&#10;    int &lt;b&gt;$fcr&lt;/b&gt;: first root of RS code generator polynomial, index form&#10;    int &lt;b&gt;$prim&lt;/b&gt;: primitive element to generate polynomial roots&#10;    int &lt;b&gt;$nroots&lt;/b&gt;: RS code generator polynomial degree (number of roots)&#10;    int &lt;b&gt;$pad&lt;/b&gt;: padding bytes at front of shortened block&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Array of RS values:&lt;ul&gt;&lt;li&gt;mm = Bits per symbol;s&lt;/li&gt;&lt;li&gt;nn = Symbols per block;s&lt;/li&gt;&lt;li&gt;alpha_to = log lookup table array;s&lt;/li&gt;&lt;li&gt;index_of = Antilog lookup table array;s&lt;/li&gt;&lt;li&gt;genpoly = Generator polynomial array;s&lt;/li&gt;&lt;li&gt;nroots = Number of generator;s&lt;/li&gt;&lt;li&gt;roots = number of parity symbols;s&lt;/li&gt;&lt;li&gt;fcr = First consecutive root, index form;s&lt;/li&gt;&lt;li&gt;prim = Primitive element, index form;s&lt;/li&gt;&lt;li&gt;iprim = prim-th root of 1, index form;s&lt;/li&gt;&lt;li&gt;pad = Padding bytes in shortened block;s&lt;/li&gt;&lt;li&gt;gfpoly&lt;/ul&gt;.;;d76,2678;;b2,0;;m0;;e0;;i0;;o;;k;;l $symsize;;p $gfpoly;;p $fcr;;p $prim;;p $nroots;;p $pad;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="init_rs_char;PHP:Function Name;643374217;f11;2719;2;2794;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    init_rs_char($symsize, $gfpoly, $fcr, $prim, $nroots, $pad)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Initialize a Reed-Solomon codec and returns an array of values.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$symsize&lt;/b&gt;: symbol size, bits&#10;    int &lt;b&gt;$gfpoly&lt;/b&gt;: Field generator polynomial coefficients&#10;    int &lt;b&gt;$fcr&lt;/b&gt;: first root of RS code generator polynomial, index form&#10;    int &lt;b&gt;$prim&lt;/b&gt;: primitive element to generate polynomial roots&#10;    int &lt;b&gt;$nroots&lt;/b&gt;: RS code generator polynomial degree (number of roots)&#10;    int &lt;b&gt;$pad&lt;/b&gt;: padding bytes at front of shortened block&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Array of RS values:&lt;ul&gt;&lt;li&gt;mm = Bits per symbol;s&lt;/li&gt;&lt;li&gt;nn = Symbols per block;s&lt;/li&gt;&lt;li&gt;alpha_to = log lookup table array;s&lt;/li&gt;&lt;li&gt;index_of = Antilog lookup table array;s&lt;/li&gt;&lt;li&gt;genpoly = Generator polynomial array;s&lt;/li&gt;&lt;li&gt;nroots = Number of generator;s&lt;/li&gt;&lt;li&gt;roots = number of parity symbols;s&lt;/li&gt;&lt;li&gt;fcr = First consecutive root, index form;s&lt;/li&gt;&lt;li&gt;prim = Primitive element, index form;s&lt;/li&gt;&lt;li&gt;iprim = prim-th root of 1, index form;s&lt;/li&gt;&lt;li&gt;pad = Padding bytes in shortened block;s&lt;/li&gt;&lt;li&gt;gfpoly&lt;/ul&gt;.;;d80,2719;;b2,0;;m0;;e0;;i0;;o;;k;;l $symsize;;p $gfpoly;;p $fcr;;p $prim;;p $nroots;;p $pad;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="insertStructuredAppendHeader;PHP:Function Name;643374217;f12;1687;2;1698;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    insertStructuredAppendHeader($items, $size, $index, $parity)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    insertStructuredAppendHeader&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$items&lt;/b&gt;&#10;    int &lt;b&gt;$size&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    int &lt;b&gt;$parity&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   items;;d82,1687;;b2,0;;m0;;e0;;i0;;o;;k;;l $items;;p $size;;p $index;;p $parity;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="isalnumat;PHP:Function Name;643374217;f12;1249;2;1254;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isalnumat($str, $pos)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return true if the character at specified position is an alphanumeric character&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: string&#10;    int &lt;b&gt;$pos&lt;/b&gt;: characted position&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true of false;;d43,1249;;b2,0;;m0;;e0;;i0;;o;;k;;l $str;;p $pos;;p;;x;;x;;n">
</treenode>
<treenode node="isdigitat;PHP:Function Name;643374217;f12;1236;2;1241;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isdigitat($str, $pos)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return true if the character at specified position is a number&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: string&#10;    int &lt;b&gt;$pos&lt;/b&gt;: characted position&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true of false;;d43,1236;;b2,0;;m0;;e0;;i0;;o;;k;;l $str;;p $pos;;p;;x;;x;;n">
</treenode>
<treenode node="lengthIndicator;PHP:Function Name;643374217;f11;2314;2;2326;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    lengthIndicator($mode, $version)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the size of length indicator for the mode and version.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$mode&lt;/b&gt;: encoding mode&#10;    int &lt;b&gt;$version&lt;/b&gt;: version&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the size of the appropriate length indicator (bits).;;d53,2314;;b2,0;;m0;;e0;;i0;;o;;k;;l $mode;;p $version;;p;;x;;x;;n">
</treenode>
<treenode node="lengthOfCode;PHP:Function Name;643374217;f12;1931;2;1979;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    lengthOfCode($mode, $version, $bits)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    lengthOfCode&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$mode&lt;/b&gt;&#10;    int &lt;b&gt;$version&lt;/b&gt;&#10;    int &lt;b&gt;$bits&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   size;;d58,1931;;b2,0;;m0;;e0;;i0;;o;;k;;l $mode;;p $version;;p $bits;;p;;x;;x;;x;;n">
</treenode>
<treenode node="lookAnTable;PHP:Function Name;643374217;f11;1737;2;1739;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    lookAnTable($c)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Look up the alphabet-numeric conversion table (see JIS X0510:2004, pp.19).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$c&lt;/b&gt;: character value&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   value;;d36,1737;;b2,0;;m0;;e0;;i0;;o;;k;;l $c;;p;;x;;n">
</treenode>
<treenode node="makeMask;PHP:Function Name;643374217;f12;1089;2;1094;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    makeMask($width, $frame, $maskNo, $level)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    makeMask&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$width&lt;/b&gt;&#10;    array &lt;b&gt;$frame&lt;/b&gt;&#10;    int &lt;b&gt;$maskNo&lt;/b&gt;&#10;    int &lt;b&gt;$level&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   mask;;d63,1089;;b2,0;;m0;;e0;;i0;;o;;k;;l $width;;p $frame;;p $maskNo;;p $level;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="makeMaskNo;PHP:Function Name;643374217;f12;1062;2;1079;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    makeMaskNo($maskNo, $width, $s, &amp;$d, $maskGenOnly=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    makeMaskNo&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$maskNo&lt;/b&gt;&#10;    int &lt;b&gt;$width&lt;/b&gt;&#10;    int &lt;b&gt;$s&lt;/b&gt;&#10;    int &lt;b&gt;$d&lt;/b&gt;&#10;    boolean &lt;b&gt;$maskGenOnly&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   b;;d78,1062;;b2,0;;m0;;e0;;i0;;o;;k;;l $maskNo;;p $width;;p $s;;p $d;;p $maskGenOnly;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="mask;PHP:Function Name;643374217;f12;1194;2;1224;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    mask($width, $frame, $level)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    mask&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$width&lt;/b&gt;&#10;    array &lt;b&gt;$frame&lt;/b&gt;&#10;    int &lt;b&gt;$level&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   best mask;;d50,1194;;b2,0;;m0;;e0;;i0;;o;;k;;l $width;;p $frame;;p $level;;p;;x;;x;;x;;n">
</treenode>
<treenode node="mask0;PHP:Function Name;643374217;f12;957;2;959;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    mask0($x, $y)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    mask0&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$x&lt;/b&gt;: X position&#10;    int &lt;b&gt;$y&lt;/b&gt;: Y position&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   mask;;d35,957;;b2,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p;;x;;x;;n">
</treenode>
<treenode node="mask1;PHP:Function Name;643374217;f12;967;2;969;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    mask1($x, $y)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    mask1&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$x&lt;/b&gt;: X position&#10;    int &lt;b&gt;$y&lt;/b&gt;: Y position&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   mask;;d35,967;;b2,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p;;x;;x;;n">
</treenode>
<treenode node="mask2;PHP:Function Name;643374217;f12;977;2;979;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    mask2($x, $y)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    mask2&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$x&lt;/b&gt;: X position&#10;    int &lt;b&gt;$y&lt;/b&gt;: Y position&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   mask;;d35,977;;b2,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p;;x;;x;;n">
</treenode>
<treenode node="mask3;PHP:Function Name;643374217;f12;987;2;989;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    mask3($x, $y)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    mask3&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$x&lt;/b&gt;: X position&#10;    int &lt;b&gt;$y&lt;/b&gt;: Y position&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   mask;;d35,987;;b2,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p;;x;;x;;n">
</treenode>
<treenode node="mask4;PHP:Function Name;643374217;f12;997;2;999;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    mask4($x, $y)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    mask4&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$x&lt;/b&gt;: X position&#10;    int &lt;b&gt;$y&lt;/b&gt;: Y position&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   mask;;d35,997;;b2,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p;;x;;x;;n">
</treenode>
<treenode node="mask5;PHP:Function Name;643374217;f12;1007;2;1009;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    mask5($x, $y)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    mask5&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$x&lt;/b&gt;: X position&#10;    int &lt;b&gt;$y&lt;/b&gt;: Y position&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   mask;;d35,1007;;b2,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p;;x;;x;;n">
</treenode>
<treenode node="mask6;PHP:Function Name;643374217;f12;1017;2;1019;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    mask6($x, $y)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    mask6&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$x&lt;/b&gt;: X position&#10;    int &lt;b&gt;$y&lt;/b&gt;: Y position&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   mask;;d35,1017;;b2,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p;;x;;x;;n">
</treenode>
<treenode node="mask7;PHP:Function Name;643374217;f12;1027;2;1029;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    mask7($x, $y)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    mask7&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$x&lt;/b&gt;: X position&#10;    int &lt;b&gt;$y&lt;/b&gt;: Y position&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   mask;;d35,1027;;b2,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p;;x;;x;;n">
</treenode>
<treenode node="maximumWords;PHP:Function Name;643374217;f11;2334;2;2351;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    maximumWords($mode, $version)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the maximum length for the mode and version.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$mode&lt;/b&gt;: encoding mode&#10;    int &lt;b&gt;$version&lt;/b&gt;: version&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the maximum length (bytes);;d50,2334;;b2,0;;m0;;e0;;i0;;o;;k;;l $mode;;p $version;;p;;x;;x;;n">
</treenode>
<treenode node="mergeBitStream;PHP:Function Name;643374217;f12;2063;2;2073;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    mergeBitStream($items)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    mergeBitStream&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$items&lt;/b&gt;: items&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   bitstream;;d44,2063;;b2,0;;m0;;e0;;i0;;o;;k;;l $items;;p;;x;;n">
</treenode>
<treenode node="modnn;PHP:Function Name;643374217;f12;2701;2;2707;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    modnn($rs, $x)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    modnn&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$rs&lt;/b&gt;: RS values&#10;    int &lt;b&gt;$x&lt;/b&gt;: X position&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   X osition;;d36,2701;;b2,0;;m0;;e0;;i0;;o;;k;;l $rs;;p $x;;p;;x;;x;;n">
</treenode>
<treenode node="newFrame;PHP:Function Name;643374217;f11;2570;2;2581;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    newFrame($version)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set new frame for the specified version.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$version&lt;/b&gt;: version&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   array of unsigned char.;;d39,2570;;b2,0;;m0;;e0;;i0;;o;;k;;l $version;;p;;x;;n">
</treenode>
<treenode node="newFromBytes;PHP:Function Name;643374217;f12;2134;2;2150;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    newFromBytes($size, $data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return new bitstream from bytes&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$size&lt;/b&gt;: size&#10;    array &lt;b&gt;$data&lt;/b&gt;: bytes&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   bitstream;;d48,2134;;b2,0;;m0;;e0;;i0;;o;;k;;l $size;;p $data;;p;;x;;x;;n">
</treenode>
<treenode node="newFromNum;PHP:Function Name;643374217;f12;2114;2;2126;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    newFromNum($bits, $num)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return new bitstream from number&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$bits&lt;/b&gt;: number of bits&#10;    int &lt;b&gt;$num&lt;/b&gt;: number&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   bitstream;;d45,2114;;b2,0;;m0;;e0;;i0;;o;;k;;l $bits;;p $num;;p;;x;;x;;n">
</treenode>
<treenode node="newInputItem;PHP:Function Name;643374217;f12;1488;2;1502;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    newInputItem($mode, $size, $data, $bstream=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    newInputItem&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$mode&lt;/b&gt;&#10;    int &lt;b&gt;$size&lt;/b&gt;&#10;    array &lt;b&gt;$data&lt;/b&gt;&#10;    array &lt;b&gt;$bstream&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   input item;;d70,1488;;b2,0;;m0;;e0;;i0;;o;;k;;l $mode;;p $size;;p $data;;p $bstream;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="putAlignmentMarker;PHP:Function Name;643374217;f11;2391;2;2405;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    putAlignmentMarker($frame, $ox, $oy)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Put an alignment marker.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$frame&lt;/b&gt;: frame&#10;    int &lt;b&gt;$ox&lt;/b&gt;: X center coordinate of the pattern&#10;    int &lt;b&gt;$oy&lt;/b&gt;: Y center coordinate of the pattern&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   frame;;d57,2391;;b2,0;;m0;;e0;;i0;;o;;k;;l $frame;;p $ox;;p $oy;;p;;x;;x;;x;;n">
</treenode>
<treenode node="putAlignmentPattern;PHP:Function Name;643374217;f12;2414;2;2447;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    putAlignmentPattern($version, $frame, $width)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Put an alignment pattern.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$version&lt;/b&gt;: version&#10;    array &lt;b&gt;$frame&lt;/b&gt;: frame&#10;    int &lt;b&gt;$width&lt;/b&gt;: width&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   frame;;d67,2414;;b2,0;;m0;;e0;;i0;;o;;k;;l $version;;p $frame;;p $width;;p;;x;;x;;x;;n">
</treenode>
<treenode node="putFinderPattern;PHP:Function Name;643374217;f11;2484;2;2498;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    putFinderPattern($frame, $ox, $oy)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Put a finder pattern.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$frame&lt;/b&gt;: frame&#10;    int &lt;b&gt;$ox&lt;/b&gt;: X center coordinate of the pattern&#10;    int &lt;b&gt;$oy&lt;/b&gt;: Y center coordinate of the pattern&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   frame;;d55,2484;;b2,0;;m0;;e0;;i0;;o;;k;;l $frame;;p $ox;;p $oy;;p;;x;;x;;x;;n">
</treenode>
<treenode node="qrstrset;PHP:Function Name;643374217;f12;2248;2;2251;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    qrstrset($srctab, $x, $y, $repl, $replLen=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Replace a value on the array at the specified position&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$srctab&lt;/b&gt;&#10;    int &lt;b&gt;$x&lt;/b&gt;: X position&#10;    int &lt;b&gt;$y&lt;/b&gt;: Y position&#10;    string &lt;b&gt;$repl&lt;/b&gt;: value to replace&#10;    int &lt;b&gt;$replLen&lt;/b&gt;: length of the repl string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   srctab;;d70,2248;;b2,0;;m0;;e0;;i0;;o;;k;;l $srctab;;p $x;;p $y;;p $repl;;p $replLen;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="rsBlockNum;PHP:Function Name;643374217;f12;2588;2;2590;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    rsBlockNum($spec)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return block number 0&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$spec&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   value;;d39,2588;;b2,0;;m0;;e0;;i0;;o;;k;;l $spec;;p;;x;;n">
</treenode>
<treenode node="rsBlockNum1;PHP:Function Name;643374217;f12;2597;2;2599;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    rsBlockNum1($spec)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return block number 1&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$spec&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   value;;d40,2597;;b2,0;;m0;;e0;;i0;;o;;k;;l $spec;;p;;x;;n">
</treenode>
<treenode node="rsBlockNum2;PHP:Function Name;643374217;f12;2624;2;2626;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    rsBlockNum2($spec)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return block number 2&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$spec&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   value;;d40,2624;;b2,0;;m0;;e0;;i0;;o;;k;;l $spec;;p;;x;;n">
</treenode>
<treenode node="rsDataCodes1;PHP:Function Name;643374217;f12;2606;2;2608;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    rsDataCodes1($spec)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return data codes 1&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$spec&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   value;;d41,2606;;b2,0;;m0;;e0;;i0;;o;;k;;l $spec;;p;;x;;n">
</treenode>
<treenode node="rsDataCodes2;PHP:Function Name;643374217;f12;2633;2;2635;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    rsDataCodes2($spec)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return data codes 2&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$spec&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   value;;d41,2633;;b2,0;;m0;;e0;;i0;;o;;k;;l $spec;;p;;x;;n">
</treenode>
<treenode node="rsDataLength;PHP:Function Name;643374217;f12;2651;2;2653;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    rsDataLength($spec)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return data length&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$spec&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   value;;d41,2651;;b2,0;;m0;;e0;;i0;;o;;k;;l $spec;;p;;x;;n">
</treenode>
<treenode node="rsEccCodes1;PHP:Function Name;643374217;f12;2615;2;2617;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    rsEccCodes1($spec)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return ecc codes 1&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$spec&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   value;;d40,2615;;b2,0;;m0;;e0;;i0;;o;;k;;l $spec;;p;;x;;n">
</treenode>
<treenode node="rsEccCodes2;PHP:Function Name;643374217;f12;2642;2;2644;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    rsEccCodes2($spec)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return ecc codes 2&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$spec&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   value;;d40,2642;;b2,0;;m0;;e0;;i0;;o;;k;;l $spec;;p;;x;;n">
</treenode>
<treenode node="rsEccLength;PHP:Function Name;643374217;f12;2660;2;2662;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    rsEccLength($spec)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return ecc length&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$spec&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   value;;d40,2660;;b2,0;;m0;;e0;;i0;;o;;k;;l $spec;;p;;x;;n">
</treenode>
<treenode node="setFrameAt;PHP:Function Name;643374217;f11;759;2;761;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFrameAt($at, $val)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set frame value at specified position&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$at&lt;/b&gt;: x,y position&#10;    int &lt;b&gt;$val&lt;/b&gt;: value of the character to set;;d42,759;;b2,0;;m0;;e0;;i0;;o;;k;;l $at;;p $val;;p;;x;;x;;n">
</treenode>
<treenode node="splitString;PHP:Function Name;643374217;f12;1420;2;1454;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    splitString()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    splitString;;d35,1420;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="toUpper;PHP:Function Name;643374217;f12;1459;2;1474;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    toUpper()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    toUpper;;d31,1459;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="writeFormatInformation;PHP:Function Name;643374217;f12;915;2;949;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    writeFormatInformation($width, &amp;$frame, $mask, $level)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Write Format Information on frame and returns the number of black bits&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$width&lt;/b&gt;: frame width&#10;    array &lt;b&gt;$frame&lt;/b&gt;: frame&#10;    array &lt;b&gt;$mask&lt;/b&gt;: masking mode&#10;    int &lt;b&gt;$level&lt;/b&gt;: error correction level&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   blacks;;d76,915;;b2,0;;m0;;e0;;i0;;o;;k;;l $width;;p $frame;;p $mask;;p $level;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="$alignmentPattern;PHP:Var Name;643374217;f11;562;28;562;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array Positions of alignment patterns.&#10;This array includes only the second and the third position of the alignment patterns. Rest of them can be calculated from the distance between them.&#10;See Table 1 in Appendix E (pp.71) of JIS X0510:2004.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$anTable;PHP:Var Name;643374217;f11;436;19;436;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Alphabet-numeric convesion table.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$b1;PHP:Var Name;643374217;f11;394;14;394;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Value b1.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$barcode_array;PHP:Var Name;643374217;f11;270;25;270;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Barcode array to be returned which is readable by TCPDF.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$bit;PHP:Var Name;643374217;f11;344;15;344;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Single bit value.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$blocks;PHP:Var Name;643374217;f11;364;18;364;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Blocks.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$capacity;PHP:Var Name;643374217;f11;452;20;452;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array Table of the capacity of symbols.&#10;See Table 1 (pp.13) and Table 12-16 (pp.30-36), JIS X0510:2004.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$casesensitive;PHP:Var Name;643374217;f11;294;25;294;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Boolean flag, if true the input string will be converted to uppercase.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$count;PHP:Var Name;643374217;f11;376;17;376;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Counter.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$data;PHP:Var Name;643374217;f11;306;16;306;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Mask data.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$dataLength;PHP:Var Name;643374217;f11;382;22;382;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Data length.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$dataStr;PHP:Var Name;643374217;f11;410;19;410;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Input data string.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$datacode;PHP:Var Name;643374217;f11;352;20;352;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Data code.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$dir;PHP:Var Name;643374217;f11;338;15;338;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Direction.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$eccLength;PHP:Var Name;643374217;f11;388;21;388;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Error correction length.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$eccTable;PHP:Var Name;643374217;f11;512;20;512;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array Table of the error correction code (Reed-Solomon block).&#10;See Table 12-16 (pp.30-36), JIS X0510:2004.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$ecccode;PHP:Var Name;643374217;f11;358;19;358;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Error correction code.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$formatInfo;PHP:Var Name;643374217;f11;592;22;592;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array Format information&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$frame;PHP:Var Name;643374217;f11;320;17;320;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Frame.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$frames;PHP:Var Name;643374217;f11;430;18;430;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of frames.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$hint;PHP:Var Name;643374217;f11;288;16;288;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Encoding mode.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$items;PHP:Var Name;643374217;f11;416;17;416;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Input items.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$lengthTableBits;PHP:Var Name;643374217;f11;500;27;500;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array Length indicator.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$level;PHP:Var Name;643374217;f11;282;17;282;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Levels of error correction. See definitions for possible values.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$rsblocks;PHP:Var Name;643374217;f11;370;20;370;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Reed-Solomon blocks.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$rsitems;PHP:Var Name;643374217;f11;424;19;424;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Reed-Solomon items.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$runLength;PHP:Var Name;643374217;f11;402;21;402;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Run length.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$structured;PHP:Var Name;643374217;f11;300;22;300;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Structured QR code (not supported yet).&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$version;PHP:Var Name;643374217;f11;276;19;276;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    QR code version. Size of QRcode is defined as version. Version is from 1 to 40. Version 1 is 21*21 matrix. And 4 modules increases whenever 1 version increases. So version 40 is 177*177 matrix.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$versionPattern;PHP:Var Name;643374217;f11;580;26;580;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array Version information pattern (BCH coded).&#10;See Table 1 in Appendix D (pp.68) of JIS X0510:2004.&#10;size: [QRSPEC_VERSION_MAX - 6]&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$width;PHP:Var Name;643374217;f11;314;17;314;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Width.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$x;PHP:Var Name;643374217;f11;326;13;326;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    X position of bit.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$y;PHP:Var Name;643374217;f11;332;13;332;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Y position of bit.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="Radius;PHP:Class Name;1184152937;f0;182;1;789;;;;vpos;;v;;a;;r;;d13,182;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="AccessRequest;PHP:Function Name;1184152937;f8;693;2;787;;;;vpos;;v;;a;;r;;d96,693;;b1,0;;m0;;e0;;i0;;o;;k;;lusername;;ppassword;;pudp_timeout;;pstate;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="ClearDataReceived;PHP:Function Name;1184152937;f8;432;2;435;;;;vpos;;v;;a;;r;;d37,432;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ClearDataToSend;PHP:Function Name;1184152937;f8;427;2;430;;;;vpos;;v;;a;;r;;d35,427;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ClearLastError;PHP:Function Name;1184152937;f8;509;2;512;;;;vpos;;v;;a;;r;;d34,509;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="DebugInfo;PHP:Function Name;1184152937;f8;581;2;588;;;;vpos;;v;;a;;r;;d40,581;;b1,0;;m0;;e0;;i0;;o;;k;;ldebug_info;;p;;x;;n">
</treenode>
<treenode node="DecodeAttribute;PHP:Function Name;1184152937;f8;638;2;668;;;;vpos;;v;;a;;r;;d74,638;;b1,0;;m0;;e0;;i0;;o;;k;;lattribute_raw_value;;pattribute_format;;p;;x;;x;;n">
</treenode>
<treenode node="DecodeVendorSpecificContent;PHP:Function Name;1184152937;f8;673;2;686;;;;vpos;;v;;a;;r;;d73,673;;b1,0;;m0;;e0;;i0;;o;;k;;lvendor_specific_raw_value;;p;;x;;n">
</treenode>
<treenode node="GenerateRequestAuthenticator;PHP:Function Name;1184152937;f8;408;2;413;;;;vpos;;v;;a;;r;;d48,408;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="GetAttribute;PHP:Function Name;1184152937;f8;554;2;563;;;;vpos;;v;;a;;r;;d47,554;;b1,0;;m0;;e0;;i0;;o;;k;;lattribute_type;;p;;x;;n">
</treenode>
<treenode node="GetAttributesInfo;PHP:Function Name;1184152937;f8;573;2;579;;;;vpos;;v;;a;;r;;d48,573;;b1,0;;m0;;e0;;i0;;o;;k;;linfo_index;;p;;x;;n">
</treenode>
<treenode node="GetLastError;PHP:Function Name;1184152937;f8;419;2;425;;;;vpos;;v;;a;;r;;d32,419;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="GetNextIdentifier;PHP:Function Name;1184152937;f8;403;2;406;;;;vpos;;v;;a;;r;;d37,403;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="GetRadiusPacketInfo;PHP:Function Name;1184152937;f8;565;2;571;;;;vpos;;v;;a;;r;;d50,565;;b1,0;;m0;;e0;;i0;;o;;k;;linfo_index;;p;;x;;n">
</treenode>
<treenode node="GetReadableReceivedAttributes;PHP:Function Name;1184152937;f8;534;2;552;;;;vpos;;v;;a;;r;;d49,534;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="GetReceivedAttributes;PHP:Function Name;1184152937;f8;530;2;532;;;;vpos;;v;;a;;r;;d41,530;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="GetReceivedPacket;PHP:Function Name;1184152937;f8;526;2;528;;;;vpos;;v;;a;;r;;d37,526;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="GetRequestAuthenticator;PHP:Function Name;1184152937;f8;415;2;417;;;;vpos;;v;;a;;r;;d43,415;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="SetAccountingPort;PHP:Function Name;1184152937;f8;520;2;524;;;;vpos;;v;;a;;r;;d53,520;;b1,0;;m0;;e0;;i0;;o;;k;;laccounting_port;;p;;x;;n">
</treenode>
<treenode node="SetAttribute;PHP:Function Name;1184152937;f8;590;2;636;;;;vpos;;v;;a;;r;;d45,590;;b1,0;;m0;;e0;;i0;;o;;k;;ltype;;pvalue;;p;;x;;x;;n">
</treenode>
<treenode node="SetAuthenticationPort;PHP:Function Name;1184152937;f8;514;2;518;;;;vpos;;v;;a;;r;;d61,514;;b1,0;;m0;;e0;;i0;;o;;k;;lauthentication_port;;p;;x;;n">
</treenode>
<treenode node="SetDebugMode;PHP:Function Name;1184152937;f8;441;2;443;;;;vpos;;v;;a;;r;;d43,441;;b1,0;;m0;;e0;;i0;;o;;k;;ldebug_mode;;p;;x;;n">
</treenode>
<treenode node="SetIpRadiusServer;PHP:Function Name;1184152937;f8;445;2;447;;;;vpos;;v;;a;;r;;d54,445;;b1,0;;m0;;e0;;i0;;o;;k;;lip_radius_server;;p;;x;;n">
</treenode>
<treenode node="SetNasIPAddress;PHP:Function Name;1184152937;f8;489;2;496;;;;vpos;;v;;a;;r;;d55,489;;b1,0;;m0;;e0;;i0;;o;;k;;lnas_ip_address;;p;;x;;n">
</treenode>
<treenode node="SetNasPort;PHP:Function Name;1184152937;f8;498;2;501;;;;vpos;;v;;a;;r;;d43,498;;b1,0;;m0;;e0;;i0;;o;;k;;lnas_port;;p;;x;;n">
</treenode>
<treenode node="SetPacketCodeToSend;PHP:Function Name;1184152937;f8;437;2;439;;;;vpos;;v;;a;;r;;d51,437;;b1,0;;m0;;e0;;i0;;o;;k;;lpacket_code;;p;;x;;n">
</treenode>
<treenode node="SetPassword;PHP:Function Name;1184152937;f8;466;2;487;;;;vpos;;v;;a;;r;;d45,466;;b1,0;;m0;;e0;;i0;;o;;k;;lpassword;;p;;x;;n">
</treenode>
<treenode node="SetRadiusSuffix;PHP:Function Name;1184152937;f8;453;2;455;;;;vpos;;v;;a;;r;;d49,453;;b1,0;;m0;;e0;;i0;;o;;k;;lradius_suffix;;p;;x;;n">
</treenode>
<treenode node="SetSharedSecret;PHP:Function Name;1184152937;f8;449;2;451;;;;vpos;;v;;a;;r;;d49,449;;b1,0;;m0;;e0;;i0;;o;;k;;lshared_secret;;p;;x;;n">
</treenode>
<treenode node="SetUdpTimeout;PHP:Function Name;1184152937;f8;503;2;507;;;;vpos;;v;;a;;r;;d49,503;;b1,0;;m0;;e0;;i0;;o;;k;;ludp_timeout;;p;;x;;n">
</treenode>
<treenode node="SetUsername;PHP:Function Name;1184152937;f8;457;2;464;;;;vpos;;v;;a;;r;;d45,457;;b1,0;;m0;;e0;;i0;;o;;k;;lusername;;p;;x;;n">
</treenode>
<treenode node="__construct;PHP:Function Name;1184152937;f8;331;2;401;;;;vpos;;v;;a;;r;;d176,331;;b1,0;;m0;;e0;;i0;;o;;k;;lip_radius_server;;pshared_secret;;pradius_suffix;;pudp_timeout;;pauthentication_port;;paccounting_port;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="$_accounting_port;PHP:Var Name;1184152937;f8;211;25;211;;;;vposAccouting;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_attributes_info;PHP:Var Name;1184152937;f8;296;25;296;;;;vposAttributes;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_attributes_received;PHP:Var Name;1184152937;f8;281;29;281;;;;vposRadius;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_attributes_to_send;PHP:Var Name;1184152937;f8;276;28;276;;;;vposRadius;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_authentication_port;PHP:Var Name;1184152937;f8;206;29;206;;;;vposAuthentication;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_debug_mode;PHP:Var Name;1184152937;f8;291;20;291;;;;vposDebug;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_encrypted_password;PHP:Var Name;1184152937;f8;226;28;226;;;;vposEncrypted;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_identifier_received;PHP:Var Name;1184152937;f8;261;29;261;;;;vposIdentifier;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_identifier_to_send;PHP:Var Name;1184152937;f8;256;28;256;;;;vposIdentifier;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_ip_radius_server;PHP:Var Name;1184152937;f8;186;26;186;;;;vposRadius;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_last_error_code;PHP:Var Name;1184152937;f8;306;25;306;;;;vposLast;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_last_error_message;PHP:Var Name;1184152937;f8;311;28;311;;;;vposLast;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_nas_ip_address;PHP:Var Name;1184152937;f8;216;24;216;;;;vposNAS;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_nas_port;PHP:Var Name;1184152937;f8;221;18;221;;;;vposNAS;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_password;PHP:Var Name;1184152937;f8;251;18;251;;;;vposPassword;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_radius_packet_info;PHP:Var Name;1184152937;f8;301;28;301;;;;vposRadius;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_radius_packet_received;PHP:Var Name;1184152937;f8;271;32;271;;;;vposRadius;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_radius_packet_to_send;PHP:Var Name;1184152937;f8;266;31;266;;;;vposRadius;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_radius_suffix;PHP:Var Name;1184152937;f8;196;23;196;;;;vposRadius;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_request_authenticator;PHP:Var Name;1184152937;f8;236;31;236;;;;vposRequest;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_response_authenticator;PHP:Var Name;1184152937;f8;241;32;241;;;;vposRequest;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_shared_secret;PHP:Var Name;1184152937;f8;191;23;191;;;;vposShared;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_socket_to_server;PHP:Var Name;1184152937;f8;286;26;286;;;;vposSocket;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_udp_timeout;PHP:Var Name;1184152937;f8;201;21;201;;;;vposTimeout;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_user_ip_address;PHP:Var Name;1184152937;f8;231;25;231;;;;vposRemote;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_username;PHP:Var Name;1184152937;f8;246;18;246;;;;vposUsername;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="TCPDF;PHP:Class Name;3211394257;f0;136;1;24793;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TCPDF&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;class&lt;/b&gt;: TCPDF&#10;PHP class for generating PDF documents without requiring external extensions.&#10;TCPDF project (http://www.tcpdf.org) has been originally derived in 2002 from the Public Domain FPDF class by Olivier Plathey (http://www.fpdf.org), but now is almost entirely rewritten.&lt;br&gt;&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcpdf&#10;&lt;b&gt;brief&lt;/b&gt;: PHP class for generating PDF documents without requiring external extensions.&#10;&lt;b&gt;version&lt;/b&gt;: 6.8.2&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni - info&#10;&lt;b&gt;tecnick&lt;/b&gt;: .com&#10;&lt;b&gt;IgnoreAnnotation&lt;/b&gt;: (&quot;protected&quot;)&#10;&lt;b&gt;IgnoreAnnotation&lt;/b&gt;: (&quot;public&quot;)&#10;&lt;b&gt;IgnoreAnnotation&lt;/b&gt;: (&quot;pre&quot;);;d12,136;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="AcceptPageBreak;PHP:Function Name;3211394257;f8;5026;2;5042;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    AcceptPageBreak()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Whenever a page break condition is met, the method is called, and the break is issued or not depending on the returned value.&#10;The default implementation returns a value according to the mode selected by SetAutoPageBreak().&lt;br /&gt;&#10;This method is called automatically and should not be called directly by the application.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.4&#10;&lt;b&gt;see&lt;/b&gt;: SetAutoPageBreak();;d35,5026;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="AddFont;PHP:Function Name;3211394257;f8;4259;2;4512;;;;vpos;;v;;aarray|false;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    AddFont($family, $style=&apos;&apos;, $fontfile=&apos;&apos;, $subset=&apos;default&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Imports a TrueType, Type1, core, or CID0 font and makes it available.&#10;It is necessary to generate a font definition file first (read /fonts/utils/README.TXT).&#10;The definition file (and the font file itself when embedding) must be present either in the current directory or in the one indicated by K_PATH_FONTS if the constant is defined. If it could not be found, the error &quot;Could not include font definition file&quot; is generated.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.5&#10;&lt;b&gt;see&lt;/b&gt;: SetFont(), setFontSubsetting()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$family&lt;/b&gt;: Font family. The name can be chosen arbitrarily. If it is a standard family name, it will override the corresponding font.&#10;    string &lt;b&gt;$style&lt;/b&gt;: Font style. Possible values are (case insensitive):&lt;ul&gt;&lt;li&gt;empty string: regular (default)&lt;/li&gt;&lt;li&gt;B: bold&lt;/li&gt;&lt;li&gt;I: italic&lt;/li&gt;&lt;li&gt;BI or IB: bold italic&lt;/li&gt;&lt;/ul&gt;&#10;    string &lt;b&gt;$fontfile&lt;/b&gt;: The font definition file. By default, the name is built from the family and style, in lower case with no spaces.&#10;    mixed &lt;b&gt;$subset&lt;/b&gt;: if true embedd only a subset of the font (stores only the information related to the used characters);s if false embedd full font;s if &apos;default&apos; uses the default value set using setFontSubsetting(). This option is valid only for TrueTypeUnicode fonts. If you want to enable users to change the document, set this parameter to false. If you subset the font, the person who receives your PDF would need to have your same font in order to make changes to your PDF. The file size of the PDF would also be smaller because you are embedding only part of a font.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   array containing the font data, or false in case of error.;;d78,4259;;b1,0;;m0;;e0;;i0;;o;;k;;l $family;;p $style;;p $fontfile;;p $subset;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="AddLink;PHP:Function Name;3211394257;f8;4788;2;4793;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    AddLink()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a new internal link and returns its identifier. An internal link is a clickable area which directs to another place within the document.&lt;br /&gt;&#10;The identifier can then be passed to Cell(), Write(), Image() or Link(). The destination is defined with SetLink().&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.5&#10;&lt;b&gt;see&lt;/b&gt;: Cell(), Write(), Image(), Link(), SetLink();;d27,4788;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="AddPage;PHP:Function Name;3211394257;f8;3188;2;3203;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    AddPage($orientation=&apos;&apos;, $format=&apos;&apos;, $keepmargins=false, $tocpage=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds a new page to the document. If a page is already present, the Footer() method is called first to output the footer (if enabled). Then the page is added, the current position set to the top-left corner according to the left and top margins (or top-right if in RTL mode), and Header() is called to display the header (if enabled).&#10;The origin of the coordinate system is at the top-left corner (or top-right for RTL) and increasing ordinates go downwards.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0&#10;&lt;b&gt;see&lt;/b&gt;: startPage(), endPage(), addTOCPage(), endTOCPage(), getPageSizeFromFormat(), setPageFormat()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$orientation&lt;/b&gt;: page orientation. Possible values are (case insensitive):&lt;ul&gt;&lt;li&gt;P or PORTRAIT (default)&lt;/li&gt;&lt;li&gt;L or LANDSCAPE&lt;/li&gt;&lt;/ul&gt;&#10;    mixed &lt;b&gt;$format&lt;/b&gt;: The format used for pages. It can be either: one of the string values specified at getPageSizeFromFormat() or an array of parameters specified at setPageFormat().&#10;    boolean &lt;b&gt;$keepmargins&lt;/b&gt;: if true overwrites the default page margins with the current margins&#10;    boolean &lt;b&gt;$tocpage&lt;/b&gt;: if true set the tocpage state to true (the added page will be used to display Table Of Content).;;d90,3188;;b1,0;;m0;;e0;;i0;;o;;k;;l $orientation;;p $format;;p $keepmargins;;p $tocpage;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="AddSpotColor;PHP:Function Name;3211394257;f8;3802;2;3807;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    AddSpotColor($name, $c, $m, $y, $k)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines a new spot color.&#10;It can be expressed in RGB components or gray scale.&#10;The method can be called before the first page is created and the value is retained from page to page.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.024 (2008-09-12)&#10;&lt;b&gt;see&lt;/b&gt;: SetDrawSpotColor(), SetFillSpotColor(), SetTextSpotColor()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: Full name of the spot color.&#10;    float &lt;b&gt;$c&lt;/b&gt;: Cyan color for CMYK. Value between 0 and 100.&#10;    float &lt;b&gt;$m&lt;/b&gt;: Magenta color for CMYK. Value between 0 and 100.&#10;    float &lt;b&gt;$y&lt;/b&gt;: Yellow color for CMYK. Value between 0 and 100.&#10;    float &lt;b&gt;$k&lt;/b&gt;: Key (Black) color for CMYK. Value between 0 and 100.;;d53,3802;;b1,0;;m0;;e0;;i0;;o;;k;;l $name;;p $c;;p $m;;p $y;;p $k;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="Annotation;PHP:Function Name;3211394257;f8;4850;2;4932;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Annotation($x, $y, $w, $h, $text, $opt=array(&apos;Subtype&apos;=&gt;&apos;Text&apos;), $spaces=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Puts a markup annotation on a rectangular area of the page.&#10;!!!!THE ANNOTATION SUPPORT IS NOT YET FULLY IMPLEMENTED !!!!&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.018 (2008-08-06)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: Abscissa of the upper-left corner of the rectangle&#10;    float &lt;b&gt;$y&lt;/b&gt;: Ordinate of the upper-left corner of the rectangle&#10;    float &lt;b&gt;$w&lt;/b&gt;: Width of the rectangle&#10;    float &lt;b&gt;$h&lt;/b&gt;: Height of the rectangle&#10;    string &lt;b&gt;$text&lt;/b&gt;: annotation text or alternate content&#10;    array &lt;b&gt;$opt&lt;/b&gt;: array of options (see section 8.4 of PDF reference 1.7).&#10;    int &lt;b&gt;$spaces&lt;/b&gt;: number of spaces on the text to link;;d93,4850;;b1,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $w;;p $h;;p $text;;p $opt;;p $spaces;;p;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="Arrow;PHP:Function Name;3211394257;f8;12281;2;12330;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Arrow($x0, $y0, $x1, $y1, $head_style=0, $arm_size=5, $arm_angle=15)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Draws a grahic arrow.&#10;&lt;b&gt;author&lt;/b&gt;: Piotr Galecki, Nicola Asuni, Andy Meier&#10;&lt;b&gt;since&lt;/b&gt;: 4.6.018 (2009-07-10)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x0&lt;/b&gt;: Abscissa of first point.&#10;    float &lt;b&gt;$y0&lt;/b&gt;: Ordinate of first point.&#10;    float &lt;b&gt;$x1&lt;/b&gt;: Abscissa of second point.&#10;    float &lt;b&gt;$y1&lt;/b&gt;: Ordinate of second point.&#10;    int &lt;b&gt;$head_style&lt;/b&gt;: (0 = draw only arrowhead arms, 1 = draw closed arrowhead, but no fill, 2 = closed and filled arrowhead, 3 = filled arrowhead)&#10;    float &lt;b&gt;$arm_size&lt;/b&gt;: length of arrowhead arms&#10;    int &lt;b&gt;$arm_angle&lt;/b&gt;: angle between an arm and the shaft;;d86,12281;;b1,0;;m0;;e0;;i0;;o;;k;;l $x0;;p $y0;;p $x1;;p $y1;;p $head_style;;p $arm_size;;p $arm_angle;;p;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="Bookmark;PHP:Function Name;3211394257;f8;12442;2;12483;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Bookmark($txt, $level=0, $y=-1, $page=&apos;&apos;, $style=&apos;&apos;, $color=array(0,0,0), $x=-1, $link=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds a bookmark.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.002 (2008-02-12)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$txt&lt;/b&gt;: Bookmark description.&#10;    int &lt;b&gt;$level&lt;/b&gt;: Bookmark level (minimum value is 0).&#10;    float &lt;b&gt;$y&lt;/b&gt;: Y position in user units of the bookmark on the selected page (default = -1 = current position;s 0 = page start;s).&#10;    int|string &lt;b&gt;$page&lt;/b&gt;: Target page number (leave empty for current page). If you prefix a page number with the * character, then this page will not be changed when adding/deleting/moving pages.&#10;    string &lt;b&gt;$style&lt;/b&gt;: Font style: B = Bold, I = Italic, BI = Bold + Italic.&#10;    array &lt;b&gt;$color&lt;/b&gt;: RGB color array (values from 0 to 255).&#10;    float &lt;b&gt;$x&lt;/b&gt;: X position in user units of the bookmark on the selected page (default = -1 = current position;s).&#10;    mixed &lt;b&gt;$link&lt;/b&gt;: URL, or numerical link ID, or named destination (# character followed by the destination name), or embedded file (* character followed by the file name).;;d108,12442;;b1,0;;m0;;e0;;i0;;o;;k;;l $txt;;p $level;;p $y;;p $page;;p $style;;p $color;;p $x;;p $link;;p;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="Button;PHP:Function Name;3211394257;f8;13263;2;13419;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Button($name, $w, $h, $caption, $action, $prop=array(), $opt=array(), $x=null, $y=null, $js=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a button field&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.000 (2009-09-07)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: field name&#10;    int &lt;b&gt;$w&lt;/b&gt;: width&#10;    int &lt;b&gt;$h&lt;/b&gt;: height&#10;    string &lt;b&gt;$caption&lt;/b&gt;: caption.&#10;    mixed &lt;b&gt;$action&lt;/b&gt;: action triggered by pressing the button. Use a string to specify a javascript action. Use an array to specify a form action options as on section 12.7.5 of PDF32000_2008.&#10;    array &lt;b&gt;$prop&lt;/b&gt;: javascript field properties. Possible values are described on official Javascript for Acrobat API reference.&#10;    array &lt;b&gt;$opt&lt;/b&gt;: annotation parameters. Possible values are described on official PDF32000_2008 reference.&#10;    float|null &lt;b&gt;$x&lt;/b&gt;: Abscissa of the upper-left corner of the rectangle&#10;    float|null &lt;b&gt;$y&lt;/b&gt;: Ordinate of the upper-left corner of the rectangle&#10;    boolean &lt;b&gt;$js&lt;/b&gt;: if true put the field using JavaScript (requires Acrobat Writer to be rendered).;;d116,13263;;b1,0;;m0;;e0;;i0;;o;;k;;l $name;;p $w;;p $h;;p $caption;;p $action;;p $prop;;p $opt;;p $x;;p $y;;p $js;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="Cell;PHP:Function Name;3211394257;f8;5107;2;5154;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Cell($w, $h=0, $txt=&apos;&apos;, $border=0, $ln=0, $align=&apos;&apos;, $fill=false, $link=&apos;&apos;, $stretch=0, $ignore_min_height=false, $calign=&apos;T&apos;, $valign=&apos;M&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Prints a cell (rectangular area) with optional borders, background color and character string. The upper-left corner of the cell corresponds to the current position. The text can be aligned or centered. After the call, the current position moves to the right or to the next line. It is possible to put a link on the text.&lt;br /&gt;&#10;If automatic page breaking is enabled and the cell goes beyond the limit, a page break is done before outputting.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0&#10;&lt;b&gt;see&lt;/b&gt;: SetFont(), SetDrawColor(), SetFillColor(), SetTextColor(), SetLineWidth(), AddLink(), Ln(), MultiCell(), Write(), SetAutoPageBreak()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$w&lt;/b&gt;: Cell width. If 0, the cell extends up to the right margin.&#10;    float &lt;b&gt;$h&lt;/b&gt;: Cell height. Default value: 0.&#10;    string &lt;b&gt;$txt&lt;/b&gt;: String to print. Default value: empty string.&#10;    mixed &lt;b&gt;$border&lt;/b&gt;: Indicates if borders must be drawn around the cell. The value can be a number:&lt;ul&gt;&lt;li&gt;0: no border (default)&lt;/li&gt;&lt;li&gt;1: frame&lt;/li&gt;&lt;/ul&gt; or a string containing some or all of the following characters (in any order):&lt;ul&gt;&lt;li&gt;L: left&lt;/li&gt;&lt;li&gt;T: top&lt;/li&gt;&lt;li&gt;R: right&lt;/li&gt;&lt;li&gt;B: bottom&lt;/li&gt;&lt;/ul&gt; or an array of line styles for each border group - for example: array(&apos;LTRB&apos; =&gt; array(&apos;width&apos; =&gt; 2, &apos;cap&apos; =&gt; &apos;butt&apos;, &apos;join&apos; =&gt; &apos;miter&apos;, &apos;dash&apos; =&gt; 0, &apos;color&apos; =&gt; array(0, 0, 0)))&#10;    int &lt;b&gt;$ln&lt;/b&gt;: Indicates where the current position should go after the call. Possible values are:&lt;ul&gt;&lt;li&gt;0: to the right (or left for RTL languages)&lt;/li&gt;&lt;li&gt;1: to the beginning of the next line&lt;/li&gt;&lt;li&gt;2: below&lt;/li&gt;&lt;/ul&gt; Putting 1 is equivalent to putting 0 and calling Ln() just after. Default value: 0.&#10;    string &lt;b&gt;$align&lt;/b&gt;: Allows to center or align the text. Possible values are:&lt;ul&gt;&lt;li&gt;L or empty string: left align (default value)&lt;/li&gt;&lt;li&gt;C: center&lt;/li&gt;&lt;li&gt;R: right align&lt;/li&gt;&lt;li&gt;J: justify&lt;/li&gt;&lt;/ul&gt;&#10;    boolean &lt;b&gt;$fill&lt;/b&gt;: Indicates if the cell background must be painted (true) or transparent (false).&#10;    mixed &lt;b&gt;$link&lt;/b&gt;: URL or identifier returned by AddLink().&#10;    int &lt;b&gt;$stretch&lt;/b&gt;: font stretch mode: &lt;ul&gt;&lt;li&gt;0 = disabled&lt;/li&gt;&lt;li&gt;1 = horizontal scaling only if text is larger than cell width&lt;/li&gt;&lt;li&gt;2 = forced horizontal scaling to fit cell width&lt;/li&gt;&lt;li&gt;3 = character spacing only if text is larger than cell width&lt;/li&gt;&lt;li&gt;4 = forced character spacing to fit cell width&lt;/li&gt;&lt;/ul&gt; General font stretching and scaling values will be preserved when possible.&#10;    boolean &lt;b&gt;$ignore_min_height&lt;/b&gt;: if true ignore automatic minimum height value.&#10;    string &lt;b&gt;$calign&lt;/b&gt;: cell vertical alignment relative to the specified Y value. Possible values are:&lt;ul&gt;&lt;li&gt;T : cell top&lt;/li&gt;&lt;li&gt;C : center&lt;/li&gt;&lt;li&gt;B : cell bottom&lt;/li&gt;&lt;li&gt;A : font top&lt;/li&gt;&lt;li&gt;L : font baseline&lt;/li&gt;&lt;li&gt;D : font bottom&lt;/li&gt;&lt;/ul&gt;&#10;    string &lt;b&gt;$valign&lt;/b&gt;: text vertical alignment inside the cell. Possible values are:&lt;ul&gt;&lt;li&gt;T : top&lt;/li&gt;&lt;li&gt;C : center&lt;/li&gt;&lt;li&gt;B : bottom&lt;/li&gt;&lt;/ul&gt;;;d157,5107;;b1,0;;m0;;e0;;i0;;o;;k;;l $w;;p $h;;p $txt;;p $border;;p $ln;;p $align;;p $fill;;p $link;;p $stretch;;p $ignore_min_height;;p $calign;;p $valign;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="CheckBox;PHP:Function Name;3211394257;f8;13183;2;13245;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    CheckBox($name, $w, $checked=false, $prop=array(), $opt=array(), $onvalue=&apos;Yes&apos;, $x=null, $y=null, $js=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a CheckBox field&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.000 (2009-09-07)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: field name&#10;    int &lt;b&gt;$w&lt;/b&gt;: width&#10;    boolean &lt;b&gt;$checked&lt;/b&gt;: define the initial state.&#10;    array &lt;b&gt;$prop&lt;/b&gt;: javascript field properties. Possible values are described on official Javascript for Acrobat API reference.&#10;    array &lt;b&gt;$opt&lt;/b&gt;: annotation parameters. Possible values are described on official PDF32000_2008 reference.&#10;    string &lt;b&gt;$onvalue&lt;/b&gt;: value to be returned if selected.&#10;    float|null &lt;b&gt;$x&lt;/b&gt;: Abscissa of the upper-left corner of the rectangle&#10;    float|null &lt;b&gt;$y&lt;/b&gt;: Ordinate of the upper-left corner of the rectangle&#10;    boolean &lt;b&gt;$js&lt;/b&gt;: if true put the field using JavaScript (requires Acrobat Writer to be rendered).;;d127,13183;;b1,0;;m0;;e0;;i0;;o;;k;;l $name;;p $w;;p $checked;;p $prop;;p $opt;;p $onvalue;;p $x;;p $y;;p $js;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="Circle;PHP:Function Name;3211394257;f8;11964;2;11966;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Circle($x0, $y0, $r, $angstr=0, $angend=360, $style=&apos;&apos;, $line_style=array(), $fill_color=array(), $nc=2)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Draws a circle.&#10;A circle is formed from n Bezier curves.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-08)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x0&lt;/b&gt;: Abscissa of center point.&#10;    float &lt;b&gt;$y0&lt;/b&gt;: Ordinate of center point.&#10;    float &lt;b&gt;$r&lt;/b&gt;: Radius.&#10;    float &lt;b&gt;$angstr&lt;/b&gt;: Angle start of draw line. Default value: 0.&#10;    float &lt;b&gt;$angend&lt;/b&gt;: Angle finish of draw line. Default value: 360.&#10;    string &lt;b&gt;$style&lt;/b&gt;: Style of rendering. See the getPathPaintOperator() function for more information.&#10;    array &lt;b&gt;$line_style&lt;/b&gt;: Line style of circle. Array like for SetLineStyle(). Default value: default line style (empty array).&#10;    array &lt;b&gt;$fill_color&lt;/b&gt;: Fill color. Format: array(red, green, blue). Default value: default color (empty array).&#10;    integer &lt;b&gt;$nc&lt;/b&gt;: Number of curves used to draw a 90 degrees portion of circle.;;d122,11964;;b1,0;;m0;;e0;;i0;;o;;k;;l $x0;;p $y0;;p $r;;p $angstr;;p $angend;;p $style;;p $line_style;;p $fill_color;;p $nc;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="Clip;PHP:Function Name;3211394257;f11;14588;2;14602;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Clip($x, $y, $w, $h)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set a rectangular clipping area.&#10;&lt;b&gt;author&lt;/b&gt;: Andreas W\FCrmser, Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 3.1.000 (2008-06-09)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: abscissa of the top left corner of the rectangle (or top right corner for RTL mode).&#10;    float &lt;b&gt;$y&lt;/b&gt;: ordinate of the top left corner of the rectangle.&#10;    float &lt;b&gt;$w&lt;/b&gt;: width of the rectangle.&#10;    float &lt;b&gt;$h&lt;/b&gt;: height of the rectangle.;;d41,14588;;b2,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $w;;p $h;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="Close;PHP:Function Name;3211394257;f8;3037;2;3071;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Close()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Terminates the PDF document.&#10;It is not necessary to call this method explicitly because Output() does it automatically.&#10;If the document contains no page, AddPage() is called to prevent from getting an invalid document.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0&#10;&lt;b&gt;see&lt;/b&gt;: Open(), Output();;d25,3037;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ComboBox;PHP:Function Name;3211394257;f8;13096;2;13166;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ComboBox($name, $w, $h, $values, $prop=array(), $opt=array(), $x=null, $y=null, $js=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a Combo-box field&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.000 (2009-09-07)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: field name&#10;    int &lt;b&gt;$w&lt;/b&gt;: width&#10;    int &lt;b&gt;$h&lt;/b&gt;: height&#10;    array &lt;b&gt;$values&lt;/b&gt;: array containing the list of values.&#10;    array &lt;b&gt;$prop&lt;/b&gt;: javascript field properties. Possible values are described on official Javascript for Acrobat API reference.&#10;    array &lt;b&gt;$opt&lt;/b&gt;: annotation parameters. Possible values are described on official PDF32000_2008 reference.&#10;    float|null &lt;b&gt;$x&lt;/b&gt;: Abscissa of the upper-left corner of the rectangle&#10;    float|null &lt;b&gt;$y&lt;/b&gt;: Ordinate of the upper-left corner of the rectangle&#10;    boolean &lt;b&gt;$js&lt;/b&gt;: if true put the field using JavaScript (requires Acrobat Writer to be rendered).;;d108,13096;;b1,0;;m0;;e0;;i0;;o;;k;;l $name;;p $w;;p $h;;p $values;;p $prop;;p $opt;;p $x;;p $y;;p $js;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="CoonsPatchMesh;PHP:Function Name;3211394257;f8;14496;2;14576;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    CoonsPatchMesh($x, $y, $w, $h, $col1=array(), $col2=array(), $col3=array(), $col4=array(), $coords=array(0.00,0.0,0.33,0.00,0.67,0.00,1.00,0.00,1.00,0.33,1.00,0.67,1.00,1.00,0.67,1.00,0.33,1.00,0.00,1.00,0.00,0.67,0.00,0.33), $coords_min=0, $coords_max=1, $antialias=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Paints a coons patch mesh.&#10;&lt;b&gt;author&lt;/b&gt;: Andreas W\FCrmser, Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 3.1.000 (2008-06-09)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: abscissa of the top left corner of the rectangle.&#10;    float &lt;b&gt;$y&lt;/b&gt;: ordinate of the top left corner of the rectangle.&#10;    float &lt;b&gt;$w&lt;/b&gt;: width of the rectangle.&#10;    float &lt;b&gt;$h&lt;/b&gt;: height of the rectangle.&#10;    array &lt;b&gt;$col1&lt;/b&gt;: first color (lower left corner) (RGB components).&#10;    array &lt;b&gt;$col2&lt;/b&gt;: second color (lower right corner) (RGB components).&#10;    array &lt;b&gt;$col3&lt;/b&gt;: third color (upper right corner) (RGB components).&#10;    array &lt;b&gt;$col4&lt;/b&gt;: fourth color (upper left corner) (RGB components).&#10;    array &lt;b&gt;$coords&lt;/b&gt;: &lt;ul&gt;&lt;li&gt;for one patch mesh: array(float x1, float y1, .... float x12, float y12): 12 pairs of coordinates (normally from 0 to 1) which specify the Bezier control points that define the patch. First pair is the lower left edge point, next is its right control point (control point 2). Then the other points are defined in the order: control point 1, edge point, control point 2 going counter-clockwise around the patch. Last (x12, y12) is the first edge point&apos;s left control point (control point 1).&lt;/li&gt;&lt;li&gt;for two or more patch meshes: array[number of patches]: arrays with the following keys for each patch: f: where to put that patch (0 = first patch, 1, 2, 3 = right, top and left of precedent patch - I didn&apos;t figure this out completely - just try and error ;s-) points: 12 pairs of coordinates of the Bezier control points as above for the first patch, 8 pairs of coordinates for the following patches, ignoring the coordinates already defined by the precedent patch (I also didn&apos;t figure out the order of these - also: try and see what&apos;s happening) colors: must be 4 colors for the first patch, 2 colors for the following patches&lt;/li&gt;&lt;/ul&gt;&#10;    array &lt;b&gt;$coords_min&lt;/b&gt;: minimum value used by the coordinates. If a coordinate&apos;s value is smaller than this it will be cut to coords_min. default: 0&#10;    array &lt;b&gt;$coords_max&lt;/b&gt;: maximum value used by the coordinates. If a coordinate&apos;s value is greater than this it will be cut to coords_max. default: 1&#10;    boolean &lt;b&gt;$antialias&lt;/b&gt;: A flag indicating whether to filter the shading function to prevent aliasing artifacts.;;d291,14496;;b1,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $w;;p $h;;p $col1;;p $col2;;p $col3;;p $col4;;p $coords;;p $coords_min;;p $coords_max;;p $antialias;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="Curve;PHP:Function Name;3211394257;f8;11722;2;11736;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Curve($x0, $y0, $x1, $y1, $x2, $y2, $x3, $y3, $style=&apos;&apos;, $line_style=array(), $fill_color=array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Draws a Bezier curve.&#10;The Bezier curve is a tangent to the line between the control points at&#10;either end of the curve.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;see&lt;/b&gt;: SetLineStyle()&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-08)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x0&lt;/b&gt;: Abscissa of start point.&#10;    float &lt;b&gt;$y0&lt;/b&gt;: Ordinate of start point.&#10;    float &lt;b&gt;$x1&lt;/b&gt;: Abscissa of control point 1.&#10;    float &lt;b&gt;$y1&lt;/b&gt;: Ordinate of control point 1.&#10;    float &lt;b&gt;$x2&lt;/b&gt;: Abscissa of control point 2.&#10;    float &lt;b&gt;$y2&lt;/b&gt;: Ordinate of control point 2.&#10;    float &lt;b&gt;$x3&lt;/b&gt;: Abscissa of end point.&#10;    float &lt;b&gt;$y3&lt;/b&gt;: Ordinate of end point.&#10;    string &lt;b&gt;$style&lt;/b&gt;: Style of rendering. See the getPathPaintOperator() function for more information.&#10;    array &lt;b&gt;$line_style&lt;/b&gt;: Line style of curve. Array like for SetLineStyle(). Default value: default line style (empty array).&#10;    array &lt;b&gt;$fill_color&lt;/b&gt;: Fill color. Format: array(GREY) or array(R,G,B) or array(C,M,Y,K) or array(C,M,Y,K,SpotColorName). Default value: default color (empty array).;;d116,11722;;b1,0;;m0;;e0;;i0;;o;;k;;l $x0;;p $y0;;p $x1;;p $y1;;p $x2;;p $y2;;p $x3;;p $y3;;p $style;;p $line_style;;p $fill_color;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="Ellipse;PHP:Function Name;3211394257;f8;11792;2;11811;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Ellipse($x0, $y0, $rx, $ry=0, $angle=0, $astart=0, $afinish=360, $style=&apos;&apos;, $line_style=array(), $fill_color=array(), $nc=2)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Draws an ellipse.&#10;An ellipse is formed from n Bezier curves.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-08)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x0&lt;/b&gt;: Abscissa of center point.&#10;    float &lt;b&gt;$y0&lt;/b&gt;: Ordinate of center point.&#10;    float &lt;b&gt;$rx&lt;/b&gt;: Horizontal radius.&#10;    float &lt;b&gt;$ry&lt;/b&gt;: Vertical radius (if ry = 0 then is a circle, see Circle()). Default value: 0.&#10;    float &lt;b&gt;$angle&lt;/b&gt;: Angle oriented (anti-clockwise). Default value: 0.&#10;    float &lt;b&gt;$astart&lt;/b&gt;: Angle start of draw line. Default value: 0.&#10;    float &lt;b&gt;$afinish&lt;/b&gt;: Angle finish of draw line. Default value: 360.&#10;    string &lt;b&gt;$style&lt;/b&gt;: Style of rendering. See the getPathPaintOperator() function for more information.&#10;    array &lt;b&gt;$line_style&lt;/b&gt;: Line style of ellipse. Array like for SetLineStyle(). Default value: default line style (empty array).&#10;    array &lt;b&gt;$fill_color&lt;/b&gt;: Fill color. Format: array(GREY) or array(R,G,B) or array(C,M,Y,K) or array(C,M,Y,K,SpotColorName). Default value: default color (empty array).&#10;    integer &lt;b&gt;$nc&lt;/b&gt;: Number of curves used to draw a 90 degrees portion of ellipse.;;d142,11792;;b1,0;;m0;;e0;;i0;;o;;k;;l $x0;;p $y0;;p $rx;;p $ry;;p $angle;;p $astart;;p $afinish;;p $style;;p $line_style;;p $fill_color;;p $nc;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="Error;PHP:Function Name;3211394257;f8;3006;2;3015;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Error($msg)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Throw an exception or print an error message and die if the K_TCPDF_PARSER_THROW_EXCEPTION_ERROR constant is set to true.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$msg&lt;/b&gt;: The error message;;d29,3006;;b1,0;;m0;;e0;;i0;;o;;k;;l $msg;;p;;x;;n">
</treenode>
<treenode node="Footer;PHP:Function Name;3211394257;f8;3555;2;3595;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Footer()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to render the page footer.&#10;It is automatically called by AddPage() and could be overwritten in your own inherited class.&#10;&lt;b&gt;public&lt;/b&gt;;;d26,3555;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="GetAbsX;PHP:Function Name;3211394257;f8;7511;2;7513;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    GetAbsX()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the absolute X value of current position.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.2&#10;&lt;b&gt;see&lt;/b&gt;: SetX(), GetY(), SetY();;d27,7511;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="GetArrStringWidth;PHP:Function Name;3211394257;f8;4136;2;4164;;;;vpos;;v;;afloat[]|float;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    GetArrStringWidth($sa, $fontname=&apos;&apos;, $fontstyle=&apos;&apos;, $fontsize=0, $getarray=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the string length of an array of chars in user unit or an array of characters widths. A font must be selected.&lt;br&gt;&#10;&lt;b&gt;phpstan&lt;/b&gt;: -return ($getarray is true ? float[] : float) total string length or array of characted widths&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.4.000 (2008-03-06)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$sa&lt;/b&gt;: The array of chars whose total length is to be computed&#10;    string &lt;b&gt;$fontname&lt;/b&gt;: Family font. It can be either a name defined by AddFont() or one of the standard families. It is also possible to pass an empty string, in that case, the current family is retained.&#10;    string &lt;b&gt;$fontstyle&lt;/b&gt;: Font style. Possible values are (case insensitive):&lt;ul&gt;&lt;li&gt;empty string: regular&lt;/li&gt;&lt;li&gt;B: bold&lt;/li&gt;&lt;li&gt;I: italic&lt;/li&gt;&lt;li&gt;U: underline&lt;/li&gt;&lt;li&gt;D: line through&lt;/li&gt;&lt;li&gt;O: overline&lt;/li&gt;&lt;/ul&gt; or any combination. The default value is regular.&#10;    float &lt;b&gt;$fontsize&lt;/b&gt;: Font size in points. The default value is the current size.&#10;    boolean &lt;b&gt;$getarray&lt;/b&gt;: if true returns an array of characters widths, if false returns the total length.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   total string length or array of characted widths;;d99,4136;;b1,0;;m0;;e0;;i0;;o;;k;;l $sa;;p $fontname;;p $fontstyle;;p $fontsize;;p $getarray;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="GetCharWidth;PHP:Function Name;3211394257;f8;4175;2;4187;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    GetCharWidth($char, $notlast=true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the length of the char in user unit for the current font considering current stretching and spacing (tracking).&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.4.000 (2008-03-06)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$char&lt;/b&gt;: The char code whose length is to be returned&#10;    boolean &lt;b&gt;$notlast&lt;/b&gt;: If false ignore the font-spacing.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   char width;;d52,4175;;b1,0;;m0;;e0;;i0;;o;;k;;l $char;;p $notlast;;p;;x;;x;;n">
</treenode>
<treenode node="GetLineWidth;PHP:Function Name;3211394257;f8;11435;2;11437;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    GetLineWidth()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the current the line width.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-07)&#10;&lt;b&gt;see&lt;/b&gt;: Line(), SetLineWidth()&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Line width;;d32,11435;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="GetNumChars;PHP:Function Name;3211394257;f8;4223;2;4228;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    GetNumChars($s)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the numbero of characters in a string.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.0.0001 (2008-01-07)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$s&lt;/b&gt;: The input string.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   number of characters;;d33,4223;;b1,0;;m0;;e0;;i0;;o;;k;;l $s;;p;;x;;n">
</treenode>
<treenode node="GetStringWidth;PHP:Function Name;3211394257;f8;4119;2;4121;;;;vpos;;v;;afloat[]|float;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    GetStringWidth($s, $fontname=&apos;&apos;, $fontstyle=&apos;&apos;, $fontsize=0, $getarray=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the length of a string in user unit. A font must be selected.&lt;br&gt;&#10;&lt;b&gt;phpstan&lt;/b&gt;: -return ($getarray is true ? float[] : float) total string length or array of characted widths&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.2&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$s&lt;/b&gt;: The string whose length is to be computed&#10;    string &lt;b&gt;$fontname&lt;/b&gt;: Family font. It can be either a name defined by AddFont() or one of the standard families. It is also possible to pass an empty string, in that case, the current family is retained.&#10;    string &lt;b&gt;$fontstyle&lt;/b&gt;: Font style. Possible values are (case insensitive):&lt;ul&gt;&lt;li&gt;empty string: regular&lt;/li&gt;&lt;li&gt;B: bold&lt;/li&gt;&lt;li&gt;I: italic&lt;/li&gt;&lt;li&gt;U: underline&lt;/li&gt;&lt;li&gt;D: line-through&lt;/li&gt;&lt;li&gt;O: overline&lt;/li&gt;&lt;/ul&gt; or any combination. The default value is regular.&#10;    float &lt;b&gt;$fontsize&lt;/b&gt;: Font size in points. The default value is the current size.&#10;    boolean &lt;b&gt;$getarray&lt;/b&gt;: if true returns an array of characters widths, if false returns the total length.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   total string length or array of characted widths;;d95,4119;;b1,0;;m0;;e0;;i0;;o;;k;;l $s;;p $fontname;;p $fontstyle;;p $fontsize;;p $getarray;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="GetX;PHP:Function Name;3211394257;f8;7495;2;7502;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    GetX()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the relative X value of current position.&#10;The value is relative to the left border for LTR languages and to the right border for RTL languages.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.2&#10;&lt;b&gt;see&lt;/b&gt;: SetX(), GetY(), SetY();;d24,7495;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="GetY;PHP:Function Name;3211394257;f8;7522;2;7524;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    GetY()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the ordinate of the current position.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0&#10;&lt;b&gt;see&lt;/b&gt;: SetY(), GetX(), SetX();;d24,7522;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="Gradient;PHP:Function Name;3211394257;f8;14615;2;14714;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Gradient($type, $coords, $stops, $background=array(), $antialias=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output gradient.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 3.1.000 (2008-06-09)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$type&lt;/b&gt;: type of gradient (1 Function-based shading;s 2 Axial shading;s 3 Radial shading;s 4 Free-form Gouraud-shaded triangle mesh;s 5 Lattice-form Gouraud-shaded triangle mesh;s 6 Coons patch mesh;s 7 Tensor-product patch mesh). (Not all types are currently supported)&#10;    array &lt;b&gt;$coords&lt;/b&gt;: array of coordinates.&#10;    array &lt;b&gt;$stops&lt;/b&gt;: array gradient color components: color = array of GRAY, RGB or CMYK color components;s offset = (0 to 1) represents a location along the gradient vector;s exponent = exponent of the exponential interpolation function (default = 1).&#10;    array &lt;b&gt;$background&lt;/b&gt;: An array of colour components appropriate to the colour space, specifying a single background colour value.&#10;    boolean &lt;b&gt;$antialias&lt;/b&gt;: A flag indicating whether to filter the shading function to prevent aliasing artifacts.;;d89,14615;;b1,0;;m0;;e0;;i0;;o;;k;;l $type;;p $coords;;p $stops;;p $background;;p $antialias;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="Header;PHP:Function Name;3211394257;f8;3478;2;3548;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Header()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to render the page header.&#10;It is automatically called by AddPage() and could be overwritten in your own inherited class.&#10;&lt;b&gt;public&lt;/b&gt;;;d26,3478;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="Image;PHP:Function Name;3211394257;f8;6938;2;7319;;;;vpos;;v;;amixed|false;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Image($file, $x=null, $y=null, $w=0, $h=0, $type=&apos;&apos;, $link=&apos;&apos;, $align=&apos;&apos;, $resize=false, $dpi=300, $palign=&apos;&apos;, $ismask=false, $imgmask=false, $border=0, $fitbox=false, $hidden=false, $fitonpage=false, $alt=false, $altimgs=array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Puts an image in the page.&#10;The upper-left corner must be given.&#10;The dimensions can be specified in different ways:&lt;ul&gt;&#10;&lt;li&gt;explicit width and height (expressed in user unit)&lt;/li&gt;&#10;&lt;li&gt;one explicit dimension, the other being calculated automatically in order to keep the original proportions&lt;/li&gt;&#10;&lt;li&gt;no explicit dimension, in which case the image is put at 72 dpi&lt;/li&gt;&lt;/ul&gt;&#10;Supported formats are JPEG and PNG images whitout GD library and all images supported by GD: GD, GD2, GD2PART, GIF, JPEG, PNG, BMP, XBM, XPM;s&#10;The format can be specified explicitly or inferred from the file extension.&lt;br /&gt;&#10;It is possible to put a link on the image.&lt;br /&gt;&#10;Remark: if an image is used several times, only one copy will be embedded in the file.&lt;br /&gt;&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.1&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$file&lt;/b&gt;: Name of the file containing the image or a &apos; @&apos; character followed by the image data string. To link an image without embedding it on the document, set an asterisk character before the URL (i.e.: &apos;*http://www.example.com/image.jpg&apos;).&#10;    float|null &lt;b&gt;$x&lt;/b&gt;: Abscissa of the upper-left corner (LTR) or upper-right corner (RTL).&#10;    float|null &lt;b&gt;$y&lt;/b&gt;: Ordinate of the upper-left corner (LTR) or upper-right corner (RTL).&#10;    float &lt;b&gt;$w&lt;/b&gt;: Width of the image in the page. If not specified or equal to zero, it is automatically calculated.&#10;    float &lt;b&gt;$h&lt;/b&gt;: Height of the image in the page. If not specified or equal to zero, it is automatically calculated.&#10;    string &lt;b&gt;$type&lt;/b&gt;: Image format. Possible values are (case insensitive): JPEG and PNG (whitout GD library) and all images supported by GD: GD, GD2, GD2PART, GIF, JPEG, PNG, BMP, XBM, XPM;s. If not specified, the type is inferred from the file extension.&#10;    mixed &lt;b&gt;$link&lt;/b&gt;: URL or identifier returned by AddLink().&#10;    string &lt;b&gt;$align&lt;/b&gt;: Indicates the alignment of the pointer next to image insertion relative to image height. The value can be:&lt;ul&gt;&lt;li&gt;T: top-right for LTR or top-left for RTL&lt;/li&gt;&lt;li&gt;M: middle-right for LTR or middle-left for RTL&lt;/li&gt;&lt;li&gt;B: bottom-right for LTR or bottom-left for RTL&lt;/li&gt;&lt;li&gt;N: next line&lt;/li&gt;&lt;/ul&gt;&#10;    mixed &lt;b&gt;$resize&lt;/b&gt;: If true resize (reduce) the image to fit $w and $h (requires GD or ImageMagick library);s if false do not resize;s if 2 force resize in all cases (upscaling and downscaling).&#10;    int &lt;b&gt;$dpi&lt;/b&gt;: dot-per-inch resolution used on resize&#10;    string &lt;b&gt;$palign&lt;/b&gt;: Allows to center or align the image on the current line. Possible values are:&lt;ul&gt;&lt;li&gt;L : left align&lt;/li&gt;&lt;li&gt;C : center&lt;/li&gt;&lt;li&gt;R : right align&lt;/li&gt;&lt;li&gt;&apos;&apos; : empty string : left for LTR or right for RTL&lt;/li&gt;&lt;/ul&gt;&#10;    boolean &lt;b&gt;$ismask&lt;/b&gt;: true if this image is a mask, false otherwise&#10;    mixed &lt;b&gt;$imgmask&lt;/b&gt;: image object returned by this function or false&#10;    mixed &lt;b&gt;$border&lt;/b&gt;: Indicates if borders must be drawn around the cell. The value can be a number:&lt;ul&gt;&lt;li&gt;0: no border (default)&lt;/li&gt;&lt;li&gt;1: frame&lt;/li&gt;&lt;/ul&gt; or a string containing some or all of the following characters (in any order):&lt;ul&gt;&lt;li&gt;L: left&lt;/li&gt;&lt;li&gt;T: top&lt;/li&gt;&lt;li&gt;R: right&lt;/li&gt;&lt;li&gt;B: bottom&lt;/li&gt;&lt;/ul&gt; or an array of line styles for each border group - for example: array(&apos;LTRB&apos; =&gt; array(&apos;width&apos; =&gt; 2, &apos;cap&apos; =&gt; &apos;butt&apos;, &apos;join&apos; =&gt; &apos;miter&apos;, &apos;dash&apos; =&gt; 0, &apos;color&apos; =&gt; array(0, 0, 0)))&#10;    mixed &lt;b&gt;$fitbox&lt;/b&gt;: If not false scale image dimensions proportionally to fit within the ($w, $h) box. $fitbox can be true or a 2 characters string indicating the image alignment inside the box. The first character indicate the horizontal alignment (L = left, C = center, R = right) the second character indicate the vertical algnment (T = top, M = middle, B = bottom).&#10;    boolean &lt;b&gt;$hidden&lt;/b&gt;: If true do not display the image.&#10;    boolean &lt;b&gt;$fitonpage&lt;/b&gt;: If true the image is resized to not exceed page dimensions.&#10;    boolean &lt;b&gt;$alt&lt;/b&gt;: If true the image will be added as alternative and not directly printed (the ID of the image will be returned).&#10;    array &lt;b&gt;$altimgs&lt;/b&gt;: Array of alternate images IDs. Each alternative image must be an array with two values: an integer representing the image ID (the value returned by the Image method) and a boolean value to indicate if the image is the default for printing.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   image information;;d248,6938;;b1,0;;m0;;e0;;i0;;o;;k;;l $file;;p $x;;p $y;;p $w;;p $h;;p $type;;p $link;;p $align;;p $resize;;p $dpi;;p $palign;;p $ismask;;p $imgmask;;p $border;;p $fitbox;;p $hidden;;p $fitonpage;;p $alt;;p $altimgs;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="ImageEps;PHP:Function Name;3211394257;f8;14979;2;15289;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ImageEps($file, $x=null, $y=null, $w=0, $h=0, $link=&apos;&apos;, $useBoundingBox=true, $align=&apos;&apos;, $palign=&apos;&apos;, $border=0, $fitonpage=false, $fixoutvals=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Embed vector-based Adobe Illustrator (AI) or AI-compatible EPS files.&#10;NOTE: EPS is not yet fully implemented, use the setRasterizeVectorImages() method to enable/disable rasterization of vector images using ImageMagick library.&#10;Only vector drawing is supported, not text or bitmap.&#10;Although the script was successfully tested with various AI format versions, best results are probably achieved with files that were exported in the AI3 format (tested with Illustrator CS2, Freehand MX and Photoshop CS2).&#10;&lt;b&gt;author&lt;/b&gt;: Valentin Schmidt, Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 3.1.000 (2008-06-09)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$file&lt;/b&gt;: Name of the file containing the image or a &apos; @&apos; character followed by the EPS/AI data string.&#10;    float|null &lt;b&gt;$x&lt;/b&gt;: Abscissa of the upper-left corner.&#10;    float|null &lt;b&gt;$y&lt;/b&gt;: Ordinate of the upper-left corner.&#10;    float &lt;b&gt;$w&lt;/b&gt;: Width of the image in the page. If not specified or equal to zero, it is automatically calculated.&#10;    float &lt;b&gt;$h&lt;/b&gt;: Height of the image in the page. If not specified or equal to zero, it is automatically calculated.&#10;    mixed &lt;b&gt;$link&lt;/b&gt;: URL or identifier returned by AddLink().&#10;    boolean &lt;b&gt;$useBoundingBox&lt;/b&gt;: specifies whether to position the bounding box (true) or the complete canvas (false) at location (x,y). Default value is true.&#10;    string &lt;b&gt;$align&lt;/b&gt;: Indicates the alignment of the pointer next to image insertion relative to image height. The value can be:&lt;ul&gt;&lt;li&gt;T: top-right for LTR or top-left for RTL&lt;/li&gt;&lt;li&gt;M: middle-right for LTR or middle-left for RTL&lt;/li&gt;&lt;li&gt;B: bottom-right for LTR or bottom-left for RTL&lt;/li&gt;&lt;li&gt;N: next line&lt;/li&gt;&lt;/ul&gt;&#10;    string &lt;b&gt;$palign&lt;/b&gt;: Allows to center or align the image on the current line. Possible values are:&lt;ul&gt;&lt;li&gt;L : left align&lt;/li&gt;&lt;li&gt;C : center&lt;/li&gt;&lt;li&gt;R : right align&lt;/li&gt;&lt;li&gt;&apos;&apos; : empty string : left for LTR or right for RTL&lt;/li&gt;&lt;/ul&gt;&#10;    mixed &lt;b&gt;$border&lt;/b&gt;: Indicates if borders must be drawn around the cell. The value can be a number:&lt;ul&gt;&lt;li&gt;0: no border (default)&lt;/li&gt;&lt;li&gt;1: frame&lt;/li&gt;&lt;/ul&gt; or a string containing some or all of the following characters (in any order):&lt;ul&gt;&lt;li&gt;L: left&lt;/li&gt;&lt;li&gt;T: top&lt;/li&gt;&lt;li&gt;R: right&lt;/li&gt;&lt;li&gt;B: bottom&lt;/li&gt;&lt;/ul&gt; or an array of line styles for each border group - for example: array(&apos;LTRB&apos; =&gt; array(&apos;width&apos; =&gt; 2, &apos;cap&apos; =&gt; &apos;butt&apos;, &apos;join&apos; =&gt; &apos;miter&apos;, &apos;dash&apos; =&gt; 0, &apos;color&apos; =&gt; array(0, 0, 0)))&#10;    boolean &lt;b&gt;$fitonpage&lt;/b&gt;: if true the image is resized to not exceed page dimensions.&#10;    boolean &lt;b&gt;$fixoutvals&lt;/b&gt;: if true remove values outside the bounding box.;;d166,14979;;b1,0;;m0;;e0;;i0;;o;;k;;l $file;;p $x;;p $y;;p $w;;p $h;;p $link;;p $useBoundingBox;;p $align;;p $palign;;p $border;;p $fitonpage;;p $fixoutvals;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="ImagePngAlpha;PHP:Function Name;3211394257;f11;7342;2;7427;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ImagePngAlpha($file, $x, $y, $wpx, $hpx, $w, $h, $type, $link, $align, $resize, $dpi, $palign, $filehash=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Extract info from a PNG image with alpha channel using the Imagick or GD library.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.3.007 (2008-12-04)&#10;&lt;b&gt;see&lt;/b&gt;: Image()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$file&lt;/b&gt;: Name of the file containing the image.&#10;    float &lt;b&gt;$x&lt;/b&gt;: Abscissa of the upper-left corner.&#10;    float &lt;b&gt;$y&lt;/b&gt;: Ordinate of the upper-left corner.&#10;    float &lt;b&gt;$wpx&lt;/b&gt;: Original width of the image in pixels.&#10;    float &lt;b&gt;$hpx&lt;/b&gt;: original height of the image in pixels.&#10;    float &lt;b&gt;$w&lt;/b&gt;: Width of the image in the page. If not specified or equal to zero, it is automatically calculated.&#10;    float &lt;b&gt;$h&lt;/b&gt;: Height of the image in the page. If not specified or equal to zero, it is automatically calculated.&#10;    string &lt;b&gt;$type&lt;/b&gt;: Image format. Possible values are (case insensitive): JPEG and PNG (whitout GD library) and all images supported by GD: GD, GD2, GD2PART, GIF, JPEG, PNG, BMP, XBM, XPM;s. If not specified, the type is inferred from the file extension.&#10;    mixed &lt;b&gt;$link&lt;/b&gt;: URL or identifier returned by AddLink().&#10;    string &lt;b&gt;$align&lt;/b&gt;: Indicates the alignment of the pointer next to image insertion relative to image height. The value can be:&lt;ul&gt;&lt;li&gt;T: top-right for LTR or top-left for RTL&lt;/li&gt;&lt;li&gt;M: middle-right for LTR or middle-left for RTL&lt;/li&gt;&lt;li&gt;B: bottom-right for LTR or bottom-left for RTL&lt;/li&gt;&lt;li&gt;N: next line&lt;/li&gt;&lt;/ul&gt;&#10;    boolean &lt;b&gt;$resize&lt;/b&gt;: If true resize (reduce) the image to fit $w and $h (requires GD library).&#10;    int &lt;b&gt;$dpi&lt;/b&gt;: dot-per-inch resolution used on resize&#10;    string &lt;b&gt;$palign&lt;/b&gt;: Allows to center or align the image on the current line. Possible values are:&lt;ul&gt;&lt;li&gt;L : left align&lt;/li&gt;&lt;li&gt;C : center&lt;/li&gt;&lt;li&gt;R : right align&lt;/li&gt;&lt;li&gt;&apos;&apos; : empty string : left for LTR or right for RTL&lt;/li&gt;&lt;/ul&gt;&#10;    string &lt;b&gt;$filehash&lt;/b&gt;: File hash used to build unique file names.;;d129,7342;;b2,0;;m0;;e0;;i0;;o;;k;;l $file;;p $x;;p $y;;p $wpx;;p $hpx;;p $w;;p $h;;p $type;;p $link;;p $align;;p $resize;;p $dpi;;p $palign;;p $filehash;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="ImageSVG;PHP:Function Name;3211394257;f8;22941;2;23255;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ImageSVG($file, $x=null, $y=null, $w=0, $h=0, $link=&apos;&apos;, $align=&apos;&apos;, $palign=&apos;&apos;, $border=0, $fitonpage=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Embedd a Scalable Vector Graphics (SVG) image.&#10;NOTE: SVG standard is not yet fully implemented, use the setRasterizeVectorImages() method to enable/disable rasterization of vector images using ImageMagick library.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-05-02)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$file&lt;/b&gt;: Name of the SVG file or a &apos; @&apos; character followed by the SVG data string.&#10;    float|null &lt;b&gt;$x&lt;/b&gt;: Abscissa of the upper-left corner.&#10;    float|null &lt;b&gt;$y&lt;/b&gt;: Ordinate of the upper-left corner.&#10;    float &lt;b&gt;$w&lt;/b&gt;: Width of the image in the page. If not specified or equal to zero, it is automatically calculated.&#10;    float &lt;b&gt;$h&lt;/b&gt;: Height of the image in the page. If not specified or equal to zero, it is automatically calculated.&#10;    mixed &lt;b&gt;$link&lt;/b&gt;: URL or identifier returned by AddLink().&#10;    string &lt;b&gt;$align&lt;/b&gt;: Indicates the alignment of the pointer next to image insertion relative to image height. The value can be:&lt;ul&gt;&lt;li&gt;T: top-right for LTR or top-left for RTL&lt;/li&gt;&lt;li&gt;M: middle-right for LTR or middle-left for RTL&lt;/li&gt;&lt;li&gt;B: bottom-right for LTR or bottom-left for RTL&lt;/li&gt;&lt;li&gt;N: next line&lt;/li&gt;&lt;/ul&gt; If the alignment is an empty string, then the pointer will be restored on the starting SVG position.&#10;    string &lt;b&gt;$palign&lt;/b&gt;: Allows to center or align the image on the current line. Possible values are:&lt;ul&gt;&lt;li&gt;L : left align&lt;/li&gt;&lt;li&gt;C : center&lt;/li&gt;&lt;li&gt;R : right align&lt;/li&gt;&lt;li&gt;&apos;&apos; : empty string : left for LTR or right for RTL&lt;/li&gt;&lt;/ul&gt;&#10;    mixed &lt;b&gt;$border&lt;/b&gt;: Indicates if borders must be drawn around the cell. The value can be a number:&lt;ul&gt;&lt;li&gt;0: no border (default)&lt;/li&gt;&lt;li&gt;1: frame&lt;/li&gt;&lt;/ul&gt; or a string containing some or all of the following characters (in any order):&lt;ul&gt;&lt;li&gt;L: left&lt;/li&gt;&lt;li&gt;T: top&lt;/li&gt;&lt;li&gt;R: right&lt;/li&gt;&lt;li&gt;B: bottom&lt;/li&gt;&lt;/ul&gt; or an array of line styles for each border group - for example: array(&apos;LTRB&apos; =&gt; array(&apos;width&apos; =&gt; 2, &apos;cap&apos; =&gt; &apos;butt&apos;, &apos;join&apos; =&gt; &apos;miter&apos;, &apos;dash&apos; =&gt; 0, &apos;color&apos; =&gt; array(0, 0, 0)))&#10;    boolean &lt;b&gt;$fitonpage&lt;/b&gt;: if true the image is resized to not exceed page dimensions.;;d125,22941;;b1,0;;m0;;e0;;i0;;o;;k;;l $file;;p $x;;p $y;;p $w;;p $h;;p $link;;p $align;;p $palign;;p $border;;p $fitonpage;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="IncludeJS;PHP:Function Name;3211394257;f8;12634;2;12636;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    IncludeJS($script)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds a javascript&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Johannes G\FCntert, Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.002 (2008-02-12)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$script&lt;/b&gt;: Javascript code;;d36,12634;;b1,0;;m0;;e0;;i0;;o;;k;;l $script;;p;;x;;n">
</treenode>
<treenode node="Line;PHP:Function Name;3211394257;f8;11621;2;11631;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Line($x1, $y1, $x2, $y2, $style=array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Draws a line between two points.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0&#10;&lt;b&gt;see&lt;/b&gt;: SetLineWidth(), SetDrawColor(), SetLineStyle()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x1&lt;/b&gt;: Abscissa of first point.&#10;    float &lt;b&gt;$y1&lt;/b&gt;: Ordinate of first point.&#10;    float &lt;b&gt;$x2&lt;/b&gt;: Abscissa of second point.&#10;    float &lt;b&gt;$y2&lt;/b&gt;: Ordinate of second point.&#10;    array &lt;b&gt;$style&lt;/b&gt;: Line style. Array like for SetLineStyle(). Default value: default line style (empty array).;;d58,11621;;b1,0;;m0;;e0;;i0;;o;;k;;l $x1;;p $y1;;p $x2;;p $y2;;p $style;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="LinearGradient;PHP:Function Name;3211394257;f8;14455;2;14458;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    LinearGradient($x, $y, $w, $h, $col1=array(), $col2=array(), $coords=array(0,0,1,0))&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Paints a linear colour gradient.&#10;&lt;b&gt;author&lt;/b&gt;: Andreas W\FCrmser, Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 3.1.000 (2008-06-09)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: abscissa of the top left corner of the rectangle.&#10;    float &lt;b&gt;$y&lt;/b&gt;: ordinate of the top left corner of the rectangle.&#10;    float &lt;b&gt;$w&lt;/b&gt;: width of the rectangle.&#10;    float &lt;b&gt;$h&lt;/b&gt;: height of the rectangle.&#10;    array &lt;b&gt;$col1&lt;/b&gt;: first color (Grayscale, RGB or CMYK components).&#10;    array &lt;b&gt;$col2&lt;/b&gt;: second color (Grayscale, RGB or CMYK components).&#10;    array &lt;b&gt;$coords&lt;/b&gt;: array of the form (x1, y1, x2, y2) which defines the gradient vector (see linear_gradient_coords.jpg). The default value is from left to right (x1=0, y1=0, x2=1, y2=0).;;d102,14455;;b1,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $w;;p $h;;p $col1;;p $col2;;p $coords;;p;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="Link;PHP:Function Name;3211394257;f8;4833;2;4835;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Link($x, $y, $w, $h, $link, $spaces=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Puts a link on a rectangular area of the page.&#10;Text or image links are generally put via Cell(), Write() or Image(), but this method can be useful for instance to define a clickable area inside an image.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.5&#10;&lt;b&gt;see&lt;/b&gt;: AddLink(), Annotation(), Cell(), Write(), Image()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: Abscissa of the upper-left corner of the rectangle&#10;    float &lt;b&gt;$y&lt;/b&gt;: Ordinate of the upper-left corner of the rectangle&#10;    float &lt;b&gt;$w&lt;/b&gt;: Width of the rectangle&#10;    float &lt;b&gt;$h&lt;/b&gt;: Height of the rectangle&#10;    mixed &lt;b&gt;$link&lt;/b&gt;: URL or identifier returned by AddLink()&#10;    int &lt;b&gt;$spaces&lt;/b&gt;: number of spaces on the text to link;;d56,4833;;b1,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $w;;p $h;;p $link;;p $spaces;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="ListBox;PHP:Function Name;3211394257;f8;13010;2;13079;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ListBox($name, $w, $h, $values, $prop=array(), $opt=array(), $x=null, $y=null, $js=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a List-box field&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.000 (2009-09-07)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: field name&#10;    int &lt;b&gt;$w&lt;/b&gt;: width&#10;    int &lt;b&gt;$h&lt;/b&gt;: height&#10;    array &lt;b&gt;$values&lt;/b&gt;: array containing the list of values.&#10;    array &lt;b&gt;$prop&lt;/b&gt;: javascript field properties. Possible values are described on official Javascript for Acrobat API reference.&#10;    array &lt;b&gt;$opt&lt;/b&gt;: annotation parameters. Possible values are described on official PDF32000_2008 reference.&#10;    float|null &lt;b&gt;$x&lt;/b&gt;: Abscissa of the upper-left corner of the rectangle&#10;    float|null &lt;b&gt;$y&lt;/b&gt;: Ordinate of the upper-left corner of the rectangle&#10;    boolean &lt;b&gt;$js&lt;/b&gt;: if true put the field using JavaScript (requires Acrobat Writer to be rendered).;;d107,13010;;b1,0;;m0;;e0;;i0;;o;;k;;l $name;;p $w;;p $h;;p $values;;p $prop;;p $opt;;p $x;;p $y;;p $js;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="Ln;PHP:Function Name;3211394257;f8;7461;2;7485;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Ln($h=null, $cell=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Performs a line break.&#10;The current abscissa goes back to the left margin and the ordinate increases by the amount passed in parameter.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0&#10;&lt;b&gt;see&lt;/b&gt;: Cell()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float|null &lt;b&gt;$h&lt;/b&gt;: The height of the break. By default, the value equals the height of the last printed cell.&#10;    boolean &lt;b&gt;$cell&lt;/b&gt;: if true add the current left (or right o for RTL) padding to the X coordinate;;d42,7461;;b1,0;;m0;;e0;;i0;;o;;k;;l $h;;p $cell;;p;;x;;x;;n">
</treenode>
<treenode node="MirrorH;PHP:Function Name;3211394257;f8;11206;2;11208;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    MirrorH($x=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Horizontal Mirroring.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-07)&#10;&lt;b&gt;see&lt;/b&gt;: StartTransform(), StopTransform()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float|null &lt;b&gt;$x&lt;/b&gt;: abscissa of the point. Default is current x position;;d34,11206;;b1,0;;m0;;e0;;i0;;o;;k;;l $x;;p;;x;;n">
</treenode>
<treenode node="MirrorL;PHP:Function Name;3211394257;f8;11242;2;11245;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    MirrorL($angle=0, $x=null,$y=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Reflection against a straight line through point (x, y) with the gradient angle (angle).&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-07)&#10;&lt;b&gt;see&lt;/b&gt;: StartTransform(), StopTransform()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$angle&lt;/b&gt;: gradient angle of the straight line. Default is 0 (horizontal line).&#10;    float|null &lt;b&gt;$x&lt;/b&gt;: abscissa of the point. Default is current x position&#10;    float|null &lt;b&gt;$y&lt;/b&gt;: ordinate of the point. Default is current y position;;d52,11242;;b1,0;;m0;;e0;;i0;;o;;k;;l $angle;;p $x;;p $y;;p;;x;;x;;x;;n">
</treenode>
<treenode node="MirrorP;PHP:Function Name;3211394257;f8;11229;2;11231;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    MirrorP($x=null,$y=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Point reflection mirroring.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-07)&#10;&lt;b&gt;see&lt;/b&gt;: StartTransform(), StopTransform()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float|null &lt;b&gt;$x&lt;/b&gt;: abscissa of the point. Default is current x position&#10;    float|null &lt;b&gt;$y&lt;/b&gt;: ordinate of the point. Default is current y position;;d42,11229;;b1,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p;;x;;x;;n">
</treenode>
<treenode node="MirrorV;PHP:Function Name;3211394257;f8;11217;2;11219;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    MirrorV($y=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Verical Mirroring.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-07)&#10;&lt;b&gt;see&lt;/b&gt;: StartTransform(), StopTransform()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float|null &lt;b&gt;$y&lt;/b&gt;: ordinate of the point. Default is current y position;;d34,11217;;b1,0;;m0;;e0;;i0;;o;;k;;l $y;;p;;x;;n">
</treenode>
<treenode node="MultiCell;PHP:Function Name;3211394257;f8;5871;2;6224;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    MultiCell($w, $h, $txt, $border=0, $align=&apos;J&apos;, $fill=false, $ln=1, $x=null, $y=null, $reseth=true, $stretch=0, $ishtml=false, $autopadding=true, $maxh=0, $valign=&apos;T&apos;, $fitcell=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method allows printing text with line breaks.&#10;They can be automatic (as soon as the text reaches the right border of the cell) or explicit (via the \n character). As many cells as necessary are output, one below the other.&lt;br /&gt;&#10;Text can be aligned, centered or justified. The cell block can be framed and the background painted.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.3&#10;&lt;b&gt;see&lt;/b&gt;: SetFont(), SetDrawColor(), SetFillColor(), SetTextColor(), SetLineWidth(), Cell(), Write(), SetAutoPageBreak()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$w&lt;/b&gt;: Width of cells. If 0, they extend up to the right margin of the page.&#10;    float &lt;b&gt;$h&lt;/b&gt;: Cell minimum height. The cell extends automatically if needed.&#10;    string &lt;b&gt;$txt&lt;/b&gt;: String to print&#10;    mixed &lt;b&gt;$border&lt;/b&gt;: Indicates if borders must be drawn around the cell. The value can be a number:&lt;ul&gt;&lt;li&gt;0: no border (default)&lt;/li&gt;&lt;li&gt;1: frame&lt;/li&gt;&lt;/ul&gt; or a string containing some or all of the following characters (in any order):&lt;ul&gt;&lt;li&gt;L: left&lt;/li&gt;&lt;li&gt;T: top&lt;/li&gt;&lt;li&gt;R: right&lt;/li&gt;&lt;li&gt;B: bottom&lt;/li&gt;&lt;/ul&gt; or an array of line styles for each border group - for example: array(&apos;LTRB&apos; =&gt; array(&apos;width&apos; =&gt; 2, &apos;cap&apos; =&gt; &apos;butt&apos;, &apos;join&apos; =&gt; &apos;miter&apos;, &apos;dash&apos; =&gt; 0, &apos;color&apos; =&gt; array(0, 0, 0)))&#10;    string &lt;b&gt;$align&lt;/b&gt;: Allows to center or align the text. Possible values are:&lt;ul&gt;&lt;li&gt;L or empty string: left align&lt;/li&gt;&lt;li&gt;C: center&lt;/li&gt;&lt;li&gt;R: right align&lt;/li&gt;&lt;li&gt;J: justification (default value when $ishtml=false)&lt;/li&gt;&lt;/ul&gt;&#10;    boolean &lt;b&gt;$fill&lt;/b&gt;: Indicates if the cell background must be painted (true) or transparent (false).&#10;    int &lt;b&gt;$ln&lt;/b&gt;: Indicates where the current position should go after the call. Possible values are:&lt;ul&gt;&lt;li&gt;0: to the right&lt;/li&gt;&lt;li&gt;1: to the beginning of the next line [DEFAULT]&lt;/li&gt;&lt;li&gt;2: below&lt;/li&gt;&lt;/ul&gt;&#10;    float|null &lt;b&gt;$x&lt;/b&gt;: x position in user units&#10;    float|null &lt;b&gt;$y&lt;/b&gt;: y position in user units&#10;    boolean &lt;b&gt;$reseth&lt;/b&gt;: if true reset the last cell height (default true).&#10;    int &lt;b&gt;$stretch&lt;/b&gt;: font stretch mode: &lt;ul&gt;&lt;li&gt;0 = disabled&lt;/li&gt;&lt;li&gt;1 = horizontal scaling only if text is larger than cell width&lt;/li&gt;&lt;li&gt;2 = forced horizontal scaling to fit cell width&lt;/li&gt;&lt;li&gt;3 = character spacing only if text is larger than cell width&lt;/li&gt;&lt;li&gt;4 = forced character spacing to fit cell width&lt;/li&gt;&lt;/ul&gt; General font stretching and scaling values will be preserved when possible.&#10;    boolean &lt;b&gt;$ishtml&lt;/b&gt;: INTERNAL USE ONLY -- set to true if $txt is HTML content (default = false). Never set this parameter to true, use instead writeHTMLCell() or writeHTML() methods.&#10;    boolean &lt;b&gt;$autopadding&lt;/b&gt;: if true, uses internal padding and automatically adjust it to account for line width.&#10;    float &lt;b&gt;$maxh&lt;/b&gt;: maximum height. It should be &gt;= $h and less then remaining space to the bottom of the page, or 0 for disable this feature. This feature works only when $ishtml=false.&#10;    string &lt;b&gt;$valign&lt;/b&gt;: Vertical alignment of text (requires $maxh = $h &gt; 0). Possible values are:&lt;ul&gt;&lt;li&gt;T: TOP&lt;/li&gt;&lt;li&gt;M: middle&lt;/li&gt;&lt;li&gt;B: bottom&lt;/li&gt;&lt;/ul&gt;. This feature works only when $ishtml=false and the cell must fit in a single page.&#10;    boolean &lt;b&gt;$fitcell&lt;/b&gt;: if true attempt to fit all the text within the cell by reducing the font size (do not work in HTML mode). $maxh must be greater than 0 and equal to $h.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Return the number of cells or 1 for html mode.;;d200,5871;;b1,0;;m0;;e0;;i0;;o;;k;;l $w;;p $h;;p $txt;;p $border;;p $align;;p $fill;;p $ln;;p $x;;p $y;;p $reseth;;p $stretch;;p $ishtml;;p $autopadding;;p $maxh;;p $valign;;p $fitcell;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="Open;PHP:Function Name;3211394257;f8;3025;2;3027;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Open()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method begins the generation of the PDF document.&#10;It is not necessary to call it explicitly because AddPage() does it automatically.&#10;Note: no page is created by this method&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0&#10;&lt;b&gt;see&lt;/b&gt;: AddPage(), Close();;d24,3025;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="Output;PHP:Function Name;3211394257;f8;7652;2;7840;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Output($name=&apos;doc.pdf&apos;, $dest=&apos;I&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Send the document to a given destination: string, local file or browser.&#10;In the last case, the plug-in may be used (if present) or a download (&quot;Save as&quot; dialog box) may be forced.&lt;br /&gt;&#10;The method first calls Close() if necessary to terminate the document.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0&#10;&lt;b&gt;see&lt;/b&gt;: Close()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The name of the file when saved&#10;    string &lt;b&gt;$dest&lt;/b&gt;: Destination where to send the document. It can take one of the following values:&lt;ul&gt;&lt;li&gt;I: send the file inline to the browser (default). The plug-in is used if available. The name given by name is used when one selects the &quot;Save as&quot; option on the link generating the PDF.&lt;/li&gt;&lt;li&gt;D: send to the browser and force a file download with the name given by name.&lt;/li&gt;&lt;li&gt;F: save to a local server file with the name given by name.&lt;/li&gt;&lt;li&gt;S: return the document as a string (name is ignored).&lt;/li&gt;&lt;li&gt;FI: equivalent to F + I option&lt;/li&gt;&lt;li&gt;FD: equivalent to F + D option&lt;/li&gt;&lt;li&gt;E: return the document as base64 mime multi-part email attachment (RFC 2045)&lt;/li&gt;&lt;/ul&gt;;;d52,7652;;b1,0;;m0;;e0;;i0;;o;;k;;l $name;;p $dest;;p;;x;;x;;n">
</treenode>
<treenode node="PageNo;PHP:Function Name;3211394257;f8;3775;2;3777;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    PageNo()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the current page number.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0&#10;&lt;b&gt;see&lt;/b&gt;: getAliasNbPages()&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   page number;;d26,3775;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PageNoFormatted;PHP:Function Name;3211394257;f8;13829;2;13831;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    PageNoFormatted()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the current page number formatted as a string.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.2.005 (2008-11-06)&#10;&lt;b&gt;see&lt;/b&gt;: PaneNo(), formatPageNumber();;d35,13829;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PieSector;PHP:Function Name;3211394257;f8;14914;2;14916;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    PieSector($xc, $yc, $r, $a, $b, $style=&apos;FD&apos;, $cw=true, $o=90)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Draw the sector of a circle.&#10;It can be used for instance to render pie charts.&#10;&lt;b&gt;author&lt;/b&gt;: Maxime Delorme, Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 3.1.000 (2008-06-09)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$xc&lt;/b&gt;: abscissa of the center.&#10;    float &lt;b&gt;$yc&lt;/b&gt;: ordinate of the center.&#10;    float &lt;b&gt;$r&lt;/b&gt;: radius.&#10;    float &lt;b&gt;$a&lt;/b&gt;: start angle (in degrees).&#10;    float &lt;b&gt;$b&lt;/b&gt;: end angle (in degrees).&#10;    string &lt;b&gt;$style&lt;/b&gt;: Style of rendering. See the getPathPaintOperator() function for more information.&#10;    float &lt;b&gt;$cw&lt;/b&gt;: indicates whether to go clockwise (default: true).&#10;    float &lt;b&gt;$o&lt;/b&gt;: origin of angles (0 for 3 o&apos;clock, 90 for noon, 180 for 9 o&apos;clock, 270 for 6 o&apos;clock). Default: 90.;;d79,14914;;b1,0;;m0;;e0;;i0;;o;;k;;l $xc;;p $yc;;p $r;;p $a;;p $b;;p $style;;p $cw;;p $o;;p;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="PieSectorXY;PHP:Function Name;3211394257;f8;14935;2;14956;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    PieSectorXY($xc, $yc, $rx, $ry, $a, $b, $style=&apos;FD&apos;, $cw=false, $o=0, $nc=2)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Draw the sector of an ellipse.&#10;It can be used for instance to render pie charts.&#10;&lt;b&gt;author&lt;/b&gt;: Maxime Delorme, Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 3.1.000 (2008-06-09)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$xc&lt;/b&gt;: abscissa of the center.&#10;    float &lt;b&gt;$yc&lt;/b&gt;: ordinate of the center.&#10;    float &lt;b&gt;$rx&lt;/b&gt;: the x-axis radius.&#10;    float &lt;b&gt;$ry&lt;/b&gt;: the y-axis radius.&#10;    float &lt;b&gt;$a&lt;/b&gt;: start angle (in degrees).&#10;    float &lt;b&gt;$b&lt;/b&gt;: end angle (in degrees).&#10;    string &lt;b&gt;$style&lt;/b&gt;: Style of rendering. See the getPathPaintOperator() function for more information.&#10;    float &lt;b&gt;$cw&lt;/b&gt;: indicates whether to go clockwise.&#10;    float &lt;b&gt;$o&lt;/b&gt;: origin of angles (0 for 3 o&apos;clock, 90 for noon, 180 for 9 o&apos;clock, 270 for 6 o&apos;clock).&#10;    integer &lt;b&gt;$nc&lt;/b&gt;: Number of curves used to draw a 90 degrees portion of arc.;;d94,14935;;b1,0;;m0;;e0;;i0;;o;;k;;l $xc;;p $yc;;p $rx;;p $ry;;p $a;;p $b;;p $style;;p $cw;;p $o;;p $nc;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="PolyLine;PHP:Function Name;3211394257;f8;11982;2;11984;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    PolyLine($p, $style=&apos;&apos;, $line_style=array(), $fill_color=array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Draws a polygonal line&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.003 (2009-09-15)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$p&lt;/b&gt;: Points 0 to ($np - 1). Array with values (x0, y0, x1, y1,..., x(np-1), y(np - 1))&#10;    string &lt;b&gt;$style&lt;/b&gt;: Style of rendering. See the getPathPaintOperator() function for more information.&#10;    array &lt;b&gt;$line_style&lt;/b&gt;: Line style of polygon. Array with keys among the following: &lt;ul&gt; &lt;li&gt;all: Line style of all lines. Array like for SetLineStyle().&lt;/li&gt; &lt;li&gt;0 to ($np - 1): Line style of each line. Array like for SetLineStyle().&lt;/li&gt; &lt;/ul&gt; If a key is not present or is null, not draws the line. Default value is default line style (empty array).&#10;    array &lt;b&gt;$fill_color&lt;/b&gt;: Fill color. Format: array(GREY) or array(R,G,B) or array(C,M,Y,K) or array(C,M,Y,K,SpotColorName). Default value: default color (empty array).;;d83,11982;;b1,0;;m0;;e0;;i0;;o;;k;;l $p;;p $style;;p $line_style;;p $fill_color;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="Polycurve;PHP:Function Name;3211394257;f8;11752;2;11772;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Polycurve($x0, $y0, $segments, $style=&apos;&apos;, $line_style=array(), $fill_color=array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Draws a poly-Bezier curve.&#10;Each Bezier curve segment is a tangent to the line between the control points at&#10;either end of the curve.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;see&lt;/b&gt;: SetLineStyle()&#10;&lt;b&gt;since&lt;/b&gt;: 3.0008 (2008-05-12)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x0&lt;/b&gt;: Abscissa of start point.&#10;    float &lt;b&gt;$y0&lt;/b&gt;: Ordinate of start point.&#10;    float[] &lt;b&gt;$segments&lt;/b&gt;: An array of bezier descriptions. Format: array(x1, y1, x2, y2, x3, y3).&#10;    string &lt;b&gt;$style&lt;/b&gt;: Style of rendering. See the getPathPaintOperator() function for more information.&#10;    array &lt;b&gt;$line_style&lt;/b&gt;: Line style of curve. Array like for SetLineStyle(). Default value: default line style (empty array).&#10;    array &lt;b&gt;$fill_color&lt;/b&gt;: Fill color. Format: array(GREY) or array(R,G,B) or array(C,M,Y,K) or array(C,M,Y,K,SpotColorName). Default value: default color (empty array).;;d101,11752;;b1,0;;m0;;e0;;i0;;o;;k;;l $x0;;p $y0;;p $segments;;p $style;;p $line_style;;p $fill_color;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="Polygon;PHP:Function Name;3211394257;f8;12001;2;12071;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Polygon($p, $style=&apos;&apos;, $line_style=array(), $fill_color=array(), $closed=true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Draws a polygon.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-08)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$p&lt;/b&gt;: Points 0 to ($np - 1). Array with values (x0, y0, x1, y1,..., x(np-1), y(np - 1))&#10;    string &lt;b&gt;$style&lt;/b&gt;: Style of rendering. See the getPathPaintOperator() function for more information.&#10;    array &lt;b&gt;$line_style&lt;/b&gt;: Line style of polygon. Array with keys among the following: &lt;ul&gt; &lt;li&gt;all: Line style of all lines. Array like for SetLineStyle().&lt;/li&gt; &lt;li&gt;0 to ($np - 1): Line style of each line. Array like for SetLineStyle().&lt;/li&gt; &lt;/ul&gt; If a key is not present or is null, not draws the line. Default value is default line style (empty array).&#10;    array &lt;b&gt;$fill_color&lt;/b&gt;: Fill color. Format: array(GREY) or array(R,G,B) or array(C,M,Y,K) or array(C,M,Y,K,SpotColorName). Default value: default color (empty array).&#10;    boolean &lt;b&gt;$closed&lt;/b&gt;: if true the polygon is closes, otherwise will remain open;;d96,12001;;b1,0;;m0;;e0;;i0;;o;;k;;l $p;;p $style;;p $line_style;;p $fill_color;;p $closed;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="RadialGradient;PHP:Function Name;3211394257;f8;14473;2;14476;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    RadialGradient($x, $y, $w, $h, $col1=array(), $col2=array(), $coords=array(0.5,0.5,0.5,0.5,1))&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Paints a radial colour gradient.&#10;&lt;b&gt;author&lt;/b&gt;: Andreas W\FCrmser, Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 3.1.000 (2008-06-09)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: abscissa of the top left corner of the rectangle.&#10;    float &lt;b&gt;$y&lt;/b&gt;: ordinate of the top left corner of the rectangle.&#10;    float &lt;b&gt;$w&lt;/b&gt;: width of the rectangle.&#10;    float &lt;b&gt;$h&lt;/b&gt;: height of the rectangle.&#10;    array &lt;b&gt;$col1&lt;/b&gt;: first color (Grayscale, RGB or CMYK components).&#10;    array &lt;b&gt;$col2&lt;/b&gt;: second color (Grayscale, RGB or CMYK components).&#10;    array &lt;b&gt;$coords&lt;/b&gt;: array of the form (fx, fy, cx, cy, r) where (fx, fy) is the starting point of the gradient with color1, (cx, cy) is the center of the circle with color2, and r is the radius of the circle (see radial_gradient_coords.jpg). (fx, fy) should be inside the circle, otherwise some areas will not be defined.;;d112,14473;;b1,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $w;;p $h;;p $col1;;p $col2;;p $coords;;p;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="RadioButton;PHP:Function Name;3211394257;f8;12907;2;12993;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    RadioButton($name, $w, $prop=array(), $opt=array(), $onvalue=&apos;On&apos;, $checked=false, $x=null, $y=null, $js=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a RadioButton field.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.000 (2009-09-07)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: Field name.&#10;    int &lt;b&gt;$w&lt;/b&gt;: Width of the radio button.&#10;    array &lt;b&gt;$prop&lt;/b&gt;: Javascript field properties. Possible values are described on official Javascript for Acrobat API reference.&#10;    array &lt;b&gt;$opt&lt;/b&gt;: Annotation parameters. Possible values are described on official PDF32000_2008 reference.&#10;    string &lt;b&gt;$onvalue&lt;/b&gt;: Value to be returned if selected.&#10;    boolean &lt;b&gt;$checked&lt;/b&gt;: Define the initial state.&#10;    float|null &lt;b&gt;$x&lt;/b&gt;: Abscissa of the upper-left corner of the rectangle&#10;    float|null &lt;b&gt;$y&lt;/b&gt;: Ordinate of the upper-left corner of the rectangle&#10;    boolean &lt;b&gt;$js&lt;/b&gt;: If true put the field using JavaScript (requires Acrobat Writer to be rendered).;;d129,12907;;b1,0;;m0;;e0;;i0;;o;;k;;l $name;;p $w;;p $prop;;p $opt;;p $onvalue;;p $checked;;p $x;;p $y;;p $js;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="Rect;PHP:Function Name;3211394257;f8;11651;2;11701;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Rect($x, $y, $w, $h, $style=&apos;&apos;, $border_style=array(), $fill_color=array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Draws a rectangle.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0&#10;&lt;b&gt;see&lt;/b&gt;: SetLineStyle()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: Abscissa of upper-left corner.&#10;    float &lt;b&gt;$y&lt;/b&gt;: Ordinate of upper-left corner.&#10;    float &lt;b&gt;$w&lt;/b&gt;: Width.&#10;    float &lt;b&gt;$h&lt;/b&gt;: Height.&#10;    string &lt;b&gt;$style&lt;/b&gt;: Style of rendering. See the getPathPaintOperator() function for more information.&#10;    array &lt;b&gt;$border_style&lt;/b&gt;: Border style of rectangle. Array with keys among the following: &lt;ul&gt; &lt;li&gt;all: Line style of all borders. Array like for SetLineStyle().&lt;/li&gt; &lt;li&gt;L, T, R, B or combinations: Line style of left, top, right or bottom border. Array like for SetLineStyle().&lt;/li&gt; &lt;/ul&gt; If a key is not present or is null, the correspondent border is not drawn. Default value: default line style (empty array).&#10;    array &lt;b&gt;$fill_color&lt;/b&gt;: Fill color. Format: array(GREY) or array(R,G,B) or array(C,M,Y,K) or array(C,M,Y,K,SpotColorName). Default value: default color (empty array).;;d93,11651;;b1,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $w;;p $h;;p $style;;p $border_style;;p $fill_color;;p;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="RegularPolygon;PHP:Function Name;3211394257;f8;12102;2;12117;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    RegularPolygon($x0, $y0, $r, $ns, $angle=0, $draw_circle=false, $style=&apos;&apos;, $line_style=array(), $fill_color=array(), $circle_style=&apos;&apos;, $circle_outLine_style=array(), $circle_fill_color=array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Draws a regular polygon.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-08)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x0&lt;/b&gt;: Abscissa of center point.&#10;    float &lt;b&gt;$y0&lt;/b&gt;: Ordinate of center point.&#10;    float &lt;b&gt;$r&lt;/b&gt;: Radius of inscribed circle.&#10;    integer &lt;b&gt;$ns&lt;/b&gt;: Number of sides.&#10;    float &lt;b&gt;$angle&lt;/b&gt;: Angle oriented (anti-clockwise). Default value: 0.&#10;    boolean &lt;b&gt;$draw_circle&lt;/b&gt;: Draw inscribed circle or not. Default value: false.&#10;    string &lt;b&gt;$style&lt;/b&gt;: Style of rendering. See the getPathPaintOperator() function for more information.&#10;    array &lt;b&gt;$line_style&lt;/b&gt;: Line style of polygon sides. Array with keys among the following: &lt;ul&gt; &lt;li&gt;all: Line style of all sides. Array like for SetLineStyle().&lt;/li&gt; &lt;li&gt;0 to ($ns - 1): Line style of each side. Array like for SetLineStyle().&lt;/li&gt; &lt;/ul&gt; If a key is not present or is null, not draws the side. Default value is default line style (empty array).&#10;    array &lt;b&gt;$fill_color&lt;/b&gt;: Fill color. Format: array(red, green, blue). Default value: default color (empty array).&#10;    string &lt;b&gt;$circle_style&lt;/b&gt;: Style of rendering of inscribed circle (if draws). Possible values are: &lt;ul&gt; &lt;li&gt;D or empty string: Draw (default).&lt;/li&gt; &lt;li&gt;F: Fill.&lt;/li&gt; &lt;li&gt;DF or FD: Draw and fill.&lt;/li&gt; &lt;li&gt;CNZ: Clipping mode (using the even-odd rule to determine which regions lie inside the clipping path).&lt;/li&gt; &lt;li&gt;CEO: Clipping mode (using the nonzero winding number rule to determine which regions lie inside the clipping path).&lt;/li&gt; &lt;/ul&gt;&#10;    array &lt;b&gt;$circle_outLine_style&lt;/b&gt;: Line style of inscribed circle (if draws). Array like for SetLineStyle(). Default value: default line style (empty array).&#10;    array &lt;b&gt;$circle_fill_color&lt;/b&gt;: Fill color of inscribed circle (if draws). Format: array(red, green, blue). Default value: default color (empty array).;;d211,12102;;b1,0;;m0;;e0;;i0;;o;;k;;l $x0;;p $y0;;p $r;;p $ns;;p $angle;;p $draw_circle;;p $style;;p $line_style;;p $fill_color;;p $circle_style;;p $circle_outLine_style;;p $circle_fill_color;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="Rotate;PHP:Function Name;3211394257;f8;11299;2;11318;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Rotate($angle, $x=null, $y=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Rotate object.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-07)&#10;&lt;b&gt;see&lt;/b&gt;: StartTransform(), StopTransform()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$angle&lt;/b&gt;: angle in degrees for counter-clockwise rotation&#10;    float|null &lt;b&gt;$x&lt;/b&gt;: abscissa of the rotation center. Default is current x position&#10;    float|null &lt;b&gt;$y&lt;/b&gt;: ordinate of the rotation center. Default is current y position;;d50,11299;;b1,0;;m0;;e0;;i0;;o;;k;;l $angle;;p $x;;p $y;;p;;x;;x;;x;;n">
</treenode>
<treenode node="RoundedRect;PHP:Function Name;3211394257;f8;12192;2;12194;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    RoundedRect($x, $y, $w, $h, $r, $round_corner=&apos;1111&apos;, $style=&apos;&apos;, $border_style=array(), $fill_color=array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Draws a rounded rectangle.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-08)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: Abscissa of upper-left corner.&#10;    float &lt;b&gt;$y&lt;/b&gt;: Ordinate of upper-left corner.&#10;    float &lt;b&gt;$w&lt;/b&gt;: Width.&#10;    float &lt;b&gt;$h&lt;/b&gt;: Height.&#10;    float &lt;b&gt;$r&lt;/b&gt;: the radius of the circle used to round off the corners of the rectangle.&#10;    string &lt;b&gt;$round_corner&lt;/b&gt;: Draws rounded corner or not. String with a 0 (not rounded i-corner) or 1 (rounded i-corner) in i-position. Positions are, in order and begin to 0: top right, bottom right, bottom left and top left. Default value: all rounded corner (&quot;1111&quot;).&#10;    string &lt;b&gt;$style&lt;/b&gt;: Style of rendering. See the getPathPaintOperator() function for more information.&#10;    array &lt;b&gt;$border_style&lt;/b&gt;: Border style of rectangle. Array like for SetLineStyle(). Default value: default line style (empty array).&#10;    array &lt;b&gt;$fill_color&lt;/b&gt;: Fill color. Format: array(GREY) or array(R,G,B) or array(C,M,Y,K) or array(C,M,Y,K,SpotColorName). Default value: default color (empty array).;;d126,12192;;b1,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $w;;p $h;;p $r;;p $round_corner;;p $style;;p $border_style;;p $fill_color;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="RoundedRectXY;PHP:Function Name;3211394257;f8;12211;2;12267;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    RoundedRectXY($x, $y, $w, $h, $rx, $ry, $round_corner=&apos;1111&apos;, $style=&apos;&apos;, $border_style=array(), $fill_color=array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Draws a rounded rectangle.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.019 (2010-04-22)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: Abscissa of upper-left corner.&#10;    float &lt;b&gt;$y&lt;/b&gt;: Ordinate of upper-left corner.&#10;    float &lt;b&gt;$w&lt;/b&gt;: Width.&#10;    float &lt;b&gt;$h&lt;/b&gt;: Height.&#10;    float &lt;b&gt;$rx&lt;/b&gt;: the x-axis radius of the ellipse used to round off the corners of the rectangle.&#10;    float &lt;b&gt;$ry&lt;/b&gt;: the y-axis radius of the ellipse used to round off the corners of the rectangle.&#10;    string &lt;b&gt;$round_corner&lt;/b&gt;: Draws rounded corner or not. String with a 0 (not rounded i-corner) or 1 (rounded i-corner) in i-position. Positions are, in order and begin to 0: top right, bottom right, bottom left and top left. Default value: all rounded corner (&quot;1111&quot;).&#10;    string &lt;b&gt;$style&lt;/b&gt;: Style of rendering. See the getPathPaintOperator() function for more information.&#10;    array &lt;b&gt;$border_style&lt;/b&gt;: Border style of rectangle. Array like for SetLineStyle(). Default value: default line style (empty array).&#10;    array &lt;b&gt;$fill_color&lt;/b&gt;: Fill color. Format: array(GREY) or array(R,G,B) or array(C,M,Y,K) or array(C,M,Y,K,SpotColorName). Default value: default color (empty array).;;d134,12211;;b1,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $w;;p $h;;p $rx;;p $ry;;p $round_corner;;p $style;;p $border_style;;p $fill_color;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="SVGPath;PHP:Function Name;3211394257;f11;23598;2;23954;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    SVGPath($d, $style=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Draws an SVG path&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-05-02)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$d&lt;/b&gt;: attribute d of the path SVG element&#10;    string &lt;b&gt;$style&lt;/b&gt;: Style of rendering. Possible values are: &lt;ul&gt; &lt;li&gt;D or empty string: Draw (default).&lt;/li&gt; &lt;li&gt;F: Fill.&lt;/li&gt; &lt;li&gt;F*: Fill using the even-odd rule to determine which regions lie inside the clipping path.&lt;/li&gt; &lt;li&gt;DF or FD: Draw and fill.&lt;/li&gt; &lt;li&gt;DF* or FD*: Draw and fill using the even-odd rule to determine which regions lie inside the clipping path.&lt;/li&gt; &lt;li&gt;CNZ: Clipping mode (using the even-odd rule to determine which regions lie inside the clipping path).&lt;/li&gt; &lt;li&gt;CEO: Clipping mode (using the nonzero winding number rule to determine which regions lie inside the clipping path).&lt;/li&gt; &lt;/ul&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of container box measures (x, y, w, h);;d43,23598;;b2,0;;m0;;e0;;i0;;o;;k;;l $d;;p $style;;p;;x;;x;;n">
</treenode>
<treenode node="SVGTransform;PHP:Function Name;3211394257;f11;23284;2;23286;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    SVGTransform($tm)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Apply SVG graphic transformation matrix.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-05-02)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$tm&lt;/b&gt;: original SVG transformation matrix;;d38,23284;;b2,0;;m0;;e0;;i0;;o;;k;;l $tm;;p;;x;;n">
</treenode>
<treenode node="Scale;PHP:Function Name;3211394257;f8;11173;2;11197;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Scale($s_x, $s_y, $x=null, $y=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Vertical and horizontal non-proportional Scaling.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-07)&#10;&lt;b&gt;see&lt;/b&gt;: StartTransform(), StopTransform()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$s_x&lt;/b&gt;: scaling factor for width as percent. 0 is not allowed.&#10;    float &lt;b&gt;$s_y&lt;/b&gt;: scaling factor for height as percent. 0 is not allowed.&#10;    float|null &lt;b&gt;$x&lt;/b&gt;: abscissa of the scaling center. Default is current x position&#10;    float|null &lt;b&gt;$y&lt;/b&gt;: ordinate of the scaling center. Default is current y position;;d53,11173;;b1,0;;m0;;e0;;i0;;o;;k;;l $s_x;;p $s_y;;p $x;;p $y;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="ScaleX;PHP:Function Name;3211394257;f8;11133;2;11135;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ScaleX($s_x, $x=&apos;&apos;, $y=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Horizontal Scaling.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-07)&#10;&lt;b&gt;see&lt;/b&gt;: StartTransform(), StopTransform()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$s_x&lt;/b&gt;: scaling factor for width as percent. 0 is not allowed.&#10;    int &lt;b&gt;$x&lt;/b&gt;: abscissa of the scaling center. Default is current x position&#10;    int &lt;b&gt;$y&lt;/b&gt;: ordinate of the scaling center. Default is current y position;;d44,11133;;b1,0;;m0;;e0;;i0;;o;;k;;l $s_x;;p $x;;p $y;;p;;x;;x;;x;;n">
</treenode>
<treenode node="ScaleXY;PHP:Function Name;3211394257;f8;11159;2;11161;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ScaleXY($s, $x=&apos;&apos;, $y=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Vertical and horizontal proportional Scaling.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-07)&#10;&lt;b&gt;see&lt;/b&gt;: StartTransform(), StopTransform()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$s&lt;/b&gt;: scaling factor for width and height as percent. 0 is not allowed.&#10;    int &lt;b&gt;$x&lt;/b&gt;: abscissa of the scaling center. Default is current x position&#10;    int &lt;b&gt;$y&lt;/b&gt;: ordinate of the scaling center. Default is current y position;;d43,11159;;b1,0;;m0;;e0;;i0;;o;;k;;l $s;;p $x;;p $y;;p;;x;;x;;x;;n">
</treenode>
<treenode node="ScaleY;PHP:Function Name;3211394257;f8;11146;2;11148;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ScaleY($s_y, $x=&apos;&apos;, $y=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Vertical Scaling.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-07)&#10;&lt;b&gt;see&lt;/b&gt;: StartTransform(), StopTransform()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$s_y&lt;/b&gt;: scaling factor for height as percent. 0 is not allowed.&#10;    int &lt;b&gt;$x&lt;/b&gt;: abscissa of the scaling center. Default is current x position&#10;    int &lt;b&gt;$y&lt;/b&gt;: ordinate of the scaling center. Default is current y position;;d44,11146;;b1,0;;m0;;e0;;i0;;o;;k;;l $s_y;;p $x;;p $y;;p;;x;;x;;x;;n">
</treenode>
<treenode node="Skew;PHP:Function Name;3211394257;f8;11356;2;11378;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Skew($angle_x, $angle_y, $x=null, $y=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Skew.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-07)&#10;&lt;b&gt;see&lt;/b&gt;: StartTransform(), StopTransform()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$angle_x&lt;/b&gt;: angle in degrees between -90 (skew to the left) and 90 (skew to the right)&#10;    float &lt;b&gt;$angle_y&lt;/b&gt;: angle in degrees between -90 (skew to the bottom) and 90 (skew to the top)&#10;    float|null &lt;b&gt;$x&lt;/b&gt;: abscissa of the skewing center. default is current x position&#10;    float|null &lt;b&gt;$y&lt;/b&gt;: ordinate of the skewing center. default is current y position;;d60,11356;;b1,0;;m0;;e0;;i0;;o;;k;;l $angle_x;;p $angle_y;;p $x;;p $y;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="SkewX;PHP:Function Name;3211394257;f8;11329;2;11331;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    SkewX($angle_x, $x=null, $y=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Skew horizontally.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-07)&#10;&lt;b&gt;see&lt;/b&gt;: StartTransform(), StopTransform()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$angle_x&lt;/b&gt;: angle in degrees between -90 (skew to the left) and 90 (skew to the right)&#10;    float|null &lt;b&gt;$x&lt;/b&gt;: abscissa of the skewing center. default is current x position&#10;    float|null &lt;b&gt;$y&lt;/b&gt;: ordinate of the skewing center. default is current y position;;d51,11329;;b1,0;;m0;;e0;;i0;;o;;k;;l $angle_x;;p $x;;p $y;;p;;x;;x;;x;;n">
</treenode>
<treenode node="SkewY;PHP:Function Name;3211394257;f8;11342;2;11344;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    SkewY($angle_y, $x=null, $y=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Skew vertically.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-07)&#10;&lt;b&gt;see&lt;/b&gt;: StartTransform(), StopTransform()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$angle_y&lt;/b&gt;: angle in degrees between -90 (skew to the bottom) and 90 (skew to the top)&#10;    float|null &lt;b&gt;$x&lt;/b&gt;: abscissa of the skewing center. default is current x position&#10;    float|null &lt;b&gt;$y&lt;/b&gt;: ordinate of the skewing center. default is current y position;;d51,11342;;b1,0;;m0;;e0;;i0;;o;;k;;l $angle_y;;p $x;;p $y;;p;;x;;x;;x;;n">
</treenode>
<treenode node="StarPolygon;PHP:Function Name;3211394257;f8;12150;2;12176;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    StarPolygon($x0, $y0, $r, $nv, $ng, $angle=0, $draw_circle=false, $style=&apos;&apos;, $line_style=array(), $fill_color=array(), $circle_style=&apos;&apos;, $circle_outLine_style=array(), $circle_fill_color=array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Draws a star polygon&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-08)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x0&lt;/b&gt;: Abscissa of center point.&#10;    float &lt;b&gt;$y0&lt;/b&gt;: Ordinate of center point.&#10;    float &lt;b&gt;$r&lt;/b&gt;: Radius of inscribed circle.&#10;    integer &lt;b&gt;$nv&lt;/b&gt;: Number of vertices.&#10;    integer &lt;b&gt;$ng&lt;/b&gt;: Number of gap (if ($ng % $nv = 1) then is a regular polygon).&#10;    float &lt;b&gt;$angle&lt;/b&gt;: Angle oriented (anti-clockwise). Default value: 0.&#10;    boolean &lt;b&gt;$draw_circle&lt;/b&gt;: Draw inscribed circle or not. Default value is false.&#10;    string &lt;b&gt;$style&lt;/b&gt;: Style of rendering. See the getPathPaintOperator() function for more information.&#10;    array &lt;b&gt;$line_style&lt;/b&gt;: Line style of polygon sides. Array with keys among the following: &lt;ul&gt; &lt;li&gt;all: Line style of all sides. Array like for SetLineStyle().&lt;/li&gt; &lt;li&gt;0 to (n - 1): Line style of each side. Array like for SetLineStyle().&lt;/li&gt; &lt;/ul&gt; If a key is not present or is null, not draws the side. Default value is default line style (empty array).&#10;    array &lt;b&gt;$fill_color&lt;/b&gt;: Fill color. Format: array(red, green, blue). Default value: default color (empty array).&#10;    string &lt;b&gt;$circle_style&lt;/b&gt;: Style of rendering of inscribed circle (if draws). Possible values are: &lt;ul&gt; &lt;li&gt;D or empty string: Draw (default).&lt;/li&gt; &lt;li&gt;F: Fill.&lt;/li&gt; &lt;li&gt;DF or FD: Draw and fill.&lt;/li&gt; &lt;li&gt;CNZ: Clipping mode (using the even-odd rule to determine which regions lie inside the clipping path).&lt;/li&gt; &lt;li&gt;CEO: Clipping mode (using the nonzero winding number rule to determine which regions lie inside the clipping path).&lt;/li&gt; &lt;/ul&gt;&#10;    array &lt;b&gt;$circle_outLine_style&lt;/b&gt;: Line style of inscribed circle (if draws). Array like for SetLineStyle(). Default value: default line style (empty array).&#10;    array &lt;b&gt;$circle_fill_color&lt;/b&gt;: Fill color of inscribed circle (if draws). Format: array(red, green, blue). Default value: default color (empty array).;;d213,12150;;b1,0;;m0;;e0;;i0;;o;;k;;l $x0;;p $y0;;p $r;;p $nv;;p $ng;;p $angle;;p $draw_circle;;p $style;;p $line_style;;p $fill_color;;p $circle_style;;p $circle_outLine_style;;p $circle_fill_color;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="StartTransform;PHP:Function Name;3211394257;f8;11085;2;11098;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    StartTransform()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Starts a 2D tranformation saving current graphic state.&#10;This function must be called before scaling, mirroring, translation, rotation and skewing.&#10;Use StartTransform() before, and StopTransform() after the transformations to restore the normal behavior.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-07)&#10;&lt;b&gt;see&lt;/b&gt;: StartTransform(), StopTransform();;d34,11085;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="StopTransform;PHP:Function Name;3211394257;f8;11108;2;11123;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    StopTransform()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Stops a 2D tranformation restoring previous graphic state.&#10;This function must be called after scaling, mirroring, translation, rotation and skewing.&#10;Use StartTransform() before, and StopTransform() after the transformations to restore the normal behavior.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-07)&#10;&lt;b&gt;see&lt;/b&gt;: StartTransform(), StopTransform();;d33,11108;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="Text;PHP:Function Name;3211394257;f8;5006;2;5015;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Text($x, $y, $txt, $fstroke=0, $fclip=false, $ffill=true, $border=0, $ln=0, $align=&apos;&apos;, $fill=false, $link=&apos;&apos;, $stretch=0, $ignore_min_height=false, $calign=&apos;T&apos;, $valign=&apos;M&apos;, $rtloff=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Prints a text cell at the specified position.&#10;This method allows to place a string precisely on the page.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0&#10;&lt;b&gt;see&lt;/b&gt;: Cell(), Write(), MultiCell(), WriteHTML(), WriteHTMLCell()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: Abscissa of the cell origin&#10;    float &lt;b&gt;$y&lt;/b&gt;: Ordinate of the cell origin&#10;    string &lt;b&gt;$txt&lt;/b&gt;: String to print&#10;    int &lt;b&gt;$fstroke&lt;/b&gt;: outline size in user units (0 = disable)&#10;    boolean &lt;b&gt;$fclip&lt;/b&gt;: if true activate clipping mode (you must call StartTransform() before this function and StopTransform() to stop the clipping tranformation).&#10;    boolean &lt;b&gt;$ffill&lt;/b&gt;: if true fills the text&#10;    mixed &lt;b&gt;$border&lt;/b&gt;: Indicates if borders must be drawn around the cell. The value can be a number:&lt;ul&gt;&lt;li&gt;0: no border (default)&lt;/li&gt;&lt;li&gt;1: frame&lt;/li&gt;&lt;/ul&gt; or a string containing some or all of the following characters (in any order):&lt;ul&gt;&lt;li&gt;L: left&lt;/li&gt;&lt;li&gt;T: top&lt;/li&gt;&lt;li&gt;R: right&lt;/li&gt;&lt;li&gt;B: bottom&lt;/li&gt;&lt;/ul&gt; or an array of line styles for each border group - for example: array(&apos;LTRB&apos; =&gt; array(&apos;width&apos; =&gt; 2, &apos;cap&apos; =&gt; &apos;butt&apos;, &apos;join&apos; =&gt; &apos;miter&apos;, &apos;dash&apos; =&gt; 0, &apos;color&apos; =&gt; array(0, 0, 0)))&#10;    int &lt;b&gt;$ln&lt;/b&gt;: Indicates where the current position should go after the call. Possible values are:&lt;ul&gt;&lt;li&gt;0: to the right (or left for RTL languages)&lt;/li&gt;&lt;li&gt;1: to the beginning of the next line&lt;/li&gt;&lt;li&gt;2: below&lt;/li&gt;&lt;/ul&gt;Putting 1 is equivalent to putting 0 and calling Ln() just after. Default value: 0.&#10;    string &lt;b&gt;$align&lt;/b&gt;: Allows to center or align the text. Possible values are:&lt;ul&gt;&lt;li&gt;L or empty string: left align (default value)&lt;/li&gt;&lt;li&gt;C: center&lt;/li&gt;&lt;li&gt;R: right align&lt;/li&gt;&lt;li&gt;J: justify&lt;/li&gt;&lt;/ul&gt;&#10;    boolean &lt;b&gt;$fill&lt;/b&gt;: Indicates if the cell background must be painted (true) or transparent (false).&#10;    mixed &lt;b&gt;$link&lt;/b&gt;: URL or identifier returned by AddLink().&#10;    int &lt;b&gt;$stretch&lt;/b&gt;: font stretch mode: &lt;ul&gt;&lt;li&gt;0 = disabled&lt;/li&gt;&lt;li&gt;1 = horizontal scaling only if text is larger than cell width&lt;/li&gt;&lt;li&gt;2 = forced horizontal scaling to fit cell width&lt;/li&gt;&lt;li&gt;3 = character spacing only if text is larger than cell width&lt;/li&gt;&lt;li&gt;4 = forced character spacing to fit cell width&lt;/li&gt;&lt;/ul&gt; General font stretching and scaling values will be preserved when possible.&#10;    boolean &lt;b&gt;$ignore_min_height&lt;/b&gt;: if true ignore automatic minimum height value.&#10;    string &lt;b&gt;$calign&lt;/b&gt;: cell vertical alignment relative to the specified Y value. Possible values are:&lt;ul&gt;&lt;li&gt;T : cell top&lt;/li&gt;&lt;li&gt;A : font top&lt;/li&gt;&lt;li&gt;L : font baseline&lt;/li&gt;&lt;li&gt;D : font bottom&lt;/li&gt;&lt;li&gt;B : cell bottom&lt;/li&gt;&lt;/ul&gt;&#10;    string &lt;b&gt;$valign&lt;/b&gt;: text vertical alignment inside the cell. Possible values are:&lt;ul&gt;&lt;li&gt;T : top&lt;/li&gt;&lt;li&gt;C : center&lt;/li&gt;&lt;li&gt;B : bottom&lt;/li&gt;&lt;/ul&gt;&#10;    boolean &lt;b&gt;$rtloff&lt;/b&gt;: if true uses the page top-left corner as origin of axis for $x and $y initial position.;;d206,5006;;b1,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $txt;;p $fstroke;;p $fclip;;p $ffill;;p $border;;p $ln;;p $align;;p $fill;;p $link;;p $stretch;;p $ignore_min_height;;p $calign;;p $valign;;p $rtloff;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="TextField;PHP:Function Name;3211394257;f8;12786;2;12890;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    TextField($name, $w, $h, $prop=array(), $opt=array(), $x=null, $y=null, $js=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a text field&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.000 (2009-09-07)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: field name&#10;    float &lt;b&gt;$w&lt;/b&gt;: Width of the rectangle&#10;    float &lt;b&gt;$h&lt;/b&gt;: Height of the rectangle&#10;    array &lt;b&gt;$prop&lt;/b&gt;: javascript field properties. Possible values are described on official Javascript for Acrobat API reference.&#10;    array &lt;b&gt;$opt&lt;/b&gt;: annotation parameters. Possible values are described on official PDF32000_2008 reference.&#10;    float|null &lt;b&gt;$x&lt;/b&gt;: Abscissa of the upper-left corner of the rectangle&#10;    float|null &lt;b&gt;$y&lt;/b&gt;: Ordinate of the upper-left corner of the rectangle&#10;    boolean &lt;b&gt;$js&lt;/b&gt;: if true put the field using JavaScript (requires Acrobat Writer to be rendered).;;d100,12786;;b1,0;;m0;;e0;;i0;;o;;k;;l $name;;p $w;;p $h;;p $prop;;p $opt;;p $x;;p $y;;p $js;;p;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="Transform;PHP:Function Name;3211394257;f11;11387;2;11405;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Transform($tm)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Apply graphic transformations.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-07)&#10;&lt;b&gt;see&lt;/b&gt;: StartTransform(), StopTransform()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$tm&lt;/b&gt;: transformation matrix;;d35,11387;;b2,0;;m0;;e0;;i0;;o;;k;;l $tm;;p;;x;;n">
</treenode>
<treenode node="Translate;PHP:Function Name;3211394257;f8;11277;2;11288;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Translate($t_x, $t_y)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Translate graphic object horizontally and vertically.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-07)&#10;&lt;b&gt;see&lt;/b&gt;: StartTransform(), StopTransform()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$t_x&lt;/b&gt;: movement to the right&#10;    int &lt;b&gt;$t_y&lt;/b&gt;: movement to the bottom;;d39,11277;;b1,0;;m0;;e0;;i0;;o;;k;;l $t_x;;p $t_y;;p;;x;;x;;n">
</treenode>
<treenode node="TranslateX;PHP:Function Name;3211394257;f8;11254;2;11256;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    TranslateX($t_x)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Translate graphic object horizontally.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-07)&#10;&lt;b&gt;see&lt;/b&gt;: StartTransform(), StopTransform()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$t_x&lt;/b&gt;: movement to the right (or left for RTL);;d34,11254;;b1,0;;m0;;e0;;i0;;o;;k;;l $t_x;;p;;x;;n">
</treenode>
<treenode node="TranslateY;PHP:Function Name;3211394257;f8;11265;2;11267;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    TranslateY($t_y)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Translate graphic object vertically.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-07)&#10;&lt;b&gt;see&lt;/b&gt;: StartTransform(), StopTransform()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$t_y&lt;/b&gt;: movement to the bottom;;d34,11265;;b1,0;;m0;;e0;;i0;;o;;k;;l $t_y;;p;;x;;n">
</treenode>
<treenode node="Write;PHP:Function Name;3211394257;f8;6391;2;6814;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Write($h, $txt, $link=&apos;&apos;, $fill=false, $align=&apos;&apos;, $ln=false, $stretch=0, $firstline=false, $firstblock=false, $maxh=0, $wadj=0, $margin=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method prints text from the current position.&lt;br /&gt;&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.5&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$h&lt;/b&gt;: Line height&#10;    string &lt;b&gt;$txt&lt;/b&gt;: String to print&#10;    mixed &lt;b&gt;$link&lt;/b&gt;: URL or identifier returned by AddLink()&#10;    boolean &lt;b&gt;$fill&lt;/b&gt;: Indicates if the cell background must be painted (true) or transparent (false).&#10;    string &lt;b&gt;$align&lt;/b&gt;: Allows to center or align the text. Possible values are:&lt;ul&gt;&lt;li&gt;L or empty string: left align (default value)&lt;/li&gt;&lt;li&gt;C: center&lt;/li&gt;&lt;li&gt;R: right align&lt;/li&gt;&lt;li&gt;J: justify&lt;/li&gt;&lt;/ul&gt;&#10;    boolean &lt;b&gt;$ln&lt;/b&gt;: if true set cursor at the bottom of the line, otherwise set cursor at the top of the line.&#10;    int &lt;b&gt;$stretch&lt;/b&gt;: font stretch mode: &lt;ul&gt;&lt;li&gt;0 = disabled&lt;/li&gt;&lt;li&gt;1 = horizontal scaling only if text is larger than cell width&lt;/li&gt;&lt;li&gt;2 = forced horizontal scaling to fit cell width&lt;/li&gt;&lt;li&gt;3 = character spacing only if text is larger than cell width&lt;/li&gt;&lt;li&gt;4 = forced character spacing to fit cell width&lt;/li&gt;&lt;/ul&gt; General font stretching and scaling values will be preserved when possible.&#10;    boolean &lt;b&gt;$firstline&lt;/b&gt;: if true prints only the first line and return the remaining string.&#10;    boolean &lt;b&gt;$firstblock&lt;/b&gt;: if true the string is the starting of a line.&#10;    float &lt;b&gt;$maxh&lt;/b&gt;: maximum height. It should be &gt;= $h and less then remaining space to the bottom of the page, or 0 for disable this feature.&#10;    float &lt;b&gt;$wadj&lt;/b&gt;: first line width will be reduced by this amount (used in HTML mode).&#10;    array|null &lt;b&gt;$margin&lt;/b&gt;: margin array of the parent container&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Return the number of cells or the remaining string if $firstline = true.;;d159,6391;;b1,0;;m0;;e0;;i0;;o;;k;;l $h;;p $txt;;p $link;;p $fill;;p $align;;p $ln;;p $stretch;;p $firstline;;p $firstblock;;p $maxh;;p $wadj;;p $margin;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="_OEvalue;PHP:Function Name;3211394257;f11;10833;2;10836;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _OEvalue()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Compute OE value (used for encryption)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.006 (2010-10-19)&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   OE value;;d31,10833;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_Ovalue;PHP:Function Name;3211394257;f11;10795;2;10824;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _Ovalue()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Compute O value (used for encryption)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.0.000 (2008-01-02)&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   O value;;d30,10795;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_UEvalue;PHP:Function Name;3211394257;f11;10783;2;10786;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _UEvalue()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Compute UE value (used for encryption)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.006 (2010-10-19)&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   UE value;;d31,10783;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_Uvalue;PHP:Function Name;3211394257;f11;10750;2;10774;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _Uvalue()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Compute U value (used for encryption)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.0.000 (2008-01-02)&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   U value;;d30,10750;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="__construct;PHP:Function Name;3211394257;f8;1885;2;2035;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($orientation=&apos;P&apos;, $unit=&apos;mm&apos;, $format=&apos;A4&apos;, $unicode=true, $encoding=&apos;UTF-8&apos;, $diskcache=false, $pdfa=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This is the class constructor.&#10;It allows to set up the page format, the orientation and the measure unit used in all the methods (except for the font sizes).&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;see&lt;/b&gt;: getPageSizeFromFormat(), setPageFormat()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$orientation&lt;/b&gt;: page orientation. Possible values are (case insensitive):&lt;ul&gt;&lt;li&gt;P or Portrait (default)&lt;/li&gt;&lt;li&gt;L or Landscape&lt;/li&gt;&lt;li&gt;&apos;&apos; (empty string) for automatic orientation&lt;/li&gt;&lt;/ul&gt;&#10;    string &lt;b&gt;$unit&lt;/b&gt;: User measure unit. Possible values are:&lt;ul&gt;&lt;li&gt;pt: point&lt;/li&gt;&lt;li&gt;mm: millimeter (default)&lt;/li&gt;&lt;li&gt;cm: centimeter&lt;/li&gt;&lt;li&gt;in: inch&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;A point equals 1/72 of inch, that is to say about 0.35 mm (an inch being 2.54 cm). This is a very common unit in typography;s font sizes are expressed in that unit.&#10;    mixed &lt;b&gt;$format&lt;/b&gt;: The format used for pages. It can be either: one of the string values specified at getPageSizeFromFormat() or an array of parameters specified at setPageFormat().&#10;    boolean &lt;b&gt;$unicode&lt;/b&gt;: TRUE means that the input text is unicode (default = true)&#10;    string &lt;b&gt;$encoding&lt;/b&gt;: Charset encoding (used only when converting back html entities);s default is UTF-8.&#10;    boolean &lt;b&gt;$diskcache&lt;/b&gt;: DEPRECATED FEATURE&#10;    false|integer &lt;b&gt;$pdfa&lt;/b&gt;: If not false, set the document to PDF/A mode and the good version (1 or 3).;;d138,1885;;b1,0;;m0;;e0;;i0;;o;;k;;l $orientation;;p $unit;;p $format;;p $unicode;;p $encoding;;p $diskcache;;p $pdfa;;p;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="__destruct;PHP:Function Name;3211394257;f8;2042;2;2045;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __destruct()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default destructor.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.53.0.TC016;;d30,2042;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_addfield;PHP:Function Name;3211394257;f11;12721;2;12744;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _addfield($type, $name, $x, $y, $w, $h, $prop)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds a javascript form field.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Denis Van Nuffelen, Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.002 (2008-02-12)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$type&lt;/b&gt;: field type&#10;    string &lt;b&gt;$name&lt;/b&gt;: field name&#10;    int &lt;b&gt;$x&lt;/b&gt;: horizontal position&#10;    int &lt;b&gt;$y&lt;/b&gt;: vertical position&#10;    int &lt;b&gt;$w&lt;/b&gt;: width&#10;    int &lt;b&gt;$h&lt;/b&gt;: height&#10;    array &lt;b&gt;$prop&lt;/b&gt;: javascript field properties. Possible values are described on official Javascript for Acrobat API reference.;;d67,12721;;b2,0;;m0;;e0;;i0;;o;;k;;l $type;;p $name;;p $x;;p $y;;p $w;;p $h;;p $prop;;p;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="_beginpage;PHP:Function Name;3211394257;f11;10145;2;10182;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _beginpage($orientation=&apos;&apos;, $format=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Initialize a new page.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;see&lt;/b&gt;: getPageSizeFromFormat(), setPageFormat()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$orientation&lt;/b&gt;: page orientation. Possible values are (case insensitive):&lt;ul&gt;&lt;li&gt;P or PORTRAIT (default)&lt;/li&gt;&lt;li&gt;L or LANDSCAPE&lt;/li&gt;&lt;/ul&gt;&#10;    mixed &lt;b&gt;$format&lt;/b&gt;: The format used for pages. It can be either: one of the string values specified at getPageSizeFromFormat() or an array of parameters specified at setPageFormat().;;d60,10145;;b2,0;;m0;;e0;;i0;;o;;k;;l $orientation;;p $format;;p;;x;;x;;n">
</treenode>
<treenode node="_datastring;PHP:Function Name;3211394257;f11;10304;2;10310;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _datastring($s, $n=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Format a data string for meta information&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$s&lt;/b&gt;: data string to escape.&#10;    int &lt;b&gt;$n&lt;/b&gt;: object ID&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   escaped string.;;d42,10304;;b2,0;;m0;;e0;;i0;;o;;k;;l $s;;p $n;;p;;x;;x;;n">
</treenode>
<treenode node="_datestring;PHP:Function Name;3211394257;f11;10366;2;10371;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _datestring($n=0, $timestamp=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a formatted date for meta information&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.6.028 (2009-08-25)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$n&lt;/b&gt;: Object ID.&#10;    int &lt;b&gt;$timestamp&lt;/b&gt;: Timestamp to convert.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   escaped date string.;;d52,10366;;b2,0;;m0;;e0;;i0;;o;;k;;l $n;;p $timestamp;;p;;x;;x;;n">
</treenode>
<treenode node="_destroy;PHP:Function Name;3211394257;f8;7850;2;7894;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _destroy($destroyall=false, $preserve_objcopy=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Unset all class variables except the following critical variables.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.016 (2009-02-24)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    boolean &lt;b&gt;$destroyall&lt;/b&gt;: if true destroys all class variables, otherwise preserves critical variables.&#10;    boolean &lt;b&gt;$preserve_objcopy&lt;/b&gt;: if true preserves the objcopy variable;;d70,7850;;b1,0;;m0;;e0;;i0;;o;;k;;l $destroyall;;p $preserve_objcopy;;p;;x;;x;;n">
</treenode>
<treenode node="_dochecks;PHP:Function Name;3211394257;f11;7900;2;7909;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _dochecks()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check for locale-related bug&#10;&lt;b&gt;protected&lt;/b&gt;;;d32,7900;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_dolinethrough;PHP:Function Name;3211394257;f11;10252;2;10255;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _dolinethrough($x, $y, $txt)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Line through text.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$x&lt;/b&gt;: X coordinate&#10;    int &lt;b&gt;$y&lt;/b&gt;: Y coordinate&#10;    string &lt;b&gt;$txt&lt;/b&gt;: text to linethrough;;d49,10252;;b2,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $txt;;p;;x;;x;;x;;n">
</treenode>
<treenode node="_dolinethroughw;PHP:Function Name;3211394257;f11;10265;2;10268;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _dolinethroughw($x, $y, $w)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Line through for rectangular text area.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.008 (2009-09-29)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$x&lt;/b&gt;: X coordinate&#10;    int &lt;b&gt;$y&lt;/b&gt;: Y coordinate&#10;    int &lt;b&gt;$w&lt;/b&gt;: line length (width);;d48,10265;;b2,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $w;;p;;x;;x;;x;;n">
</treenode>
<treenode node="_dooverline;PHP:Function Name;3211394257;f11;10278;2;10281;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _dooverline($x, $y, $txt)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Overline text.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.015 (2010-04-19)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$x&lt;/b&gt;: X coordinate&#10;    int &lt;b&gt;$y&lt;/b&gt;: Y coordinate&#10;    string &lt;b&gt;$txt&lt;/b&gt;: text to overline;;d46,10278;;b2,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $txt;;p;;x;;x;;x;;n">
</treenode>
<treenode node="_dooverlinew;PHP:Function Name;3211394257;f11;10291;2;10295;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _dooverlinew($x, $y, $w)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Overline for rectangular text area.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.015 (2010-04-19)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$x&lt;/b&gt;: X coordinate&#10;    int &lt;b&gt;$y&lt;/b&gt;: Y coordinate&#10;    int &lt;b&gt;$w&lt;/b&gt;: width to overline;;d45,10291;;b2,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $w;;p;;x;;x;;x;;n">
</treenode>
<treenode node="_dounderline;PHP:Function Name;3211394257;f11;10227;2;10230;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _dounderline($x, $y, $txt)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Underline text.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$x&lt;/b&gt;: X coordinate&#10;    int &lt;b&gt;$y&lt;/b&gt;: Y coordinate&#10;    string &lt;b&gt;$txt&lt;/b&gt;: text to underline;;d47,10227;;b2,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $txt;;p;;x;;x;;x;;n">
</treenode>
<treenode node="_dounderlinew;PHP:Function Name;3211394257;f11;10240;2;10243;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _dounderlinew($x, $y, $w)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Underline for rectangular text area.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.008 (2009-09-29)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$x&lt;/b&gt;: X coordinate&#10;    int &lt;b&gt;$y&lt;/b&gt;: Y coordinate&#10;    int &lt;b&gt;$w&lt;/b&gt;: width to underline;;d46,10240;;b2,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $w;;p;;x;;x;;x;;n">
</treenode>
<treenode node="_encrypt_data;PHP:Function Name;3211394257;f11;10602;2;10622;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _encrypt_data($n, $s)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Encrypt the input string.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.005 (2010-05-11)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$n&lt;/b&gt;: object number&#10;    string &lt;b&gt;$s&lt;/b&gt;: data string to encrypt&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   encrypted string;;d42,10602;;b2,0;;m0;;e0;;i0;;o;;k;;l $n;;p $s;;p;;x;;x;;n">
</treenode>
<treenode node="_enddoc;PHP:Function Name;3211394257;f11;10054;2;10136;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _enddoc()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output end of document (EOF).&#10;&lt;b&gt;protected&lt;/b&gt;;;d30,10054;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_endpage;PHP:Function Name;3211394257;f11;10188;2;10191;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _endpage()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Mark end of page.&#10;&lt;b&gt;protected&lt;/b&gt;;;d31,10188;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_fixAES256Password;PHP:Function Name;3211394257;f11;10846;2;10853;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _fixAES256Password($password)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert password for AES-256 encryption mode&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.006 (2010-10-19)&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$password&lt;/b&gt;: password&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   password;;d50,10846;;b2,0;;m0;;e0;;i0;;o;;k;;l $password;;p;;x;;n">
</treenode>
<treenode node="_generateencryptionkey;PHP:Function Name;3211394257;f11;10861;2;10963;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _generateencryptionkey()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Compute encryption key&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.0.000 (2008-01-02)&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni;;d45,10861;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_getannotsrefs;PHP:Function Name;3211394257;f11;8166;2;8200;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getannotsrefs($n)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get references to page annotations.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.010 (2010-05-17)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$n&lt;/b&gt;: page number;;d39,8166;;b2,0;;m0;;e0;;i0;;o;;k;;l $n;;p;;x;;n">
</treenode>
<treenode node="_getobj;PHP:Function Name;3211394257;f11;10210;2;10218;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getobj($objid=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the starting object string for the selected object ID.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.8.009 (2010-08-20)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|null &lt;b&gt;$objid&lt;/b&gt;: Object ID (leave empty to get a new ID).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the starting object string;;d41,10210;;b2,0;;m0;;e0;;i0;;o;;k;;l $objid;;p;;x;;n">
</treenode>
<treenode node="_getrawstream;PHP:Function Name;3211394257;f11;10396;2;10402;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getrawstream($s, $n=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    get raw output stream.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.5.000 (2010-06-22)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$s&lt;/b&gt;: string to output.&#10;    int &lt;b&gt;$n&lt;/b&gt;: object reference for encryption mode;;d44,10396;;b2,0;;m0;;e0;;i0;;o;;k;;l $s;;p $n;;p;;x;;x;;n">
</treenode>
<treenode node="_getxobjectdict;PHP:Function Name;3211394257;f11;9466;2;9472;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getxobjectdict()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return XObjects Dictionary.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.8.014 (2010-08-23)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   XObjects dictionary;;d38,9466;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_newobj;PHP:Function Name;3211394257;f11;10198;2;10201;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _newobj()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Begin a new object and return the object number.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   object number;;d30,10198;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_objectkey;PHP:Function Name;3211394257;f11;10582;2;10591;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _objectkey($n)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Compute encryption key depending on object number where the encrypted data is stored.&#10;This is used for all strings and streams without crypt filter specifier.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2.0.000 (2008-01-02)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$n&lt;/b&gt;: object number&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   object key;;d35,10582;;b2,0;;m0;;e0;;i0;;o;;k;;l $n;;p;;x;;n">
</treenode>
<treenode node="_out;PHP:Function Name;3211394257;f11;10409;2;10430;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _out($s)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output a string to the document.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$s&lt;/b&gt;: string to output.;;d29,10409;;b2,0;;m0;;e0;;i0;;o;;k;;l $s;;p;;x;;n">
</treenode>
<treenode node="_outCurve;PHP:Function Name;3211394257;f11;11572;2;11576;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _outCurve($x1, $y1, $x2, $y2, $x3, $y3)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Append a cubic Bezier curve to the current path. The curve shall extend from the current point to the point (x3, y3), using (x1, y1) and (x2, y2) as the Bezier control points.&#10;The new current point shall be (x3, y3).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-08)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x1&lt;/b&gt;: Abscissa of control point 1.&#10;    float &lt;b&gt;$y1&lt;/b&gt;: Ordinate of control point 1.&#10;    float &lt;b&gt;$x2&lt;/b&gt;: Abscissa of control point 2.&#10;    float &lt;b&gt;$y2&lt;/b&gt;: Ordinate of control point 2.&#10;    float &lt;b&gt;$x3&lt;/b&gt;: Abscissa of end point.&#10;    float &lt;b&gt;$y3&lt;/b&gt;: Ordinate of end point.;;d60,11572;;b2,0;;m0;;e0;;i0;;o;;k;;l $x1;;p $y1;;p $x2;;p $y2;;p $x3;;p $y3;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="_outCurveV;PHP:Function Name;3211394257;f11;11588;2;11592;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _outCurveV($x2, $y2, $x3, $y3)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Append a cubic Bezier curve to the current path. The curve shall extend from the current point to the point (x3, y3), using the current point and (x2, y2) as the Bezier control points.&#10;The new current point shall be (x3, y3).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.019 (2010-04-26)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x2&lt;/b&gt;: Abscissa of control point 2.&#10;    float &lt;b&gt;$y2&lt;/b&gt;: Ordinate of control point 2.&#10;    float &lt;b&gt;$x3&lt;/b&gt;: Abscissa of end point.&#10;    float &lt;b&gt;$y3&lt;/b&gt;: Ordinate of end point.;;d51,11588;;b2,0;;m0;;e0;;i0;;o;;k;;l $x2;;p $y2;;p $x3;;p $y3;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="_outCurveY;PHP:Function Name;3211394257;f11;11604;2;11608;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _outCurveY($x1, $y1, $x3, $y3)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Append a cubic Bezier curve to the current path. The curve shall extend from the current point to the point (x3, y3), using (x1, y1) and (x3, y3) as the Bezier control points.&#10;The new current point shall be (x3, y3).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-08)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x1&lt;/b&gt;: Abscissa of control point 1.&#10;    float &lt;b&gt;$y1&lt;/b&gt;: Ordinate of control point 1.&#10;    float &lt;b&gt;$x3&lt;/b&gt;: Abscissa of end point.&#10;    float &lt;b&gt;$y3&lt;/b&gt;: Ordinate of end point.;;d51,11604;;b2,0;;m0;;e0;;i0;;o;;k;;l $x1;;p $y1;;p $x3;;p $y3;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="_outLine;PHP:Function Name;3211394257;f11;11538;2;11542;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _outLine($x, $y)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Append a straight line segment from the current point to the point (x, y).&#10;The new current point shall be (x, y).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-08)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: Abscissa of end point.&#10;    float &lt;b&gt;$y&lt;/b&gt;: Ordinate of end point.;;d37,11538;;b2,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p;;x;;x;;n">
</treenode>
<treenode node="_outPoint;PHP:Function Name;3211394257;f11;11524;2;11528;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _outPoint($x, $y)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Begin a new subpath by moving the current point to coordinates (x, y), omitting any connecting line segment.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-08)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: Abscissa of point.&#10;    float &lt;b&gt;$y&lt;/b&gt;: Ordinate of point.;;d38,11524;;b2,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p;;x;;x;;n">
</treenode>
<treenode node="_outRect;PHP:Function Name;3211394257;f11;11554;2;11558;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _outRect($x, $y, $w, $h, $op)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Append a rectangle to the current path as a complete subpath, with lower-left corner (x, y) and dimensions widthand height in user space.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-08)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: Abscissa of upper-left corner.&#10;    float &lt;b&gt;$y&lt;/b&gt;: Ordinate of upper-left corner.&#10;    float &lt;b&gt;$w&lt;/b&gt;: Width.&#10;    float &lt;b&gt;$h&lt;/b&gt;: Height.&#10;    string &lt;b&gt;$op&lt;/b&gt;: options;;d50,11554;;b2,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $w;;p $h;;p $op;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="_outRestoreGraphicsState;PHP:Function Name;3211394257;f11;20924;2;20926;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _outRestoreGraphicsState()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Outputs the &quot;restore graphics state&quot; operator &apos;Q&apos;&#10;&lt;b&gt;protected&lt;/b&gt;;;d47,20924;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_outSaveGraphicsState;PHP:Function Name;3211394257;f11;20916;2;20918;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _outSaveGraphicsState()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Outputs the &quot;save graphics state&quot; operator &apos;q&apos;&#10;&lt;b&gt;protected&lt;/b&gt;;;d44,20916;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_outellipticalarc;PHP:Function Name;3211394257;f11;11833;2;11947;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _outellipticalarc($xc, $yc, $rx, $ry, $xang=0, $angs=0, $angf=360, $pie=false, $nc=2, $startpoint=true, $ccw=true, $svg=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Append an elliptical arc to the current path.&#10;An ellipse is formed from n Bezier curves.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.019 (2010-04-26)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$xc&lt;/b&gt;: Abscissa of center point.&#10;    float &lt;b&gt;$yc&lt;/b&gt;: Ordinate of center point.&#10;    float &lt;b&gt;$rx&lt;/b&gt;: Horizontal radius.&#10;    float &lt;b&gt;$ry&lt;/b&gt;: Vertical radius (if ry = 0 then is a circle, see Circle()). Default value: 0.&#10;    float &lt;b&gt;$xang&lt;/b&gt;: Angle between the X-axis and the major axis of the ellipse. Default value: 0.&#10;    float &lt;b&gt;$angs&lt;/b&gt;: Angle start of draw line. Default value: 0.&#10;    float &lt;b&gt;$angf&lt;/b&gt;: Angle finish of draw line. Default value: 360.&#10;    boolean &lt;b&gt;$pie&lt;/b&gt;: if true do not mark the border point (used to draw pie sectors).&#10;    integer &lt;b&gt;$nc&lt;/b&gt;: Number of curves used to draw a 90 degrees portion of ellipse.&#10;    boolean &lt;b&gt;$startpoint&lt;/b&gt;: if true output a starting point.&#10;    boolean &lt;b&gt;$ccw&lt;/b&gt;: if true draws in counter-clockwise.&#10;    boolean &lt;b&gt;$svg&lt;/b&gt;: if true the angles are in svg mode (already calculated).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   bounding box coordinates (x min, y min, x max, y max);;d147,11833;;b2,0;;m0;;e0;;i0;;o;;k;;l $xc;;p $yc;;p $rx;;p $ry;;p $xang;;p $angs;;p $angf;;p $pie;;p $nc;;p $startpoint;;p $ccw;;p $svg;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="_putAPXObject;PHP:Function Name;3211394257;f11;8860;2;8883;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putAPXObject($w=0, $h=0, $stream=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Put appearance streams XObject used to define annotation&apos;s appearance states.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.001 (2009-09-09)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$w&lt;/b&gt;: annotation width&#10;    int &lt;b&gt;$h&lt;/b&gt;: annotation height&#10;    string &lt;b&gt;$stream&lt;/b&gt;: appearance stream&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   object ID;;d58,8860;;b2,0;;m0;;e0;;i0;;o;;k;;l $w;;p $h;;p $stream;;p;;x;;x;;x;;n">
</treenode>
<treenode node="_putEmbeddedFiles;PHP:Function Name;3211394257;f11;4940;2;4981;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putEmbeddedFiles()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Embedd the attached files.&#10;&lt;b&gt;since&lt;/b&gt;: 4.4.000 (2008-12-07)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;see&lt;/b&gt;: Annotation();;d40,4940;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_putXMP;PHP:Function Name;3211394257;f11;9637;2;9779;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putXMP()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Put XMP data object and return ID.&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.121 (2011-09-28)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The object ID.;;d30,9637;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_putannotsobjs;PHP:Function Name;3211394257;f11;8210;2;8849;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putannotsobjs()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output annotations objects for all pages.&#10;!!! THIS METHOD IS NOT YET COMPLETED !!!&#10;See section 12.5 of PDF 32000_2008 reference.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.018 (2008-08-06);;d37,8210;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_putbookmarks;PHP:Function Name;3211394257;f11;12508;2;12623;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putbookmarks()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Create a bookmark PDF string.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Olivier Plathey, Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.002 (2008-02-12);;d36,12508;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_putcatalog;PHP:Function Name;3211394257;f11;9786;2;9964;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putcatalog()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output Catalog.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   object id;;d34,9786;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_putcidfont0;PHP:Function Name;3211394257;f11;9143;2;9207;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putcidfont0($font)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output CID-0 fonts.&#10;A Type 0 CIDFont contains glyph descriptions based on the Adobe Type 1 font format&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Andrew Whitehead, Nicola Asuni, Yukihiro Nakadaira&#10;&lt;b&gt;since&lt;/b&gt;: 3.2.000 (2008-06-23)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$font&lt;/b&gt;: font data;;d40,9143;;b2,0;;m0;;e0;;i0;;o;;k;;l $font;;p;;x;;n">
</treenode>
<treenode node="_putdests;PHP:Function Name;3211394257;f11;12399;2;12411;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putdests()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Insert Named Destinations.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Johannes G\FCntert, Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.098 (2011-06-23);;d32,12399;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_putencryption;PHP:Function Name;3211394257;f11;10630;2;10741;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putencryption()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Put encryption on PDF document.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2.0.000 (2008-01-02);;d37,10630;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_putextgstates;PHP:Function Name;3211394257;f11;13982;2;14000;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putextgstates()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Put extgstates for object transparency&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.000 (2008-03-27);;d37,13982;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_putfonts;PHP:Function Name;3211394257;f11;8890;2;9029;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putfonts()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output fonts.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;protected&lt;/b&gt;;;d32,8890;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_putheader;PHP:Function Name;3211394257;f11;10045;2;10048;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putheader()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output PDF File Header (7.5.2).&#10;&lt;b&gt;protected&lt;/b&gt;;;d33,10045;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_putimages;PHP:Function Name;3211394257;f11;9213;2;9334;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putimages()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output images.&#10;&lt;b&gt;protected&lt;/b&gt;;;d33,9213;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_putinfo;PHP:Function Name;3211394257;f11;9565;2;9607;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putinfo()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds some Metadata information (Document Information Dictionary)&#10;(see Chapter 14.3.3 Document Information Dictionary of PDF32000_2008.pdf Reference)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   object id;;d31,9565;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_putjavascript;PHP:Function Name;3211394257;f11;12663;2;12706;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putjavascript()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Create a javascript PDF string.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Johannes G\FCntert, Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.002 (2008-02-12);;d37,12663;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_putocg;PHP:Function Name;3211394257;f11;13838;2;13855;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putocg()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Put pdf layers.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.000 (2008-03-27);;d30,13838;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_putpages;PHP:Function Name;3211394257;f11;8004;2;8156;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putpages()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output pages (and replace page number aliases).&#10;&lt;b&gt;protected&lt;/b&gt;;;d32,8004;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_putresourcedict;PHP:Function Name;3211394257;f11;9478;2;9536;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putresourcedict()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output Resources Dictionary.&#10;&lt;b&gt;protected&lt;/b&gt;;;d39,9478;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_putresources;PHP:Function Name;3211394257;f11;9542;2;9557;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putresources()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output Resources.&#10;&lt;b&gt;protected&lt;/b&gt;;;d36,9542;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_putshaders;PHP:Function Name;3211394257;f1;14722;2;14897;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putshaders()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output gradient shaders.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 3.1.000 (2008-06-09)&#10;&lt;b&gt;protected&lt;/b&gt;;;d24,14722;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_putsignature;PHP:Function Name;3211394257;f11;13430;2;13499;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putsignature()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add certification signature (DocMDP or UR3)&#10;You can set only one signature type&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.6.008 (2009-05-07);;d36,13430;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_putspotcolors;PHP:Function Name;3211394257;f11;9446;2;9458;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putspotcolors()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output Spot Colors Resources.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.024 (2008-09-12);;d37,9446;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_puttruetypeunicode;PHP:Function Name;3211394257;f11;9039;2;9133;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _puttruetypeunicode($font)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds unicode fonts.&lt;br&gt;&#10;Based on PDF Reference 1.3 (section 5)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 1.52.0.TC005 (2005-01-05)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$font&lt;/b&gt;: font data;;d47,9039;;b2,0;;m0;;e0;;i0;;o;;k;;l $font;;p;;x;;n">
</treenode>
<treenode node="_putviewerpreferences;PHP:Function Name;3211394257;f11;9973;2;10039;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putviewerpreferences()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output viewer preferences.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola asuni&#10;&lt;b&gt;since&lt;/b&gt;: 3.1.000 (2008-06-09)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   for viewer preferences;;d44,9973;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_putxobjects;PHP:Function Name;3211394257;f11;9343;2;9439;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putxobjects()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output Form XObjects Templates.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.8.017 (2010-08-24)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;see&lt;/b&gt;: startTemplate(), endTemplate(), printTemplate();;d35,9343;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_textstring;PHP:Function Name;3211394257;f11;10380;2;10386;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _textstring($s, $n=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Format a text string for meta information&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$s&lt;/b&gt;: string to escape.&#10;    int &lt;b&gt;$n&lt;/b&gt;: object ID&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   escaped string.;;d42,10380;;b2,0;;m0;;e0;;i0;;o;;k;;l $s;;p $n;;p;;x;;x;;n">
</treenode>
<treenode node="addEmptySignatureAppearance;PHP:Function Name;3211394257;f8;13608;2;13611;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addEmptySignatureAppearance($x=0, $y=0, $w=0, $h=0, $page=-1, $name=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add an empty digital signature appearance (a cliccable rectangle area to get signature properties)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.101 (2011-07-06)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: Abscissa of the upper-left corner.&#10;    float &lt;b&gt;$y&lt;/b&gt;: Ordinate of the upper-left corner.&#10;    float &lt;b&gt;$w&lt;/b&gt;: Width of the signature area.&#10;    float &lt;b&gt;$h&lt;/b&gt;: Height of the signature area.&#10;    int &lt;b&gt;$page&lt;/b&gt;: option page number (if &lt; 0 the current page is used).&#10;    string &lt;b&gt;$name&lt;/b&gt;: Name of the signature.;;d89,13608;;b1,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $w;;p $h;;p $page;;p $name;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="addExtGState;PHP:Function Name;3211394257;f11;13938;2;13961;;;;vpos;;v;;aint|void;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addExtGState($parms)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add transparency parameters to the current extgstate&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.000 (2008-03-27)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$parms&lt;/b&gt;: parameters&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the number of extgstates;;d41,13938;;b2,0;;m0;;e0;;i0;;o;;k;;l $parms;;p;;x;;n">
</treenode>
<treenode node="addHTMLTOC;PHP:Function Name;3211394257;f8;21745;2;21871;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addHTMLTOC($page=null, $toc_name=&apos;TOC&apos;, $templates=array(), $correct_align=true, $style=&apos;&apos;, $color=array(0,0,0))&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output a Table Of Content Index (TOC) using HTML templates.&#10;This method must be called after all Bookmarks were set.&#10;Before calling this method you have to open the page using the addTOCPage() method.&#10;After calling this method you have to call endTOCPage() to close the TOC page.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.001 (2010-05-06)&#10;&lt;b&gt;see&lt;/b&gt;: addTOCPage(), endTOCPage(), addTOC()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|null &lt;b&gt;$page&lt;/b&gt;: page number where this TOC should be inserted (leave empty for current page).&#10;    string &lt;b&gt;$toc_name&lt;/b&gt;: name to use for TOC bookmark.&#10;    array &lt;b&gt;$templates&lt;/b&gt;: array of html templates. Use: &quot;#TOC_DESCRIPTION#&quot; for bookmark title, &quot;#TOC_PAGE_NUMBER#&quot; for page number.&#10;    boolean &lt;b&gt;$correct_align&lt;/b&gt;: if true correct the number alignment (numbers must be in monospaced font like courier and right aligned on LTR, or left aligned on RTL)&#10;    string &lt;b&gt;$style&lt;/b&gt;: Font style for title: B = Bold, I = Italic, BI = Bold + Italic.&#10;    array &lt;b&gt;$color&lt;/b&gt;: RGB color array for title (values from 0 to 255).;;d130,21745;;b1,0;;m0;;e0;;i0;;o;;k;;l $page;;p $toc_name;;p $templates;;p $correct_align;;p $style;;p $color;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="addHTMLVertSpace;PHP:Function Name;3211394257;f11;20152;2;20170;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addHTMLVertSpace($hbz=0, $hb=0, $cell=false, $firsttag=false, $lasttag=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add vertical spaces if needed.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$hbz&lt;/b&gt;: Distance between current y and line bottom.&#10;    string &lt;b&gt;$hb&lt;/b&gt;: The height of the break.&#10;    boolean &lt;b&gt;$cell&lt;/b&gt;: if true add the default left (or right if RTL) padding to each new line (default false).&#10;    boolean &lt;b&gt;$firsttag&lt;/b&gt;: set to true when the tag is the first.&#10;    boolean &lt;b&gt;$lasttag&lt;/b&gt;: set to true when the tag is the last.;;d98,20152;;b2,0;;m0;;e0;;i0;;o;;k;;l $hbz;;p $hb;;p $cell;;p $firsttag;;p $lasttag;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="addHtmlLink;PHP:Function Name;3211394257;f8;10514;2;10547;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addHtmlLink($url, $name, $fill=false, $firstline=false, $color=null, $style=-1, $firstblock=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output anchor link.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: link URL or internal link (i.e.: &amp;lt;sa href=&quot;#23,4.5&quot;&amp;gt;slink to page 23 at 4.5 Y position&amp;lt;s/a&amp;gt;s)&#10;    string &lt;b&gt;$name&lt;/b&gt;: link name&#10;    boolean &lt;b&gt;$fill&lt;/b&gt;: Indicates if the cell background must be painted (true) or transparent (false).&#10;    boolean &lt;b&gt;$firstline&lt;/b&gt;: if true prints only the first line and return the remaining string.&#10;    array|null &lt;b&gt;$color&lt;/b&gt;: array of RGB text color&#10;    string &lt;b&gt;$style&lt;/b&gt;: font style (U, D, B, I)&#10;    boolean &lt;b&gt;$firstblock&lt;/b&gt;: if true the string is the starting of a line.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the number of cells used or the remaining text if $firstline = true;s;;d116,10514;;b1,0;;m0;;e0;;i0;;o;;k;;l $url;;p $name;;p $fill;;p $firstline;;p $color;;p $style;;p $firstblock;;p;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="addJavascriptObject;PHP:Function Name;3211394257;f8;12647;2;12655;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addJavascriptObject($script, $onload=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds a javascript object and return object ID&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.000 (2009-09-07)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$script&lt;/b&gt;: Javascript code&#10;    boolean &lt;b&gt;$onload&lt;/b&gt;: if true executes this object when opening the document&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   internal object ID;;d61,12647;;b1,0;;m0;;e0;;i0;;o;;k;;l $script;;p $onload;;p;;x;;x;;n">
</treenode>
<treenode node="addPageRegion;PHP:Function Name;3211394257;f8;22801;2;22810;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addPageRegion($region)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add a single no-write region on selected page.&#10;A no-write region is a portion of the page with a rectangular or trapezium shape that will not be covered when writing text or html code.&#10;A region is always aligned on the left or right side of the page ad is defined using a vertical segment.&#10;You can set multiple regions for the same page.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.003 (2010-10-13)&#10;&lt;b&gt;see&lt;/b&gt;: setPageRegions(), getPageRegions()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$region&lt;/b&gt;: array of a single no-write region array: (&apos;page&apos; =&gt; page number or empy for current page, &apos;xt&apos; =&gt; X top, &apos;yt&apos; =&gt; Y top, &apos;xb&apos; =&gt; X bottom, &apos;yb&apos; =&gt; Y bottom, &apos;side&apos; =&gt; page side &apos;L&apos; = left or &apos;R&apos; = right).;;d40,22801;;b1,0;;m0;;e0;;i0;;o;;k;;l $region;;p;;x;;n">
</treenode>
<treenode node="addTOC;PHP:Function Name;3211394257;f8;21535;2;21727;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addTOC($page=null, $numbersfont=&apos;&apos;, $filler=&apos;.&apos;, $toc_name=&apos;TOC&apos;, $style=&apos;&apos;, $color=array(0,0,0))&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output a Table of Content Index (TOC).&#10;This method must be called after all Bookmarks were set.&#10;Before calling this method you have to open the page using the addTOCPage() method.&#10;After calling this method you have to call endTOCPage() to close the TOC page.&#10;You can override this method to achieve different styles.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.000 (2009-01-02)&#10;&lt;b&gt;see&lt;/b&gt;: addTOCPage(), endTOCPage(), addHTMLTOC()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|null &lt;b&gt;$page&lt;/b&gt;: page number where this TOC should be inserted (leave empty for current page).&#10;    string &lt;b&gt;$numbersfont&lt;/b&gt;: set the font for page numbers (please use monospaced font for better alignment).&#10;    string &lt;b&gt;$filler&lt;/b&gt;: string used to fill the space between text and page number.&#10;    string &lt;b&gt;$toc_name&lt;/b&gt;: name to use for TOC bookmark.&#10;    string &lt;b&gt;$style&lt;/b&gt;: Font style for title: B = Bold, I = Italic, BI = Bold + Italic.&#10;    array &lt;b&gt;$color&lt;/b&gt;: RGB color array for bookmark title (values from 0 to 255).;;d115,21535;;b1,0;;m0;;e0;;i0;;o;;k;;l $page;;p $numbersfont;;p $filler;;p $toc_name;;p $style;;p $color;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="addTOCPage;PHP:Function Name;3211394257;f8;3163;2;3165;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addTOCPage($orientation=&apos;&apos;, $format=&apos;&apos;, $keepmargins=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds a new TOC (Table Of Content) page to the document.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.001 (2010-05-06)&#10;&lt;b&gt;see&lt;/b&gt;: AddPage(), startPage(), endPage(), endTOCPage()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$orientation&lt;/b&gt;: page orientation.&#10;    mixed &lt;b&gt;$format&lt;/b&gt;: The format used for pages. It can be either: one of the string values specified at getPageSizeFromFormat() or an array of parameters specified at setPageFormat().&#10;    boolean &lt;b&gt;$keepmargins&lt;/b&gt;: if true overwrites the default page margins with the current margins;;d77,3163;;b1,0;;m0;;e0;;i0;;o;;k;;l $orientation;;p $format;;p $keepmargins;;p;;x;;x;;x;;n">
</treenode>
<treenode node="adjustCellPadding;PHP:Function Name;3211394257;f11;2758;2;2850;;;;vpos;;v;;avoid|array;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    adjustCellPadding($brd=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adjust the internal Cell padding array to take account of the line width.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.000 (2010-10-03)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|array|int|bool &lt;b&gt;$brd&lt;/b&gt;: Indicates if borders must be drawn around the cell. The value can be a number:&lt;ul&gt;&lt;li&gt;0: no border (default)&lt;/li&gt;&lt;li&gt;1: frame&lt;/li&gt;&lt;/ul&gt; or a string containing some or all of the following characters (in any order):&lt;ul&gt;&lt;li&gt;L: left&lt;/li&gt;&lt;li&gt;T: top&lt;/li&gt;&lt;li&gt;R: right&lt;/li&gt;&lt;li&gt;B: bottom&lt;/li&gt;&lt;/ul&gt; or an array of line styles for each border group - for example: array(&apos;LTRB&apos; =&gt; array(&apos;width&apos; =&gt; 2, &apos;cap&apos; =&gt; &apos;butt&apos;, &apos;join&apos; =&gt; &apos;miter&apos;, &apos;dash&apos; =&gt; 0, &apos;color&apos; =&gt; array(0, 0, 0)))&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   array of adjustments;;d46,2758;;b2,0;;m0;;e0;;i0;;o;;k;;l $brd;;p;;x;;n">
</treenode>
<treenode node="allowedTCPDFtag;PHP:Function Name;3211394257;f11;17274;2;17279;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    allowedTCPDFtag($method)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if a TCPDF tag is allowed&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$method&lt;/b&gt;: TCPDF method name;;d45,17274;;b2,0;;m0;;e0;;i0;;o;;k;;l $method;;p;;x;;n">
</treenode>
<treenode node="applyTSA;PHP:Function Name;3211394257;f11;13686;2;13692;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyTSA($signature)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    NOT YET IMPLEMENTED&#10;Request TSA for a timestamp&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Richard Stockinger&#10;&lt;b&gt;since&lt;/b&gt;: 6.0.090 (2014-06-16)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$signature&lt;/b&gt;: Digital signature as binary string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Timestamped digital signature;;d41,13686;;b2,0;;m0;;e0;;i0;;o;;k;;l $signature;;p;;x;;n">
</treenode>
<treenode node="checkPageBreak;PHP:Function Name;3211394257;f11;5053;2;5086;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    checkPageBreak($h=0, $y=null, $addpage=true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add page if needed.&#10;&lt;b&gt;since&lt;/b&gt;: 3.2.000 (2008-07-01)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$h&lt;/b&gt;: Cell height. Default value: 0.&#10;    float|null &lt;b&gt;$y&lt;/b&gt;: starting y position, leave empty for current position.&#10;    bool &lt;b&gt;$addpage&lt;/b&gt;: if true add a page, otherwise only return the true/false state&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true in case of page break, false otherwise.;;d65,5053;;b2,0;;m0;;e0;;i0;;o;;k;;l $h;;p $y;;p $addpage;;p;;x;;x;;x;;n">
</treenode>
<treenode node="checkPageRegions;PHP:Function Name;3211394257;f11;22838;2;22920;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    checkPageRegions($h, $x, $y)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check page for no-write regions and adapt current coordinates and page margins if necessary.&#10;A no-write region is a portion of the page with a rectangular or trapezium shape that will not be covered when writing text or html code.&#10;A region is always aligned on the left or right side of the page ad is defined using a vertical segment.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.003 (2010-10-13)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$h&lt;/b&gt;: height of the text/image/object to print in user units&#10;    float &lt;b&gt;$x&lt;/b&gt;: current X coordinate in user units&#10;    float &lt;b&gt;$y&lt;/b&gt;: current Y coordinate in user units&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [] array($x, $y);;d49,22838;;b2,0;;m0;;e0;;i0;;o;;k;;l $h;;p $x;;p $y;;p;;x;;x;;x;;n">
</treenode>
<treenode node="closeHTMLTagHandler;PHP:Function Name;3211394257;f11;19605;2;20141;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    closeHTMLTagHandler($dom, $key, $cell, $maxbottomliney=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Process closing tags.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$dom&lt;/b&gt;: html dom array&#10;    int &lt;b&gt;$key&lt;/b&gt;: current element id&#10;    boolean &lt;b&gt;$cell&lt;/b&gt;: if true add the default left (or right if RTL) padding to each new line (default false).&#10;    int &lt;b&gt;$maxbottomliney&lt;/b&gt;: maximum y value of current line&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   $dom;;d78,19605;;b2,0;;m0;;e0;;i0;;o;;k;;l $dom;;p $key;;p $cell;;p $maxbottomliney;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="colorRegistrationBar;PHP:Function Name;3211394257;f8;14173;2;14299;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    colorRegistrationBar($x, $y, $w, $h, $transition=true, $vertical=false, $colors=&apos;A,R,G,B,C,M,Y,K&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Paints color transition registration bars&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.000 (2010-03-26)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: abscissa of the top left corner of the rectangle.&#10;    float &lt;b&gt;$y&lt;/b&gt;: ordinate of the top left corner of the rectangle.&#10;    float &lt;b&gt;$w&lt;/b&gt;: width of the rectangle.&#10;    float &lt;b&gt;$h&lt;/b&gt;: height of the rectangle.&#10;    boolean &lt;b&gt;$transition&lt;/b&gt;: if true prints tcolor transitions to white.&#10;    boolean &lt;b&gt;$vertical&lt;/b&gt;: if true prints bar vertically.&#10;    string &lt;b&gt;$colors&lt;/b&gt;: colors to print separated by comma. Valid values are: A,W,R,G,B,C,M,Y,K,RGB,CMYK,ALL,ALLSPOT,&lt;SPOT_COLOR_NAME&gt;. Where: A = grayscale black, W = grayscale white, R = RGB red, G RGB green, B RGB blue, C = CMYK cyan, M = CMYK magenta, Y = CMYK yellow, K = CMYK key/black, RGB = RGB registration color, CMYK = CMYK registration color, ALL = Spot registration color, ALLSPOT = print all defined spot colors, &lt;SPOT_COLOR_NAME&gt; = name of the spot color to print.;;d116,14173;;b1,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $w;;p $h;;p $transition;;p $vertical;;p $colors;;p;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="commitTransaction;PHP:Function Name;3211394257;f8;21895;2;21902;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    commitTransaction()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Delete the copy of the current TCPDF object used for undo operation.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.029 (2009-03-19);;d37,21895;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="convertSVGtMatrix;PHP:Function Name;3211394257;f11;23264;2;23276;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    convertSVGtMatrix($tm)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert SVG transformation matrix to PDF.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-05-02)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$tm&lt;/b&gt;: original SVG transformation matrix&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   transformation matrix;;d43,23264;;b2,0;;m0;;e0;;i0;;o;;k;;l $tm;;p;;x;;n">
</treenode>
<treenode node="copyPage;PHP:Function Name;3211394257;f8;21458;2;21516;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    copyPage($page=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Clone the specified page to a new page.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.015 (2010-04-20)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$page&lt;/b&gt;: number of page to copy (0 = current page)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true in case of success, false in case of error.;;d35,21458;;b1,0;;m0;;e0;;i0;;o;;k;;l $page;;p;;x;;n">
</treenode>
<treenode node="cropMark;PHP:Function Name;3211394257;f8;14313;2;14370;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    cropMark($x, $y, $w, $h, $type=&apos;T,R,B,L&apos;, $color=array(100,100,100,100,&apos;All&apos;))&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Paints crop marks.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.000 (2010-03-26)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: abscissa of the crop mark center.&#10;    float &lt;b&gt;$y&lt;/b&gt;: ordinate of the crop mark center.&#10;    float &lt;b&gt;$w&lt;/b&gt;: width of the crop mark.&#10;    float &lt;b&gt;$h&lt;/b&gt;: height of the crop mark.&#10;    string &lt;b&gt;$type&lt;/b&gt;: type of crop mark, one symbol per type separated by comma: T = TOP, F = BOTTOM, L = LEFT, R = RIGHT, TL = A = TOP-LEFT, TR = B = TOP-RIGHT, BL = C = BOTTOM-LEFT, BR = D = BOTTOM-RIGHT.&#10;    array &lt;b&gt;$color&lt;/b&gt;: crop mark color (default spot registration color).;;d96,14313;;b1,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $w;;p $h;;p $type;;p $color;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="deletePage;PHP:Function Name;3211394257;f8;21268;2;21449;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    deletePage($page)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Remove the specified page.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.6.004 (2009-04-23)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$page&lt;/b&gt;: page to remove&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true in case of success, false in case of error.;;d35,21268;;b1,0;;m0;;e0;;i0;;o;;k;;l $page;;p;;x;;n">
</treenode>
<treenode node="drawHTMLTagBorder;PHP:Function Name;3211394257;f11;20194;2;20388;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    drawHTMLTagBorder($tag, $xmax)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Draw an HTML block border and fill&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.7.000 (2010-08-03)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$tag&lt;/b&gt;: array of tag properties.&#10;    int &lt;b&gt;$xmax&lt;/b&gt;: end X coordinate for border.;;d51,20194;;b2,0;;m0;;e0;;i0;;o;;k;;l $tag;;p $xmax;;p;;x;;x;;n">
</treenode>
<treenode node="endLayer;PHP:Function Name;3211394257;f8;13886;2;13895;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    endLayer()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    End the current PDF layer.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.102 (2011-07-13);;d28,13886;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="endPage;PHP:Function Name;3211394257;f8;3212;2;3226;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    endPage($tocpage=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Terminate the current page&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.2.010 (2008-11-14)&#10;&lt;b&gt;see&lt;/b&gt;: AddPage(), startPage(), addTOCPage(), endTOCPage()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    boolean &lt;b&gt;$tocpage&lt;/b&gt;: if true set the tocpage state to false (end the page used to display Table Of Content).;;d41,3212;;b1,0;;m0;;e0;;i0;;o;;k;;l $tocpage;;p;;x;;n">
</treenode>
<treenode node="endSVGElementHandler;PHP:Function Name;3211394257;f11;24653;2;24750;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    endSVGElementHandler($parser, $name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the closing SVG element handler function for the XML parser.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-05-02)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    resource|string &lt;b&gt;$parser&lt;/b&gt;: The first parameter, parser, is a reference to the XML parser calling the handler.&#10;    string &lt;b&gt;$name&lt;/b&gt;: The second parameter, name, contains the name of the element for which this handler is called. If case-folding is in effect for this parser, the element name will be in uppercase letters.;;d57,24653;;b2,0;;m0;;e0;;i0;;o;;k;;l $parser;;p $name;;p;;x;;x;;n">
</treenode>
<treenode node="endTOCPage;PHP:Function Name;3211394257;f8;3173;2;3175;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    endTOCPage()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Terminate the current TOC (Table Of Content) page&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.001 (2010-05-06)&#10;&lt;b&gt;see&lt;/b&gt;: AddPage(), startPage(), endPage(), addTOCPage();;d30,3173;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="endTemplate;PHP:Function Name;3211394257;f8;22559;2;22568;;;;vpos;;v;;astring|false;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    endTemplate()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    End the current XObject Template started with startTemplate() and restore the previous graphic state.&#10;An XObject Template is a PDF block that is a self-contained description of any sequence of graphics objects (including path objects, text objects, and sampled images).&#10;An XObject Template may be painted multiple times, either on several pages or at several locations on the same page and produces the same results each time, subject only to the graphics state at the time it is invoked.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.8.017 (2010-08-24)&#10;&lt;b&gt;see&lt;/b&gt;: startTemplate(), printTemplate()&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the XObject Template ID in case of success or false in case of error.;;d31,22559;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="fileExists;PHP:Function Name;3211394257;f14;24784;5;24791;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fileExists($file)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Avoid multiple calls to an external server to see if a file exists&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$file&lt;/b&gt;;;d4,24785;;b2,0;;m0;;e0;;i0;;o;;k;;l $file;;p;;x;;n">
</treenode>
<treenode node="fitBlock;PHP:Function Name;3211394257;f11;6841;2;6902;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fitBlock($w, $h, $x, $y, $fitonpage=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the block dimensions accounting for page breaks and page/column fitting&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.5.009 (2010-07-05)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$w&lt;/b&gt;: width&#10;    float &lt;b&gt;$h&lt;/b&gt;: height&#10;    float &lt;b&gt;$x&lt;/b&gt;: X coordinate&#10;    float &lt;b&gt;$y&lt;/b&gt;: Y coodiante&#10;    boolean &lt;b&gt;$fitonpage&lt;/b&gt;: if true the block is resized to not exceed page dimensions.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   array($w, $h, $x, $y);;d63,6841;;b2,0;;m0;;e0;;i0;;o;;k;;l $w;;p $h;;p $x;;p $y;;p $fitonpage;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="fixHTMLCode;PHP:Function Name;3211394257;f8;15974;2;15976;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixHTMLCode($html, $default_css=&apos;&apos;, $tagvs=null, $tidy_options=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Cleanup HTML code (requires HTML Tidy library).&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.017 (2010-11-16)&#10;&lt;b&gt;see&lt;/b&gt;: setHtmlVSpace()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$html&lt;/b&gt;: htmlcode to fix&#10;    string &lt;b&gt;$default_css&lt;/b&gt;: CSS commands to add&#10;    array|null &lt;b&gt;$tagvs&lt;/b&gt;: parameters for setHtmlVSpace method&#10;    array|null &lt;b&gt;$tidy_options&lt;/b&gt;: options for tidy_parse_string function&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   XHTML code cleaned up;;d86,15974;;b1,0;;m0;;e0;;i0;;o;;k;;l $html;;p $default_css;;p $tagvs;;p $tidy_options;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="getAbsFontMeasure;PHP:Function Name;3211394257;f8;4639;2;4641;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAbsFontMeasure($s)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert a relative font measure into absolute value.&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.186 (2012-09-13)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$s&lt;/b&gt;: Font measure.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Absolute measure.;;d39,4639;;b1,0;;m0;;e0;;i0;;o;;k;;l $s;;p;;x;;n">
</treenode>
<treenode node="getAliasNbPages;PHP:Function Name;3211394257;f8;13751;2;13756;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAliasNbPages()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the string alias used for the total number of pages.&#10;If the current font is unicode type, the returned string is surrounded by additional curly braces.&#10;This alias will be replaced by the total number of pages in the document.&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.018 (2008-08-08)&#10;&lt;b&gt;public&lt;/b&gt;;;d35,13751;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAliasNumPage;PHP:Function Name;3211394257;f8;13766;2;13771;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAliasNumPage()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the string alias used for the page number.&#10;If the current font is unicode type, the returned string is surrounded by additional curly braces.&#10;This alias will be replaced by the page number.&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.000 (2009-01-02)&#10;&lt;b&gt;public&lt;/b&gt;;;d35,13766;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAliasRightShift;PHP:Function Name;3211394257;f8;13725;2;13741;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAliasRightShift()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the string alias used right align page numbers.&#10;If the current font is unicode type, the returned string wil contain an additional open curly brace.&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.099 (2011-06-27)&#10;&lt;b&gt;public&lt;/b&gt;;;d38,13725;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAllInternalPageNumberAliases;PHP:Function Name;3211394257;f11;7938;2;7945;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAllInternalPageNumberAliases()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return an array containing all internal page aliases.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of page number aliases;;d54,7938;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAllSpotColors;PHP:Function Name;3211394257;f8;3785;2;3787;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAllSpotColors()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the array of spot colors.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 6.0.038 (2013-09-30)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Spot colors array.;;d36,3785;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAlpha;PHP:Function Name;3211394257;f8;14082;2;14084;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAlpha()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the alpha mode array (CA, ca, BM, AIS).&#10;(Check the &quot;Entries in a Graphics State Parameter Dictionary&quot; on PDF 32000-1:2008).&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.152 (2012-03-23)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &lt;string,bool|string&gt;;;d28,14082;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAutoPageBreak;PHP:Function Name;3211394257;f8;2872;2;2874;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAutoPageBreak()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the auto-page-break mode (true or false).&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.088&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   auto-page-break mode;;d36,2872;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getBarcode;PHP:Function Name;3211394257;f8;15306;2;15308;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBarcode()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get current barcode.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.012 (2008-07-24);;d30,15306;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getBorderStartPosition;PHP:Function Name;3211394257;f11;20178;2;20185;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBorderStartPosition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the starting coordinates to draw an html border&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.7.000 (2010-08-03)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing top-left border coordinates;;d45,20178;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getBreakMargin;PHP:Function Name;3211394257;f8;2576;2;2581;;;;vpos;;v;;aint|float;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBreakMargin($pagenum=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the page break margin.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.5.2&#10;&lt;b&gt;see&lt;/b&gt;: getPageDimensions()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|null &lt;b&gt;$pagenum&lt;/b&gt;: page number (empty = current page)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   page break margin.;;d47,2576;;b1,0;;m0;;e0;;i0;;o;;k;;l $pagenum;;p;;x;;n">
</treenode>
<treenode node="getBuffer;PHP:Function Name;3211394257;f11;20956;2;20958;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBuffer()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get buffer content.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.000 (2009-01-02)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   buffer content;;d32,20956;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getCSSBorderDashStyle;PHP:Function Name;3211394257;f11;16005;2;16032;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCSSBorderDashStyle($style)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the border dash style from CSS property&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.7.000 (2010-08-02)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$style&lt;/b&gt;: border style to convert&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   sash style (return -1 in case of none or hidden border);;d50,16005;;b2,0;;m0;;e0;;i0;;o;;k;;l $style;;p;;x;;n">
</treenode>
<treenode node="getCSSBorderMargin;PHP:Function Name;3211394257;f8;16206;2;16230;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCSSBorderMargin($cssbspace, $width=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the border-spacing from CSS attribute.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.010 (2010-10-27)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$cssbspace&lt;/b&gt;: border-spacing CSS properties&#10;    float &lt;b&gt;$width&lt;/b&gt;: width of the containing element&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of border spacings;;d58,16206;;b1,0;;m0;;e0;;i0;;o;;k;;l $cssbspace;;p $width;;p;;x;;x;;n">
</treenode>
<treenode node="getCSSBorderStyle;PHP:Function Name;3211394257;f11;16041;2;16088;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCSSBorderStyle($cssborder)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the border style array from CSS border properties&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.7.000 (2010-08-02)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$cssborder&lt;/b&gt;: border properties&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing border properties;;d50,16041;;b2,0;;m0;;e0;;i0;;o;;k;;l $cssborder;;p;;x;;n">
</treenode>
<treenode node="getCSSBorderWidth;PHP:Function Name;3211394257;f11;15985;2;15996;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCSSBorderWidth($width)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the border width from CSS property&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.7.000 (2010-08-02)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$width&lt;/b&gt;: border width&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   with in user units;;d46,15985;;b2,0;;m0;;e0;;i0;;o;;k;;l $width;;p;;x;;n">
</treenode>
<treenode node="getCSSFontSpacing;PHP:Function Name;3211394257;f11;16240;2;16261;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCSSFontSpacing($spacing, $parent=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the letter-spacing value from CSS value&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.000 (2010-10-02)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$spacing&lt;/b&gt;: letter-spacing value&#10;    float &lt;b&gt;$parent&lt;/b&gt;: font spacing (tracking) value of the parent element&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   quantity to increases or decreases the space between characters in a text.;;d59,16240;;b2,0;;m0;;e0;;i0;;o;;k;;l $spacing;;p $parent;;p;;x;;x;;n">
</treenode>
<treenode node="getCSSFontStretching;PHP:Function Name;3211394257;f11;16271;2;16332;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCSSFontStretching($stretch, $parent=100)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the percentage of font stretching from CSS value&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.000 (2010-10-02)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$stretch&lt;/b&gt;: stretch mode&#10;    float &lt;b&gt;$parent&lt;/b&gt;: stretch value of the parent element&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   font stretching percentage;;d64,16271;;b2,0;;m0;;e0;;i0;;o;;k;;l $stretch;;p $parent;;p;;x;;x;;n">
</treenode>
<treenode node="getCSSMargin;PHP:Function Name;3211394257;f8;16152;2;16196;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCSSMargin($cssmargin, $width=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the internal Cell margin from CSS attribute.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.000 (2010-10-04)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$cssmargin&lt;/b&gt;: margin properties&#10;    float &lt;b&gt;$width&lt;/b&gt;: width of the containing element&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of cell margins;;d52,16152;;b1,0;;m0;;e0;;i0;;o;;k;;l $cssmargin;;p $width;;p;;x;;x;;n">
</treenode>
<treenode node="getCSSPadding;PHP:Function Name;3211394257;f8;16098;2;16142;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCSSPadding($csspadding, $width=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the internal Cell padding from CSS attribute.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.000 (2010-10-04)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$csspadding&lt;/b&gt;: padding properties&#10;    float &lt;b&gt;$width&lt;/b&gt;: width of the containing element&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of cell paddings;;d54,16098;;b1,0;;m0;;e0;;i0;;o;;k;;l $csspadding;;p $width;;p;;x;;x;;n">
</treenode>
<treenode node="getCachedFileContents;PHP:Function Name;3211394257;f14;24771;5;24777;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCachedFileContents($file)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Keeps files in memory, so it doesn&apos;t need to downloaded everytime in a loop&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$file&lt;/b&gt;;;d4,24772;;b2,0;;m0;;e0;;i0;;o;;k;;l $file;;p;;x;;n">
</treenode>
<treenode node="getCellBorder;PHP:Function Name;3211394257;f11;5668;2;5844;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCellBorder($x, $y, $w, $h, $brd)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the code to draw the cell border&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;see&lt;/b&gt;: SetLineStyle()&#10;&lt;b&gt;since&lt;/b&gt;: 5.7.000 (2010-08-02)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: X coordinate.&#10;    float &lt;b&gt;$y&lt;/b&gt;: Y coordinate.&#10;    float &lt;b&gt;$w&lt;/b&gt;: Cell width.&#10;    float &lt;b&gt;$h&lt;/b&gt;: Cell height.&#10;    string|array|int &lt;b&gt;$brd&lt;/b&gt;: Indicates if borders must be drawn around the cell. The value can be a number:&lt;ul&gt;&lt;li&gt;0: no border (default)&lt;/li&gt;&lt;li&gt;1: frame&lt;/li&gt;&lt;/ul&gt; or a string containing some or all of the following characters (in any order):&lt;ul&gt;&lt;li&gt;L: left&lt;/li&gt;&lt;li&gt;T: top&lt;/li&gt;&lt;li&gt;R: right&lt;/li&gt;&lt;li&gt;B: bottom&lt;/li&gt;&lt;/ul&gt; or an array of line styles for each border group - for example: array(&apos;LTRB&apos; =&gt; array(&apos;width&apos; =&gt; 2, &apos;cap&apos; =&gt; &apos;butt&apos;, &apos;join&apos; =&gt; &apos;miter&apos;, &apos;dash&apos; =&gt; 0, &apos;color&apos; =&gt; array(0, 0, 0)))&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing cell border code;;d56,5668;;b2,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $w;;p $h;;p $brd;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="getCellCode;PHP:Function Name;3211394257;f11;5176;2;5635;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCellCode($w, $h=0, $txt=&apos;&apos;, $border=0, $ln=0, $align=&apos;&apos;, $fill=false, $link=&apos;&apos;, $stretch=0, $ignore_min_height=false, $calign=&apos;T&apos;, $valign=&apos;M&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the PDF string code to print a cell (rectangular area) with optional borders, background color and character string. The upper-left corner of the cell corresponds to the current position. The text can be aligned or centered. After the call, the current position moves to the right or to the next line. It is possible to put a link on the text.&lt;br /&gt;&#10;If automatic page breaking is enabled and the cell goes beyond the limit, a page break is done before outputting.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0&#10;&lt;b&gt;see&lt;/b&gt;: Cell()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$w&lt;/b&gt;: Cell width. If 0, the cell extends up to the right margin.&#10;    float &lt;b&gt;$h&lt;/b&gt;: Cell height. Default value: 0.&#10;    string &lt;b&gt;$txt&lt;/b&gt;: String to print. Default value: empty string.&#10;    mixed &lt;b&gt;$border&lt;/b&gt;: Indicates if borders must be drawn around the cell. The value can be a number:&lt;ul&gt;&lt;li&gt;0: no border (default)&lt;/li&gt;&lt;li&gt;1: frame&lt;/li&gt;&lt;/ul&gt; or a string containing some or all of the following characters (in any order):&lt;ul&gt;&lt;li&gt;L: left&lt;/li&gt;&lt;li&gt;T: top&lt;/li&gt;&lt;li&gt;R: right&lt;/li&gt;&lt;li&gt;B: bottom&lt;/li&gt;&lt;/ul&gt; or an array of line styles for each border group - for example: array(&apos;LTRB&apos; =&gt; array(&apos;width&apos; =&gt; 2, &apos;cap&apos; =&gt; &apos;butt&apos;, &apos;join&apos; =&gt; &apos;miter&apos;, &apos;dash&apos; =&gt; 0, &apos;color&apos; =&gt; array(0, 0, 0)))&#10;    int &lt;b&gt;$ln&lt;/b&gt;: Indicates where the current position should go after the call. Possible values are:&lt;ul&gt;&lt;li&gt;0: to the right (or left for RTL languages)&lt;/li&gt;&lt;li&gt;1: to the beginning of the next line&lt;/li&gt;&lt;li&gt;2: below&lt;/li&gt;&lt;/ul&gt;Putting 1 is equivalent to putting 0 and calling Ln() just after. Default value: 0.&#10;    string &lt;b&gt;$align&lt;/b&gt;: Allows to center or align the text. Possible values are:&lt;ul&gt;&lt;li&gt;L or empty string: left align (default value)&lt;/li&gt;&lt;li&gt;C: center&lt;/li&gt;&lt;li&gt;R: right align&lt;/li&gt;&lt;li&gt;J: justify&lt;/li&gt;&lt;/ul&gt;&#10;    boolean &lt;b&gt;$fill&lt;/b&gt;: Indicates if the cell background must be painted (true) or transparent (false).&#10;    mixed &lt;b&gt;$link&lt;/b&gt;: URL or identifier returned by AddLink().&#10;    int &lt;b&gt;$stretch&lt;/b&gt;: font stretch mode: &lt;ul&gt;&lt;li&gt;0 = disabled&lt;/li&gt;&lt;li&gt;1 = horizontal scaling only if text is larger than cell width&lt;/li&gt;&lt;li&gt;2 = forced horizontal scaling to fit cell width&lt;/li&gt;&lt;li&gt;3 = character spacing only if text is larger than cell width&lt;/li&gt;&lt;li&gt;4 = forced character spacing to fit cell width&lt;/li&gt;&lt;/ul&gt; General font stretching and scaling values will be preserved when possible.&#10;    boolean &lt;b&gt;$ignore_min_height&lt;/b&gt;: if true ignore automatic minimum height value.&#10;    string &lt;b&gt;$calign&lt;/b&gt;: cell vertical alignment relative to the specified Y value. Possible values are:&lt;ul&gt;&lt;li&gt;T : cell top&lt;/li&gt;&lt;li&gt;C : center&lt;/li&gt;&lt;li&gt;B : cell bottom&lt;/li&gt;&lt;li&gt;A : font top&lt;/li&gt;&lt;li&gt;L : font baseline&lt;/li&gt;&lt;li&gt;D : font bottom&lt;/li&gt;&lt;/ul&gt;&#10;    string &lt;b&gt;$valign&lt;/b&gt;: text vertical alignment inside the cell. Possible values are:&lt;ul&gt;&lt;li&gt;T : top&lt;/li&gt;&lt;li&gt;M : middle&lt;/li&gt;&lt;li&gt;B : bottom&lt;/li&gt;&lt;/ul&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing cell code;;d167,5176;;b2,0;;m0;;e0;;i0;;o;;k;;l $w;;p $h;;p $txt;;p $border;;p $ln;;p $align;;p $fill;;p $link;;p $stretch;;p $ignore_min_height;;p $calign;;p $valign;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="getCellHeight;PHP:Function Name;3211394257;f8;2470;2;2476;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCellHeight($fontsize, $padding=TRUE)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the cell height&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$fontsize&lt;/b&gt;: Font size in internal units&#10;    boolean &lt;b&gt;$padding&lt;/b&gt;: If true add cell padding;;d57,2470;;b1,0;;m0;;e0;;i0;;o;;k;;l $fontsize;;p $padding;;p;;x;;x;;n">
</treenode>
<treenode node="getCellHeightRatio;PHP:Function Name;3211394257;f8;14125;2;14127;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCellHeightRatio()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    return the height of cell repect font height.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.012 (2008-07-24);;d38,14125;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getCellMargins;PHP:Function Name;3211394257;f8;2747;2;2749;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCellMargins()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the internal Cell margin array.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.000 (2010-10-03)&#10;&lt;b&gt;see&lt;/b&gt;: setCellMargins()&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of margin values;;d34,2747;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getCellPaddings;PHP:Function Name;3211394257;f8;2711;2;2713;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCellPaddings()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the internal Cell padding array.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.000 (2010-10-03)&#10;&lt;b&gt;see&lt;/b&gt;: setCellPaddings(), SetCellPadding()&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of padding values;;d35,2711;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getCharBBox;PHP:Function Name;3211394257;f8;4649;2;4660;;;;vpos;;v;;afalse|array;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCharBBox($char)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the glyph bounding box of the specified character in the current font in user units.&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.186 (2012-09-13)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$char&lt;/b&gt;: Input character code.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   array(xMin, yMin, xMax, yMax) or FALSE if not defined.;;d36,4649;;b1,0;;m0;;e0;;i0;;o;;k;;l $char;;p;;x;;n">
</treenode>
<treenode node="getColumn;PHP:Function Name;3211394257;f8;22079;2;22081;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getColumn()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the current column number&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.5.011 (2010-07-08)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   current column number;;d29,22079;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getDestination;PHP:Function Name;3211394257;f8;12389;2;12391;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDestination()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the Named Destination array.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.097 (2011-06-23)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Named Destination array.;;d34,12389;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getDocCreationTimestamp;PHP:Function Name;3211394257;f8;10344;2;10346;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDocCreationTimestamp()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns document creation timestamp in seconds.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.152 (2012-03-23)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Creation timestamp in seconds.;;d43,10344;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getDocModificationTimestamp;PHP:Function Name;3211394257;f8;10354;2;10356;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDocModificationTimestamp()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns document modification timestamp in seconds.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.152 (2012-03-23)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Modfication timestamp in seconds.;;d47,10354;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getFontAscent;PHP:Function Name;3211394257;f8;4693;2;4702;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFontAscent($font, $style=&apos;&apos;, $size=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the font ascent value.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.003 (2010-03-30)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$font&lt;/b&gt;: font name&#10;    string &lt;b&gt;$style&lt;/b&gt;: font style&#10;    float &lt;b&gt;$size&lt;/b&gt;: The size (in points)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   font ascent;;d58,4693;;b1,0;;m0;;e0;;i0;;o;;k;;l $font;;p $style;;p $size;;p;;x;;x;;x;;n">
</treenode>
<treenode node="getFontBBox;PHP:Function Name;3211394257;f8;4600;2;4631;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFontBBox()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the bounding box of the current font in user units.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.152 (2012-03-23);;d31,4600;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getFontBuffer;PHP:Function Name;3211394257;f11;21082;2;21087;;;;vpos;;v;;astring|false;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFontBuffer($font)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get font buffer content.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.000 (2009-01-02)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$font&lt;/b&gt;: font key&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   font buffer content or false in case of error;;d41,21082;;b2,0;;m0;;e0;;i0;;o;;k;;l $font;;p;;x;;n">
</treenode>
<treenode node="getFontDescent;PHP:Function Name;3211394257;f8;4672;2;4681;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFontDescent($font, $style=&apos;&apos;, $size=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the font descent value&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.003 (2010-03-30)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$font&lt;/b&gt;: font name&#10;    string &lt;b&gt;$style&lt;/b&gt;: font style&#10;    float &lt;b&gt;$size&lt;/b&gt;: The size (in points)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   font descent;;d59,4672;;b1,0;;m0;;e0;;i0;;o;;k;;l $font;;p $style;;p $size;;p;;x;;x;;x;;n">
</treenode>
<treenode node="getFontFamily;PHP:Function Name;3211394257;f8;15948;2;15950;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFontFamily()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the current font family name.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.3.008 (2008-12-05)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   current font family name;;d33,15948;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getFontFamilyName;PHP:Function Name;3211394257;f8;22450;2;22478;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFontFamilyName($fontfamily)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return normalized font name&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.8.004 (2010-08-17)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$fontfamily&lt;/b&gt;: property string containing font family names&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   normalized font name;;d48,22450;;b1,0;;m0;;e0;;i0;;o;;k;;l $fontfamily;;p;;x;;n">
</treenode>
<treenode node="getFontSize;PHP:Function Name;3211394257;f8;15928;2;15930;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFontSize()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the current font size.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.2.000 (2008-06-23)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   current font size;;d31,15928;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getFontSizePt;PHP:Function Name;3211394257;f8;15938;2;15940;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFontSizePt()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the current font size in points unit.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.2.000 (2008-06-23)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   current font size in points unit;;d33,15938;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getFontSpacing;PHP:Function Name;3211394257;f8;22754;2;22756;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFontSpacing()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the amount to increase or decrease the space between characters in a text.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.000 (2010-09-29)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   font spacing (tracking) value;;d34,22754;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getFontStretching;PHP:Function Name;3211394257;f8;22732;2;22734;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFontStretching()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the percentage of character stretching.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.000 (2010-09-29)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   stretching value;;d37,22732;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getFontStyle;PHP:Function Name;3211394257;f8;15958;2;15960;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFontStyle()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the current font style.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.3.008 (2008-12-05)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   current font style;;d32,15958;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getFontSubsetting;PHP:Function Name;3211394257;f8;22386;2;22388;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFontSubsetting()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the default option for font subsetting.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.3.002 (2010-06-07)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   default font subsetting state.;;d37,22386;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getFontsList;PHP:Function Name;3211394257;f11;4235;2;4244;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFontsList()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fill the list of available fonts ($this-&gt;fontlist).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.013 (2008-07-28);;d35,4235;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getFooterFont;PHP:Function Name;3211394257;f8;10472;2;10474;;;;vpos;;v;;aarray&lt;int,string|float|null&gt;;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFooterFont()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get Footer font.&#10;&lt;b&gt;phpstan&lt;/b&gt;: -return array{0: string, 1: string, 2: float|null} $font&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.012 (2008-07-24)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Array describing the basic font parameters: (family, style, size).;;d33,10472;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getFooterMargin;PHP:Function Name;3211394257;f8;3417;2;3419;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFooterMargin()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns footer margin in user units.&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.012 (2008-07-24)&#10;&lt;b&gt;public&lt;/b&gt;;;d35,3417;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getFormDefaultProp;PHP:Function Name;3211394257;f8;12768;2;12770;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormDefaultProp()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the default properties for form fields.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.000 (2009-09-06)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   $prop javascript field properties. Possible values are described on official Javascript for Acrobat API reference.;;d38,12768;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getGDgamma;PHP:Function Name;3211394257;f11;7436;2;7450;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getGDgamma($img, $c)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the GD-corrected PNG gamma value from alpha color&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.3.007 (2008-12-04)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    resource &lt;b&gt;$img&lt;/b&gt;: GD image Resource ID.&#10;    int &lt;b&gt;$c&lt;/b&gt;: alpha color;;d41,7436;;b2,0;;m0;;e0;;i0;;o;;k;;l $img;;p $c;;p;;x;;x;;n">
</treenode>
<treenode node="getGraphicVars;PHP:Function Name;3211394257;f11;20791;2;20843;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getGraphicVars()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns current graphic variables as array.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.2.010 (2008-11-14)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of graphic variables;;d37,20791;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getGroupPageNo;PHP:Function Name;3211394257;f8;13809;2;13811;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getGroupPageNo()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the current page in the group.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.000 (2008-03-27)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   current page in the group;;d34,13809;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getGroupPageNoFormatted;PHP:Function Name;3211394257;f8;13819;2;13821;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getGroupPageNoFormatted()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the current group page number formatted as a string.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.3.003 (2008-11-18)&#10;&lt;b&gt;see&lt;/b&gt;: PaneNo(), formatPageNumber();;d43,13819;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getHTMLFontUnits;PHP:Function Name;3211394257;f8;16343;2;16389;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getHTMLFontUnits($val, $refsize=12, $parent_size=12, $defaultunit=&apos;pt&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert HTML string containing font size value to points&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$val&lt;/b&gt;: String containing font size value and unit.&#10;    float &lt;b&gt;$refsize&lt;/b&gt;: Reference font size in points.&#10;    float &lt;b&gt;$parent_size&lt;/b&gt;: Parent font size in points.&#10;    string &lt;b&gt;$defaultunit&lt;/b&gt;: Default unit (can be one of the following: %, em, ex, px, in, mm, pc, pt).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   value in points;;d89,16343;;b1,0;;m0;;e0;;i0;;o;;k;;l $val;;p $refsize;;p $parent_size;;p $defaultunit;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="getHTMLUnitToUnits;PHP:Function Name;3211394257;f8;20505;2;20579;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getHTMLUnitToUnits($htmlval, $refsize=1, $defaultunit=&apos;px&apos;, $points=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert HTML string containing value and unit of measure to user&apos;s units or points.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.4.004 (2008-12-10)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$htmlval&lt;/b&gt;: String containing values and unit.&#10;    string &lt;b&gt;$refsize&lt;/b&gt;: Reference value in points.&#10;    string &lt;b&gt;$defaultunit&lt;/b&gt;: Default unit (can be one of the following: %, em, ex, px, in, mm, pc, pt).&#10;    boolean &lt;b&gt;$points&lt;/b&gt;: If true returns points, otherwise returns value in user&apos;s units.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   value in user&apos;s unit or point if $points=true;;d92,20505;;b1,0;;m0;;e0;;i0;;o;;k;;l $htmlval;;p $refsize;;p $defaultunit;;p $points;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="getHeaderData;PHP:Function Name;3211394257;f8;3370;2;3379;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getHeaderData()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns header data:&#10;&lt;ul&gt;&lt;li&gt;$ret[&apos;logo&apos;] = logo image&lt;/li&gt;&lt;li&gt;$ret[&apos;logo_width&apos;] = width of the image logo in user units&lt;/li&gt;&lt;li&gt;$ret[&apos;title&apos;] = header title&lt;/li&gt;&lt;li&gt;$ret[&apos;string&apos;] = header description string&lt;/li&gt;&lt;/ul&gt;&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.012 (2008-07-24)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &lt;string,mixed&gt;;;d33,3370;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getHeaderFont;PHP:Function Name;3211394257;f8;10450;2;10452;;;;vpos;;v;;aarray&lt;int,string|float|null&gt;;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getHeaderFont()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get header font.&#10;&lt;b&gt;phpstan&lt;/b&gt;: -return array{0: string, 1: string, 2: float|null}&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.012 (2008-07-24)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Array describing the basic font parameters: (family, style, size).;;d33,10450;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getHeaderMargin;PHP:Function Name;3211394257;f8;3397;2;3399;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getHeaderMargin()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns header margin in user units.&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.012 (2008-07-24)&#10;&lt;b&gt;public&lt;/b&gt;;;d35,3397;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getHtmlDomArray;PHP:Function Name;3211394257;f11;16398;2;17210;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getHtmlDomArray($html)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the HTML DOM array.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.2.000 (2008-06-20)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$html&lt;/b&gt;: html code;;d43,16398;;b2,0;;m0;;e0;;i0;;o;;k;;l $html;;p;;x;;n">
</treenode>
<treenode node="getImageBuffer;PHP:Function Name;3211394257;f11;21035;2;21040;;;;vpos;;v;;astring|false;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getImageBuffer($image)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get image buffer content.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.000 (2008-12-31)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$image&lt;/b&gt;: image key&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   image buffer content or false in case of error;;d43,21035;;b2,0;;m0;;e0;;i0;;o;;k;;l $image;;p;;x;;n">
</treenode>
<treenode node="getImageRBX;PHP:Function Name;3211394257;f8;3443;2;3445;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getImageRBX()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the right-bottom (or left-bottom for RTL) corner X coordinate of last inserted image&#10;&lt;b&gt;public&lt;/b&gt;;;d31,3443;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getImageRBY;PHP:Function Name;3211394257;f8;3452;2;3454;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getImageRBY()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the right-bottom (or left-bottom for RTL) corner Y coordinate of last inserted image&#10;&lt;b&gt;public&lt;/b&gt;;;d31,3452;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getImageScale;PHP:Function Name;3211394257;f8;2515;2;2517;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getImageScale()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the adjusting factor to convert pixels to user units.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.5.2&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   adjusting factor to convert pixels to user units.;;d33,2515;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getInternalPageNumberAliases;PHP:Function Name;3211394257;f11;7917;2;7931;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getInternalPageNumberAliases($a= &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return an array containing variations for the basic page number alias.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$a&lt;/b&gt;: Base alias.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of page number aliases;;d57,7917;;b2,0;;m0;;e0;;i0;;o;;k;;l $a;;p;;x;;n">
</treenode>
<treenode node="getLastH;PHP:Function Name;3211394257;f8;2493;2;2495;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLastH()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the last cell height.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.017 (2008-08-05)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   last cell height;;d28,2493;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getMargins;PHP:Function Name;3211394257;f8;15887;2;15902;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMargins()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an array containing current margins:&#10;&lt;ul&gt;&#10;&lt;li&gt;$ret[&apos;left&apos;] = left margin&lt;/li&gt;&#10;&lt;li&gt;$ret[&apos;right&apos;] = right margin&lt;/li&gt;&#10;&lt;li&gt;$ret[&apos;top&apos;] = top margin&lt;/li&gt;&#10;&lt;li&gt;$ret[&apos;bottom&apos;] = bottom margin&lt;/li&gt;&#10;&lt;li&gt;$ret[&apos;header&apos;] = header margin&lt;/li&gt;&#10;&lt;li&gt;$ret[&apos;footer&apos;] = footer margin&lt;/li&gt;&#10;&lt;li&gt;$ret[&apos;cell&apos;] = cell padding array&lt;/li&gt;&#10;&lt;li&gt;$ret[&apos;padding_left&apos;] = cell left padding&lt;/li&gt;&#10;&lt;li&gt;$ret[&apos;padding_top&apos;] = cell top padding&lt;/li&gt;&#10;&lt;li&gt;$ret[&apos;padding_right&apos;] = cell right padding&lt;/li&gt;&#10;&lt;li&gt;$ret[&apos;padding_bottom&apos;] = cell bottom padding&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.2.000 (2008-06-23)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing all margins measures;;d30,15887;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getNumLines;PHP:Function Name;3211394257;f8;6239;2;6309;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNumLines($txt, $w=0, $reseth=false, $autopadding=true, $cellpadding=null, $border=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method return the estimated number of lines for print a simple text string using Multicell() method.&#10;&lt;b&gt;author&lt;/b&gt;: Alexander Escalona Fern\E1ndez, Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.011&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$txt&lt;/b&gt;: String for calculating his height&#10;    float &lt;b&gt;$w&lt;/b&gt;: Width of cells. If 0, they extend up to the right margin of the page.&#10;    boolean &lt;b&gt;$reseth&lt;/b&gt;: if true reset the last cell height (default false).&#10;    boolean &lt;b&gt;$autopadding&lt;/b&gt;: if true, uses internal padding and automatically adjust it to account for line width (default true).&#10;    array|null &lt;b&gt;$cellpadding&lt;/b&gt;: Internal cell padding, if empty uses default cell padding.&#10;    mixed &lt;b&gt;$border&lt;/b&gt;: Indicates if borders must be drawn around the cell. The value can be a number:&lt;ul&gt;&lt;li&gt;0: no border (default)&lt;/li&gt;&lt;li&gt;1: frame&lt;/li&gt;&lt;/ul&gt; or a string containing some or all of the following characters (in any order):&lt;ul&gt;&lt;li&gt;L: left&lt;/li&gt;&lt;li&gt;T: top&lt;/li&gt;&lt;li&gt;R: right&lt;/li&gt;&lt;li&gt;B: bottom&lt;/li&gt;&lt;/ul&gt; or an array of line styles for each border group - for example: array(&apos;LTRB&apos; =&gt; array(&apos;width&apos; =&gt; 2, &apos;cap&apos; =&gt; &apos;butt&apos;, &apos;join&apos; =&gt; &apos;miter&apos;, &apos;dash&apos; =&gt; 0, &apos;color&apos; =&gt; array(0, 0, 0)))&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Return the minimal height needed for multicell method for printing the $txt param.;;d105,6239;;b1,0;;m0;;e0;;i0;;o;;k;;l $txt;;p $w;;p $reseth;;p $autopadding;;p $cellpadding;;p $border;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="getNumPages;PHP:Function Name;3211394257;f8;3150;2;3152;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNumPages()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the total number of insered pages.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-07)&#10;&lt;b&gt;see&lt;/b&gt;: setPage(), getPage(), lastpage()&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   number of pages;;d31,3150;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getNumberOfColumns;PHP:Function Name;3211394257;f8;22089;2;22091;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNumberOfColumns()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the current number of columns.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.8.018 (2010-08-25)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   number of columns;;d38,22089;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getOriginalMargins;PHP:Function Name;3211394257;f8;15914;2;15920;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getOriginalMargins()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an array containing original margins:&#10;&lt;ul&gt;&#10;&lt;li&gt;$ret[&apos;left&apos;] = left margin&lt;/li&gt;&#10;&lt;li&gt;$ret[&apos;right&apos;] = right margin&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.012 (2008-07-24)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing all margins measures;;d38,15914;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getOverprint;PHP:Function Name;3211394257;f8;14037;2;14039;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getOverprint()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the overprint mode array (OP, op, OPM).&#10;(Check the &quot;Entries in a Graphics State Parameter Dictionary&quot; on PDF 32000-1:2008).&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.152 (2012-03-23)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &lt;string,bool|int&gt;;;d32,14037;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getPDFData;PHP:Function Name;3211394257;f8;10495;2;10500;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPDFData()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the PDF data.&#10;&lt;b&gt;public&lt;/b&gt;;;d30,10495;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getPage;PHP:Function Name;3211394257;f8;3139;2;3141;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPage()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get current document page number.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-07)&#10;&lt;b&gt;see&lt;/b&gt;: setPage(), lastpage(), getNumPages()&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   page number;;d27,3139;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getPageBuffer;PHP:Function Name;3211394257;f11;20988;2;20993;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPageBuffer($page)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get page buffer content.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.000 (2008-12-31)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$page&lt;/b&gt;: page number&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   page buffer content or false in case of error;;d41,20988;;b2,0;;m0;;e0;;i0;;o;;k;;l $page;;p;;x;;n">
</treenode>
<treenode node="getPageDimensions;PHP:Function Name;3211394257;f8;2528;2;2533;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPageDimensions($pagenum=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an array of page dimensions:&#10;&lt;ul&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;w&apos;] = page width in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;h&apos;] = height in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;wk&apos;] = page width in user units&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;hk&apos;] = page height in user units&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;tm&apos;] = top margin&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;bm&apos;] = bottom margin&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;lm&apos;] = left margin&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;rm&apos;] = right margin&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;pb&apos;] = auto page break&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;or&apos;] = page orientation&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;olm&apos;] = original left margin&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;orm&apos;] = original right margin&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;Rotate&apos;] = The number of degrees by which the page shall be rotated clockwise when displayed or printed. The value shall be a multiple of 90.&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;PZ&apos;] = The page&apos;s preferred zoom (magnification) factor.&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;trans&apos;] : the style and duration of the visual transition to use when moving from another page to the given page during a presentation&lt;ul&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;trans&apos;][&apos;Dur&apos;] = The page&apos;s display duration (also called its advance timing): the maximum length of time, in seconds, that the page shall be displayed during presentations before the viewer application shall automatically advance to the next page.&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;trans&apos;][&apos;S&apos;] = transition style : Split, Blinds, Box, Wipe, Dissolve, Glitter, R, Fly, Push, Cover, Uncover, Fade&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;trans&apos;][&apos;D&apos;] = The duration of the transition effect, in seconds.&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;trans&apos;][&apos;Dm&apos;] = (Split and Blinds transition styles only) The dimension in which the specified transition effect shall occur: H = Horizontal, V = Vertical. Default value: H.&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;trans&apos;][&apos;M&apos;] = (Split, Box and Fly transition styles only) The direction of motion for the specified transition effect: I = Inward from the edges of the page, O = Outward from the center of the pageDefault value: I.&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;trans&apos;][&apos;Di&apos;] = (Wipe, Glitter, Fly, Cover, Uncover and Push transition styles only) The direction in which the specified transition effect shall moves, expressed in degrees counterclockwise starting from a left-to-right direction. If the value is a number, it shall be one of: 0 = Left to right, 90 = Bottom to top (Wipe only), 180 = Right to left (Wipe only), 270 = Top to bottom, 315 = Top-left to bottom-right (Glitter only). If the value is a name, it shall be None, which is relevant only for the Fly transition when the value of SS is not 1.0. Default value: 0.&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;trans&apos;][&apos;SS&apos;] = (Fly transition style only) The starting or ending scale at which the changes shall be drawn. If M specifies an inward transition, the scale of the changes drawn shall progress from SS to 1.0 over the course of the transition. If M specifies an outward transition, the scale of the changes drawn shall progress from 1.0 to SS over the course of the transition. Default: 1.0. &lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;trans&apos;][&apos;B&apos;] = (Fly transition style only) If true, the area that shall be flown in is rectangular and opaque. Default: false.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;MediaBox&apos;] : the boundaries of the physical medium on which the page shall be displayed or printed&lt;ul&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;MediaBox&apos;][&apos;llx&apos;] = lower-left x coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;MediaBox&apos;][&apos;lly&apos;] = lower-left y coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;MediaBox&apos;][&apos;urx&apos;] = upper-right x coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;MediaBox&apos;][&apos;ury&apos;] = upper-right y coordinate in points&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;CropBox&apos;] : the visible region of default user space&lt;ul&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;CropBox&apos;][&apos;llx&apos;] = lower-left x coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;CropBox&apos;][&apos;lly&apos;] = lower-left y coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;CropBox&apos;][&apos;urx&apos;] = upper-right x coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;CropBox&apos;][&apos;ury&apos;] = upper-right y coordinate in points&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;BleedBox&apos;] : the region to which the contents of the page shall be clipped when output in a production environment&lt;ul&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;BleedBox&apos;][&apos;llx&apos;] = lower-left x coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;BleedBox&apos;][&apos;lly&apos;] = lower-left y coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;BleedBox&apos;][&apos;urx&apos;] = upper-right x coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;BleedBox&apos;][&apos;ury&apos;] = upper-right y coordinate in points&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;TrimBox&apos;] : the intended dimensions of the finished page after trimming&lt;ul&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;TrimBox&apos;][&apos;llx&apos;] = lower-left x coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;TrimBox&apos;][&apos;lly&apos;] = lower-left y coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;TrimBox&apos;][&apos;urx&apos;] = upper-right x coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;TrimBox&apos;][&apos;ury&apos;] = upper-right y coordinate in points&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;ArtBox&apos;] : the extent of the page&apos;s meaningful content&lt;ul&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;ArtBox&apos;][&apos;llx&apos;] = lower-left x coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;ArtBox&apos;][&apos;lly&apos;] = lower-left y coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;ArtBox&apos;][&apos;urx&apos;] = upper-right x coordinate in points&lt;/li&gt;&lt;li&gt;$this-&gt;pagedim[$this-&gt;page][&apos;ArtBox&apos;][&apos;ury&apos;] = upper-right y coordinate in points&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.027 (2009-03-16)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|null &lt;b&gt;$pagenum&lt;/b&gt;: page number (empty = current page)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of page dimensions.;;d50,2528;;b1,0;;m0;;e0;;i0;;o;;k;;l $pagenum;;p;;x;;n">
</treenode>
<treenode node="getPageGroupAlias;PHP:Function Name;3211394257;f8;13781;2;13786;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPageGroupAlias()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the alias for the total number of pages in the current page group.&#10;If the current font is unicode type, the returned string is surrounded by additional curly braces.&#10;This alias will be replaced by the total number of pages in this group.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.000 (2008-03-27)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   alias of the current page group;;d37,13781;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getPageHeight;PHP:Function Name;3211394257;f8;2560;2;2565;;;;vpos;;v;;aint|float;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPageHeight($pagenum=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the page height in units.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.5.2&#10;&lt;b&gt;see&lt;/b&gt;: getPageDimensions()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|null &lt;b&gt;$pagenum&lt;/b&gt;: page number (empty = current page)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   page height.;;d46,2560;;b1,0;;m0;;e0;;i0;;o;;k;;l $pagenum;;p;;x;;n">
</treenode>
<treenode node="getPageNumGroupAlias;PHP:Function Name;3211394257;f8;13796;2;13801;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPageNumGroupAlias()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the alias for the page number on the current page group.&#10;If the current font is unicode type, the returned string is surrounded by additional curly braces.&#10;This alias will be replaced by the page number (relative to the belonging group).&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.000 (2009-01-02)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   alias of the current page group;;d40,13796;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getPageRegions;PHP:Function Name;3211394257;f8;22766;2;22768;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPageRegions()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return an array of no-write page regions&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.003 (2010-10-13)&#10;&lt;b&gt;see&lt;/b&gt;: setPageRegions(), addPageRegion()&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of no-write page regions;;d34,22766;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getPageWidth;PHP:Function Name;3211394257;f8;2544;2;2549;;;;vpos;;v;;aint|float;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPageWidth($pagenum=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the page width in units.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.5.2&#10;&lt;b&gt;see&lt;/b&gt;: getPageDimensions()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|null &lt;b&gt;$pagenum&lt;/b&gt;: page number (empty = current page)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   page width.;;d45,2544;;b1,0;;m0;;e0;;i0;;o;;k;;l $pagenum;;p;;x;;n">
</treenode>
<treenode node="getRTL;PHP:Function Name;3211394257;f8;2406;2;2408;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRTL()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the RTL status&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.012 (2008-07-24);;d26,2406;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getRawCharWidth;PHP:Function Name;3211394257;f8;4197;2;4214;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRawCharWidth($char)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the length of the char in user unit for the current font.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.000 (2010-09-28)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$char&lt;/b&gt;: The char code whose length is to be returned&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   char width;;d40,4197;;b1,0;;m0;;e0;;i0;;o;;k;;l $char;;p;;x;;n">
</treenode>
<treenode node="getRemainingWidth;PHP:Function Name;3211394257;f11;6821;2;6828;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRemainingWidth()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the remaining width between the current position and margins.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Return the remaining width;;d40,6821;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getScaleFactor;PHP:Function Name;3211394257;f8;2590;2;2592;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getScaleFactor()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the scale factor (number of points in user unit).&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.5.2&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   scale factor.;;d34,2590;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getSignatureAppearanceArray;PHP:Function Name;3211394257;f11;13626;2;13644;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSignatureAppearanceArray($x=0, $y=0, $w=0, $h=0, $page=-1, $name=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the array that defines the signature appearance (page and rectangle coordinates).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.101 (2011-07-06)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: Abscissa of the upper-left corner.&#10;    float &lt;b&gt;$y&lt;/b&gt;: Ordinate of the upper-left corner.&#10;    float &lt;b&gt;$w&lt;/b&gt;: Width of the signature area.&#10;    float &lt;b&gt;$h&lt;/b&gt;: Height of the signature area.&#10;    int &lt;b&gt;$page&lt;/b&gt;: option page number (if &lt; 0 the current page is used).&#10;    string &lt;b&gt;$name&lt;/b&gt;: Name of the signature.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Array defining page and rectangle coordinates of signature appearance.;;d92,13626;;b2,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $w;;p $h;;p $page;;p $name;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="getSpaceString;PHP:Function Name;3211394257;f11;17219;2;17225;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSpaceString()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the string used to find spaces&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.024 (2010-01-15);;d37,17219;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getStringHeight;PHP:Function Name;3211394257;f8;6358;2;6371;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStringHeight($w, $txt, $reseth=false, $autopadding=true, $cellpadding=null, $border=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method return the estimated height needed for printing a simple text string using the Multicell() method.&#10;Generally, if you want to know the exact height for a block of content you can use the following alternative technique:&#10;&lt;b&gt;pre&lt;/b&gt;&#10;// store current object&#10;$pdf-&gt;startTransaction();s&#10;// store starting values&#10;$start_y = $pdf-&gt;GetY();s&#10;$start_page = $pdf-&gt;getPage();s&#10;// call your printing functions with your parameters&#10;// - - - - - - - - - - - - - - - - - - - - - - - - - - - - -&#10;$pdf-&gt;MultiCell($w=0, $h=0, $txt, $border=1, $align=&apos;L&apos;, $fill=false, $ln=1, $x=null, $y=null, $reseth=true, $stretch=0, $ishtml=false, $autopadding=true, $maxh=0);s&#10;// - - - - - - - - - - - - - - - - - - - - - - - - - - - - -&#10;// get the new Y&#10;$end_y = $pdf-&gt;GetY();s&#10;$end_page = $pdf-&gt;getPage();s&#10;// calculate height&#10;$height = 0;s&#10;if ($end_page == $start_page) {&#10;$height = $end_y - $start_y;s&#10;} else {&#10;for ($page=$start_page;s $page &lt;= $end_page;s ++$page) {&#10;$this-&gt;setPage($page);s&#10;if ($page == $start_page) {&#10;// first page&#10;$height += $this-&gt;h - $start_y - $this-&gt;bMargin;s&#10;} elseif ($page == $end_page) {&#10;// last page&#10;$height += $end_y - $this-&gt;tMargin;s&#10;} else {&#10;$height += $this-&gt;h - $this-&gt;tMargin - $this-&gt;bMargin;s&#10;}&#10;}&#10;}&#10;// restore previous object&#10;$pdf = $pdf-&gt;rollbackTransaction();s&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni, Alexander Escalona Fern\E1ndez&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$w&lt;/b&gt;: Width of cells. If 0, they extend up to the right margin of the page.&#10;    string &lt;b&gt;$txt&lt;/b&gt;: String for calculating his height&#10;    boolean &lt;b&gt;$reseth&lt;/b&gt;: if true reset the last cell height (default false).&#10;    boolean &lt;b&gt;$autopadding&lt;/b&gt;: if true, uses internal padding and automatically adjust it to account for line width (default true).&#10;    array|null &lt;b&gt;$cellpadding&lt;/b&gt;: Internal cell padding, if empty uses default cell padding.&#10;    mixed &lt;b&gt;$border&lt;/b&gt;: Indicates if borders must be drawn around the cell. The value can be a number:&lt;ul&gt;&lt;li&gt;0: no border (default)&lt;/li&gt;&lt;li&gt;1: frame&lt;/li&gt;&lt;/ul&gt; or a string containing some or all of the following characters (in any order):&lt;ul&gt;&lt;li&gt;L: left&lt;/li&gt;&lt;li&gt;T: top&lt;/li&gt;&lt;li&gt;R: right&lt;/li&gt;&lt;li&gt;B: bottom&lt;/li&gt;&lt;/ul&gt; or an array of line styles for each border group - for example: array(&apos;LTRB&apos; =&gt; array(&apos;width&apos; =&gt; 2, &apos;cap&apos; =&gt; &apos;butt&apos;, &apos;join&apos; =&gt; &apos;miter&apos;, &apos;dash&apos; =&gt; 0, &apos;color&apos; =&gt; array(0, 0, 0)))&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Return the minimal height needed for multicell method for printing the $txt param.;;d107,6358;;b1,0;;m0;;e0;;i0;;o;;k;;l $w;;p $txt;;p $reseth;;p $autopadding;;p $cellpadding;;p $border;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="getTextShadow;PHP:Function Name;3211394257;f8;22198;2;22200;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTextShadow()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the text shadow parameters array.&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.174 (2012-07-25)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   array of parameters.;;d33,22198;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="hashTCPDFtag;PHP:Function Name;3211394257;f11;17233;2;17235;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hashTCPDFtag($data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Calculates the hash value of the given data.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$data&lt;/b&gt;: The data to be hashed.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The hashed value of the data.;;d40,17233;;b2,0;;m0;;e0;;i0;;o;;k;;l $data;;p;;x;;n">
</treenode>
<treenode node="hyphenateText;PHP:Function Name;3211394257;f8;22296;2;22352;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hyphenateText($text, $patterns, $dictionary=array(), $leftmin=1, $rightmin=2, $charmin=1, $charmax=8)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns text with soft hyphens.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.012 (2010-04-12)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$text&lt;/b&gt;: text to process&#10;    mixed &lt;b&gt;$patterns&lt;/b&gt;: Array of hypenation patterns or a TEX file containing hypenation patterns. TEX patterns can be downloaded from http://www.ctan.org/tex-archive/language/hyph-utf8/tex/generic/hyph-utf8/patterns/&#10;    array &lt;b&gt;$dictionary&lt;/b&gt;: Array of words to be returned without applying the hyphenation algorithm.&#10;    int &lt;b&gt;$leftmin&lt;/b&gt;: Minimum number of character to leave on the left of the word without applying the hyphens.&#10;    int &lt;b&gt;$rightmin&lt;/b&gt;: Minimum number of character to leave on the right of the word without applying the hyphens.&#10;    int &lt;b&gt;$charmin&lt;/b&gt;: Minimum word length to apply the hyphenation algorithm.&#10;    int &lt;b&gt;$charmax&lt;/b&gt;: Maximum length of broken piece of word.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   text with soft hyphens;;d119,22296;;b1,0;;m0;;e0;;i0;;o;;k;;l $text;;p $patterns;;p $dictionary;;p $leftmin;;p $rightmin;;p $charmin;;p $charmax;;p;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="hyphenateWord;PHP:Function Name;3211394257;f11;22216;2;22280;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hyphenateWord($word, $patterns, $dictionary=array(), $leftmin=1, $rightmin=2, $charmin=1, $charmax=8)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an array of chars containing soft hyphens.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.012 (2010-04-12)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$word&lt;/b&gt;: array of chars&#10;    array &lt;b&gt;$patterns&lt;/b&gt;: Array of hypenation patterns.&#10;    array &lt;b&gt;$dictionary&lt;/b&gt;: Array of words to be returned without applying the hyphenation algorithm.&#10;    int &lt;b&gt;$leftmin&lt;/b&gt;: Minimum number of character to leave on the left of the word without applying the hyphens.&#10;    int &lt;b&gt;$rightmin&lt;/b&gt;: Minimum number of character to leave on the right of the word without applying the hyphens.&#10;    int &lt;b&gt;$charmin&lt;/b&gt;: Minimum word length to apply the hyphenation algorithm.&#10;    int &lt;b&gt;$charmax&lt;/b&gt;: Maximum length of broken piece of word.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   text with soft hyphens;;d122,22216;;b2,0;;m0;;e0;;i0;;o;;k;;l $word;;p $patterns;;p $dictionary;;p $leftmin;;p $rightmin;;p $charmin;;p $charmax;;p;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="inPageBody;PHP:Function Name;3211394257;f11;3699;2;3701;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    inPageBody()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if we are on the page body (excluding page header and footer).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.091 (2011-06-15)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if we are not in page header nor in page footer, false otherwise.;;d33,3699;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="isCharDefined;PHP:Function Name;3211394257;f8;4713;2;4728;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCharDefined($char, $font=&apos;&apos;, $style=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return true in the character is present in the specified font.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.153 (2012-03-28)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$char&lt;/b&gt;: Character to check (integer value or string)&#10;    string &lt;b&gt;$font&lt;/b&gt;: Font name (family name).&#10;    string &lt;b&gt;$style&lt;/b&gt;: Font style.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the char is defined, false otherwise.;;d59,4713;;b1,0;;m0;;e0;;i0;;o;;k;;l $char;;p $font;;p $style;;p;;x;;x;;x;;n">
</treenode>
<treenode node="isRTLTextDir;PHP:Function Name;3211394257;f8;2448;2;2450;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRTLTextDir()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the current temporary RTL status&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.014 (2009-11-04);;d32,2448;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="isUnicodeFont;PHP:Function Name;3211394257;f8;22438;2;22440;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isUnicodeFont()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return true if the current font is unicode type.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.8.002 (2010-08-14)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true for unicode font, false otherwise.;;d33,22438;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="lastPage;PHP:Function Name;3211394257;f8;3128;2;3130;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    lastPage($resetmargins=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Reset pointer to the last document page.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.0.000 (2008-01-04)&#10;&lt;b&gt;see&lt;/b&gt;: setPage(), getPage(), getNumPages()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    boolean &lt;b&gt;$resetmargins&lt;/b&gt;: if true reset left, right, top margins and Y position.;;d47,3128;;b1,0;;m0;;e0;;i0;;o;;k;;l $resetmargins;;p;;x;;n">
</treenode>
<treenode node="movePage;PHP:Function Name;3211394257;f8;21097;2;21259;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    movePage($frompage, $topage)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Move a page to a previous position.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.000 (2009-01-02)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$frompage&lt;/b&gt;: number of the source page&#10;    int &lt;b&gt;$topage&lt;/b&gt;: number of the destination page (must be less than $frompage)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true in case of success, false in case of error.;;d46,21097;;b1,0;;m0;;e0;;i0;;o;;k;;l $frompage;;p $topage;;p;;x;;x;;n">
</treenode>
<treenode node="openHTMLTagHandler;PHP:Function Name;3211394257;f11;18878;2;19594;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    openHTMLTagHandler($dom, $key, $cell)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Process opening tags.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$dom&lt;/b&gt;: html dom array&#10;    int &lt;b&gt;$key&lt;/b&gt;: current element id&#10;    boolean &lt;b&gt;$cell&lt;/b&gt;: if true add the default left (or right if RTL) padding to each new line (default false).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   $dom;;d58,18878;;b2,0;;m0;;e0;;i0;;o;;k;;l $dom;;p $key;;p $cell;;p;;x;;x;;x;;n">
</treenode>
<treenode node="pixelsToUnits;PHP:Function Name;3211394257;f8;10556;2;10558;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    pixelsToUnits($px)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Converts pixels to User&apos;s Units.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;see&lt;/b&gt;: setImageScale(), getImageScale()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$px&lt;/b&gt;: pixels&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   value in user&apos;s unit;;d36,10556;;b1,0;;m0;;e0;;i0;;o;;k;;l $px;;p;;x;;n">
</treenode>
<treenode node="printTemplate;PHP:Function Name;3211394257;f8;22588;2;22712;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    printTemplate($id, $x=null, $y=null, $w=0, $h=0, $align=&apos;&apos;, $palign=&apos;&apos;, $fitonpage=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Print an XObject Template.&#10;You can print an XObject Template inside the currently opened Template.&#10;An XObject Template is a PDF block that is a self-contained description of any sequence of graphics objects (including path objects, text objects, and sampled images).&#10;An XObject Template may be painted multiple times, either on several pages or at several locations on the same page and produces the same results each time, subject only to the graphics state at the time it is invoked.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.8.017 (2010-08-24)&#10;&lt;b&gt;see&lt;/b&gt;: startTemplate(), endTemplate()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$id&lt;/b&gt;: The ID of XObject Template to print.&#10;    float|null &lt;b&gt;$x&lt;/b&gt;: X position in user units (empty string = current x position)&#10;    float|null &lt;b&gt;$y&lt;/b&gt;: Y position in user units (empty string = current y position)&#10;    float &lt;b&gt;$w&lt;/b&gt;: Width in user units (zero = remaining page width)&#10;    float &lt;b&gt;$h&lt;/b&gt;: Height in user units (zero = remaining page height)&#10;    string &lt;b&gt;$align&lt;/b&gt;: Indicates the alignment of the pointer next to template insertion relative to template height. The value can be:&lt;ul&gt;&lt;li&gt;T: top-right for LTR or top-left for RTL&lt;/li&gt;&lt;li&gt;M: middle-right for LTR or middle-left for RTL&lt;/li&gt;&lt;li&gt;B: bottom-right for LTR or bottom-left for RTL&lt;/li&gt;&lt;li&gt;N: next line&lt;/li&gt;&lt;/ul&gt;&#10;    string &lt;b&gt;$palign&lt;/b&gt;: Allows to center or align the template on the current line. Possible values are:&lt;ul&gt;&lt;li&gt;L : left align&lt;/li&gt;&lt;li&gt;C : center&lt;/li&gt;&lt;li&gt;R : right align&lt;/li&gt;&lt;li&gt;&apos;&apos; : empty string : left for LTR or right for RTL&lt;/li&gt;&lt;/ul&gt;&#10;    boolean &lt;b&gt;$fitonpage&lt;/b&gt;: If true the template is resized to not exceed page dimensions.;;d107,22588;;b1,0;;m0;;e0;;i0;;o;;k;;l $id;;p $x;;p $y;;p $w;;p $h;;p $align;;p $palign;;p $fitonpage;;p;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="putHtmlListBullet;PHP:Function Name;3211394257;f11;20589;2;20783;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    putHtmlListBullet($listdepth, $listtype=&apos;&apos;, $size=10)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output an HTML list bullet or ordered item symbol&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.4.004 (2008-12-10)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$listdepth&lt;/b&gt;: list nesting level&#10;    string &lt;b&gt;$listtype&lt;/b&gt;: type of list&#10;    float &lt;b&gt;$size&lt;/b&gt;: current font size;;d74,20589;;b2,0;;m0;;e0;;i0;;o;;k;;l $listdepth;;p $listtype;;p $size;;p;;x;;x;;x;;n">
</treenode>
<treenode node="registrationMark;PHP:Function Name;3211394257;f8;14384;2;14400;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    registrationMark($x, $y, $r, $double=false, $cola=array(100,100,100,100,&apos;All&apos;), $colb=array(0,0,0,0,&apos;None&apos;))&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Paints a registration mark&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.000 (2010-03-26)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: abscissa of the registration mark center.&#10;    float &lt;b&gt;$y&lt;/b&gt;: ordinate of the registration mark center.&#10;    float &lt;b&gt;$r&lt;/b&gt;: radius of the crop mark.&#10;    boolean &lt;b&gt;$double&lt;/b&gt;: if true print two concentric crop marks.&#10;    array &lt;b&gt;$cola&lt;/b&gt;: crop mark color (default spot registration color &apos;All&apos;).&#10;    array &lt;b&gt;$colb&lt;/b&gt;: second crop mark color (default spot registration color &apos;None&apos;).;;d126,14384;;b1,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $r;;p $double;;p $cola;;p $colb;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="registrationMarkCMYK;PHP:Function Name;3211394257;f8;14411;2;14440;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    registrationMarkCMYK($x, $y, $r)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Paints a CMYK registration mark&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 6.0.038 (2013-09-30)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: abscissa of the registration mark center.&#10;    float &lt;b&gt;$y&lt;/b&gt;: ordinate of the registration mark center.&#10;    float &lt;b&gt;$r&lt;/b&gt;: radius of the crop mark.;;d50,14411;;b1,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $r;;p;;x;;x;;x;;n">
</treenode>
<treenode node="removePageRegion;PHP:Function Name;3211394257;f8;22820;2;22824;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removePageRegion($key)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Remove a single no-write region.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.003 (2010-10-13)&#10;&lt;b&gt;see&lt;/b&gt;: setPageRegions(), getPageRegions()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$key&lt;/b&gt;: region key;;d40,22820;;b1,0;;m0;;e0;;i0;;o;;k;;l $key;;p;;x;;n">
</treenode>
<treenode node="removeTagNamespace;PHP:Function Name;3211394257;f11;23961;2;23967;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeTagNamespace($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the tag name without the namespace&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: Tag name;;d46,23961;;b2,0;;m0;;e0;;i0;;o;;k;;l $name;;p;;x;;n">
</treenode>
<treenode node="replaceBuffer;PHP:Function Name;3211394257;f11;20945;2;20948;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    replaceBuffer($data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Replace the buffer content&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.5.000 (2010-06-22)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$data&lt;/b&gt;: data;;d41,20945;;b2,0;;m0;;e0;;i0;;o;;k;;l $data;;p;;x;;n">
</treenode>
<treenode node="replaceChar;PHP:Function Name;3211394257;f11;5645;2;5654;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    replaceChar($oldchar, $newchar)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Replace a char if is defined on the current font.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.167 (2012-06-22)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$oldchar&lt;/b&gt;: Integer code (unicode) of the character to replace.&#10;    int &lt;b&gt;$newchar&lt;/b&gt;: Integer code (unicode) of the new character.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the replaced char or the old char in case the new char i not defined;;d52,5645;;b2,0;;m0;;e0;;i0;;o;;k;;l $oldchar;;p $newchar;;p;;x;;x;;n">
</treenode>
<treenode node="replaceMissingChars;PHP:Function Name;3211394257;f8;4740;2;4769;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    replaceMissingChars($text, $font=&apos;&apos;, $style=&apos;&apos;, $subs=array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Replace missing font characters on selected font with specified substitutions.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.153 (2012-03-28)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$text&lt;/b&gt;: Text to process.&#10;    string &lt;b&gt;$font&lt;/b&gt;: Font name (family name).&#10;    string &lt;b&gt;$style&lt;/b&gt;: Font style.&#10;    array &lt;b&gt;$subs&lt;/b&gt;: Array of possible character substitutions. The key is the character to check (integer value) and the value is a single intege value or an array of possible substitutes.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Processed text.;;d80,4740;;b1,0;;m0;;e0;;i0;;o;;k;;l $text;;p $font;;p $style;;p $subs;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="replaceRightShiftPageNumAliases;PHP:Function Name;3211394257;f11;7956;2;7984;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    replaceRightShiftPageNumAliases($page, $aliases, $diff)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Replace right shift page number aliases with spaces to correct right alignment.&#10;This works perfectly only when using monospaced fonts.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$page&lt;/b&gt;: Page content.&#10;    array &lt;b&gt;$aliases&lt;/b&gt;: Array of page aliases.&#10;    int &lt;b&gt;$diff&lt;/b&gt;: initial difference to add.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   replaced page content.;;d76,7956;;b2,0;;m0;;e0;;i0;;o;;k;;l $page;;p $aliases;;p $diff;;p;;x;;x;;x;;n">
</treenode>
<treenode node="resetColumns;PHP:Function Name;3211394257;f8;21973;2;21977;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    resetColumns()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Remove columns and reset page margins.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.072 (2011-04-26);;d32,21973;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="resetHeaderTemplate;PHP:Function Name;3211394257;f8;3460;2;3462;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    resetHeaderTemplate()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Reset the xobject template used by Header() method.&#10;&lt;b&gt;public&lt;/b&gt;;;d39,3460;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="resetLastH;PHP:Function Name;3211394257;f8;2483;2;2485;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    resetLastH()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Reset the last cell height.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.000 (2010-10-03);;d30,2483;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="rollbackTransaction;PHP:Function Name;3211394257;f8;21911;2;21929;;;;vpos;;v;;aTCPDF;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    rollbackTransaction($self=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method allows to undo the latest transaction by returning the latest saved TCPDF object with startTransaction().&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.029 (2009-03-19)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    boolean &lt;b&gt;$self&lt;/b&gt;: if true restores current class object to previous state without the need of reassignment via the returned value.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   object.;;d50,21911;;b1,0;;m0;;e0;;i0;;o;;k;;l $self;;p;;x;;n">
</treenode>
<treenode node="segSVGContentHandler;PHP:Function Name;3211394257;f11;24760;2;24762;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    segSVGContentHandler($parser, $data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the character data handler function for the XML parser.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-05-02)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    resource &lt;b&gt;$parser&lt;/b&gt;: The first parameter, parser, is a reference to the XML parser calling the handler.&#10;    string &lt;b&gt;$data&lt;/b&gt;: The second parameter, data, contains the character data as a string.;;d57,24760;;b2,0;;m0;;e0;;i0;;o;;k;;l $parser;;p $data;;p;;x;;x;;n">
</treenode>
<treenode node="selectColumn;PHP:Function Name;3211394257;f8;22000;2;22071;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    selectColumn($col=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set position at a given column&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.001 (2010-03-28)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|null &lt;b&gt;$col&lt;/b&gt;: column number (from 0 to getNumberOfColumns()-1);s empty string = current column.;;d41,22000;;b1,0;;m0;;e0;;i0;;o;;k;;l $col;;p;;x;;n">
</treenode>
<treenode node="serializeTCPDFtag;PHP:Function Name;3211394257;f8;17244;2;17249;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    serializeTCPDFtag($method, $params=array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Serialize data to be used with TCPDF tag in HTML code.&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$method&lt;/b&gt;: TCPDF method name&#10;    array &lt;b&gt;$params&lt;/b&gt;: Method parameters&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Serialized data;;d61,17244;;b1,0;;m0;;e0;;i0;;o;;k;;l $method;;p $params;;p;;x;;x;;n">
</treenode>
<treenode node="setAbsX;PHP:Function Name;3211394257;f8;7613;2;7615;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setAbsX($x)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the absolute X coordinate of the current pointer.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.186 (2012-09-13)&#10;&lt;b&gt;see&lt;/b&gt;: setAbsX(), setAbsY(), SetAbsXY()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: The value of the abscissa in user units.;;d29,7613;;b1,0;;m0;;e0;;i0;;o;;k;;l $x;;p;;x;;n">
</treenode>
<treenode node="setAbsXY;PHP:Function Name;3211394257;f8;7636;2;7639;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setAbsXY($x, $y)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the absolute X and Y coordinates of the current pointer.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.186 (2012-09-13)&#10;&lt;b&gt;see&lt;/b&gt;: setAbsX(), setAbsY(), SetAbsXY()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: The value of the abscissa in user units.&#10;    float &lt;b&gt;$y&lt;/b&gt;: (float) The value of the ordinate in user units.;;d34,7636;;b1,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p;;x;;x;;n">
</treenode>
<treenode node="setAbsY;PHP:Function Name;3211394257;f8;7624;2;7626;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setAbsY($y)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the absolute Y coordinate of the current pointer.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.186 (2012-09-13)&#10;&lt;b&gt;see&lt;/b&gt;: setAbsX(), setAbsY(), SetAbsXY()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$y&lt;/b&gt;: (float) The value of the ordinate in user units.;;d29,7624;;b1,0;;m0;;e0;;i0;;o;;k;;l $y;;p;;x;;n">
</treenode>
<treenode node="setAllowLocalFiles;PHP:Function Name;3211394257;f8;2995;2;2997;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setAllowLocalFiles($allowLocalFiles)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Whether to allow local file path in image html tags, when prefixed with file://&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 6.4&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$allowLocalFiles&lt;/b&gt;: true, when local files should be allowed. Otherwise false.;;d54,2995;;b1,0;;m0;;e0;;i0;;o;;k;;l $allowLocalFiles;;p;;x;;n">
</treenode>
<treenode node="setAlpha;PHP:Function Name;3211394257;f8;14050;2;14073;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setAlpha($stroking=1, $bm=&apos;Normal&apos;, $nonstroking=null, $ais=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set alpha for stroking (CA) and non-stroking (ca) operations.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.000 (2008-03-27)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$stroking&lt;/b&gt;: Alpha value for stroking operations: real value from 0 (transparent) to 1 (opaque).&#10;    string &lt;b&gt;$bm&lt;/b&gt;: blend mode, one of the following: Normal, Multiply, Screen, Overlay, Darken, Lighten, ColorDodge, ColorBurn, HardLight, SoftLight, Difference, Exclusion, Hue, Saturation, Color, Luminosity&#10;    float|null &lt;b&gt;$nonstroking&lt;/b&gt;: Alpha value for non-stroking operations: real value from 0 (transparent) to 1 (opaque).&#10;    boolean &lt;b&gt;$ais&lt;/b&gt;;;d84,14050;;b1,0;;m0;;e0;;i0;;o;;k;;l $stroking;;p $bm;;p $nonstroking;;p $ais;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="setAuthor;PHP:Function Name;3211394257;f8;2962;2;2964;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setAuthor($author)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the author of the document.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.2&#10;&lt;b&gt;see&lt;/b&gt;: SetCreator(), SetKeywords(), SetSubject(), SetTitle()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$author&lt;/b&gt;: The name of the author.;;d36,2962;;b1,0;;m0;;e0;;i0;;o;;k;;l $author;;p;;x;;n">
</treenode>
<treenode node="setAutoPageBreak;PHP:Function Name;3211394257;f8;2860;2;2864;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setAutoPageBreak($auto, $margin=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Enables or disables the automatic page breaking mode. When enabling, the second parameter is the distance from the bottom of the page that defines the triggering limit. By default, the mode is on and the margin is 2 cm.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0&#10;&lt;b&gt;see&lt;/b&gt;: Cell(), MultiCell(), AcceptPageBreak()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    boolean &lt;b&gt;$auto&lt;/b&gt;: Boolean indicating if mode should be on or off.&#10;    float &lt;b&gt;$margin&lt;/b&gt;: Distance from the bottom of the page.;;d52,2860;;b1,0;;m0;;e0;;i0;;o;;k;;l $auto;;p $margin;;p;;x;;x;;n">
</treenode>
<treenode node="setBarcode;PHP:Function Name;3211394257;f8;15296;2;15298;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setBarcode($bc=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set document barcode.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$bc&lt;/b&gt;: barcode;;d36,15296;;b1,0;;m0;;e0;;i0;;o;;k;;l $bc;;p;;x;;n">
</treenode>
<treenode node="setBooklet;PHP:Function Name;3211394257;f8;20419;2;20427;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setBooklet($booklet=true, $inner=-1, $outer=-1)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the booklet mode for double-sided pages.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.2.000 (2008-10-29)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    boolean &lt;b&gt;$booklet&lt;/b&gt;: true set the booklet mode on, false otherwise.&#10;    float &lt;b&gt;$inner&lt;/b&gt;: Inner page margin.&#10;    float &lt;b&gt;$outer&lt;/b&gt;: Outer page margin.;;d65,20419;;b1,0;;m0;;e0;;i0;;o;;k;;l $booklet;;p $inner;;p $outer;;p;;x;;x;;x;;n">
</treenode>
<treenode node="setBookmark;PHP:Function Name;3211394257;f8;12425;2;12427;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setBookmark($txt, $level=0, $y=-1, $page=&apos;&apos;, $style=&apos;&apos;, $color=array(0,0,0), $x=-1, $link=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds a bookmark - alias for Bookmark().&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$txt&lt;/b&gt;: Bookmark description.&#10;    int &lt;b&gt;$level&lt;/b&gt;: Bookmark level (minimum value is 0).&#10;    float &lt;b&gt;$y&lt;/b&gt;: Y position in user units of the bookmark on the selected page (default = -1 = current position;s 0 = page start;s).&#10;    int|string &lt;b&gt;$page&lt;/b&gt;: Target page number (leave empty for current page). If you prefix a page number with the * character, then this page will not be changed when adding/deleting/moving pages.&#10;    string &lt;b&gt;$style&lt;/b&gt;: Font style: B = Bold, I = Italic, BI = Bold + Italic.&#10;    array &lt;b&gt;$color&lt;/b&gt;: RGB color array (values from 0 to 255).&#10;    float &lt;b&gt;$x&lt;/b&gt;: X position in user units of the bookmark on the selected page (default = -1 = current position;s).&#10;    mixed &lt;b&gt;$link&lt;/b&gt;: URL, or numerical link ID, or named destination (# character followed by the destination name), or embedded file (* character followed by the file name).;;d111,12425;;b1,0;;m0;;e0;;i0;;o;;k;;l $txt;;p $level;;p $y;;p $page;;p $style;;p $color;;p $x;;p $link;;p;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="setBuffer;PHP:Function Name;3211394257;f11;20934;2;20937;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setBuffer($data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set buffer content (always append data).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.000 (2009-01-02)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$data&lt;/b&gt;: data;;d37,20934;;b2,0;;m0;;e0;;i0;;o;;k;;l $data;;p;;x;;n">
</treenode>
<treenode node="setCellHeightRatio;PHP:Function Name;3211394257;f8;14115;2;14117;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCellHeightRatio($h)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the height of the cell (line height) respect the font height.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.014 (2008-06-04)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$h&lt;/b&gt;: cell proportion respect font height (typical value = 1.25).;;d40,14115;;b1,0;;m0;;e0;;i0;;o;;k;;l $h;;p;;x;;n">
</treenode>
<treenode node="setCellMargins;PHP:Function Name;3211394257;f8;2725;2;2738;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCellMargins($left=null, $top=null, $right=null, $bottom=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the internal Cell margins.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.000 (2010-10-03)&#10;&lt;b&gt;see&lt;/b&gt;: getCellMargins()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|float|null &lt;b&gt;$left&lt;/b&gt;: left margin&#10;    int|float|null &lt;b&gt;$top&lt;/b&gt;: top margin&#10;    int|float|null &lt;b&gt;$right&lt;/b&gt;: right margin&#10;    int|float|null &lt;b&gt;$bottom&lt;/b&gt;: bottom margin;;d82,2725;;b1,0;;m0;;e0;;i0;;o;;k;;l $left;;p $top;;p $right;;p $bottom;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="setCellPadding;PHP:Function Name;3211394257;f8;2670;2;2677;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCellPadding($pad)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the same internal Cell padding for top, right, bottom, left-&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-09)&#10;&lt;b&gt;see&lt;/b&gt;: getCellPaddings(), setCellPaddings()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|float &lt;b&gt;$pad&lt;/b&gt;: internal padding.;;d38,2670;;b1,0;;m0;;e0;;i0;;o;;k;;l $pad;;p;;x;;n">
</treenode>
<treenode node="setCellPaddings;PHP:Function Name;3211394257;f8;2689;2;2702;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCellPaddings($left=null, $top=null, $right=null, $bottom=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the internal Cell paddings.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.000 (2010-10-03)&#10;&lt;b&gt;see&lt;/b&gt;: getCellPaddings(), SetCellPadding()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|float|null &lt;b&gt;$left&lt;/b&gt;: left padding&#10;    int|float|null &lt;b&gt;$top&lt;/b&gt;: top padding&#10;    int|float|null &lt;b&gt;$right&lt;/b&gt;: right padding&#10;    int|float|null &lt;b&gt;$bottom&lt;/b&gt;: bottom padding;;d83,2689;;b1,0;;m0;;e0;;i0;;o;;k;;l $left;;p $top;;p $right;;p $bottom;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="setColor;PHP:Function Name;3211394257;f8;3978;2;4053;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setColor($type, $col1=0, $col2=-1, $col3=-1, $col4=-1, $ret=false, $name=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the color used by the specified type (&apos;draw&apos;, &apos;fill&apos;, &apos;text&apos;).&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.125 (2011-10-03)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$type&lt;/b&gt;: Type of object affected by this color: (&apos;draw&apos;, &apos;fill&apos;, &apos;text&apos;).&#10;    float &lt;b&gt;$col1&lt;/b&gt;: GRAY level for single color, or Red color for RGB (0-255), or CYAN color for CMYK (0-100).&#10;    float &lt;b&gt;$col2&lt;/b&gt;: GREEN color for RGB (0-255), or MAGENTA color for CMYK (0-100).&#10;    float &lt;b&gt;$col3&lt;/b&gt;: BLUE color for RGB (0-255), or YELLOW color for CMYK (0-100).&#10;    float &lt;b&gt;$col4&lt;/b&gt;: KEY (BLACK) color for CMYK (0-100).&#10;    boolean &lt;b&gt;$ret&lt;/b&gt;: If true do not send the command.&#10;    string &lt;b&gt;$name&lt;/b&gt;: spot color name (if any)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The PDF command or empty string.;;d94,3978;;b1,0;;m0;;e0;;i0;;o;;k;;l $type;;p $col1;;p $col2;;p $col3;;p $col4;;p $ret;;p $name;;p;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="setColorArray;PHP:Function Name;3211394257;f8;3903;2;3921;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setColorArray($type, $color, $ret=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the color array for the specified type (&apos;draw&apos;, &apos;fill&apos;, &apos;text&apos;).&#10;It can be expressed in RGB, CMYK or GRAY SCALE components.&#10;The method can be called before the first page is created and the value is retained from page to page.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.1.000 (2008-06-11)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$type&lt;/b&gt;: Type of object affected by this color: (&apos;draw&apos;, &apos;fill&apos;, &apos;text&apos;).&#10;    array &lt;b&gt;$color&lt;/b&gt;: Array of colors (1=gray, 3=RGB, 4=CMYK or 5=spotcolor=CMYK+name values).&#10;    boolean &lt;b&gt;$ret&lt;/b&gt;: If true do not send the PDF command.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The PDF command or empty string.;;d58,3903;;b1,0;;m0;;e0;;i0;;o;;k;;l $type;;p $color;;p $ret;;p;;x;;x;;x;;n">
</treenode>
<treenode node="setColumnsArray;PHP:Function Name;3211394257;f8;21986;2;21992;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setColumnsArray($columns)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set columns array.&#10;Each column is represented by an array of arrays with the following keys: (w = width, s = space between columns, y = column top position).&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.001 (2010-03-28)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$columns&lt;/b&gt;;;d43,21986;;b1,0;;m0;;e0;;i0;;o;;k;;l $columns;;p;;x;;n">
</treenode>
<treenode node="setCompression;PHP:Function Name;3211394257;f8;2901;2;2910;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCompression($compress=true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Activates or deactivates page compression. When activated, the internal representation of each page is compressed, which leads to a compression ratio of about 2 for the resulting document. Compression is on by default.&#10;Note: the Zlib extension is required for this feature. If not present, compression will be turned off.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.4&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    boolean &lt;b&gt;$compress&lt;/b&gt;: Boolean indicating if compression must be enabled.;;d48,2901;;b1,0;;m0;;e0;;i0;;o;;k;;l $compress;;p;;x;;n">
</treenode>
<treenode node="setContentMark;PHP:Function Name;3211394257;f11;3322;2;3331;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setContentMark($page=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set start-writing mark on selected page.&#10;Borders and fills are always created after content and inserted on the position marked by this method.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.6.021 (2009-07-20)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$page&lt;/b&gt;: page number (default is the current page);;d44,3322;;b2,0;;m0;;e0;;i0;;o;;k;;l $page;;p;;x;;n">
</treenode>
<treenode node="setCreator;PHP:Function Name;3211394257;f8;2984;2;2986;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCreator($creator)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the creator of the document. This is typically the name of the application that generates the PDF.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.2&#10;&lt;b&gt;see&lt;/b&gt;: SetAuthor(), SetKeywords(), SetSubject(), SetTitle()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$creator&lt;/b&gt;: The name of the creator.;;d38,2984;;b1,0;;m0;;e0;;i0;;o;;k;;l $creator;;p;;x;;n">
</treenode>
<treenode node="setDefaultMonospacedFont;PHP:Function Name;3211394257;f8;4777;2;4779;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDefaultMonospacedFont($font)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the default monospaced font.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.025&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$font&lt;/b&gt;: Font name.;;d49,4777;;b1,0;;m0;;e0;;i0;;o;;k;;l $font;;p;;x;;n">
</treenode>
<treenode node="setDefaultTableColumns;PHP:Function Name;3211394257;f8;14105;2;14107;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDefaultTableColumns($cols=4)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the default number of columns in a row for HTML tables.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.014 (2008-06-04)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$cols&lt;/b&gt;: number of columns;;d49,14105;;b1,0;;m0;;e0;;i0;;o;;k;;l $cols;;p;;x;;n">
</treenode>
<treenode node="setDestination;PHP:Function Name;3211394257;f8;12346;2;12380;;;;vpos;;v;;astring|false;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDestination($name, $y=-1, $page=&apos;&apos;, $x=-1)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add a Named Destination.&#10;NOTE: destination names are unique, so only last entry will be saved.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Christian Deligant, Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.097 (2011-06-23)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: Destination name.&#10;    float &lt;b&gt;$y&lt;/b&gt;: Y position in user units of the destiantion on the selected page (default = -1 = current position;s 0 = page start;s).&#10;    int|string &lt;b&gt;$page&lt;/b&gt;: Target page number (leave empty for current page). If you prefix a page number with the * character, then this page will not be changed when adding/deleting/moving pages.&#10;    float &lt;b&gt;$x&lt;/b&gt;: X position in user units of the destiantion on the selected page (default = -1 = current position;s).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Stripped named destination identifier or false in case of error.;;d63,12346;;b1,0;;m0;;e0;;i0;;o;;k;;l $name;;p $y;;p $page;;p $x;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="setDisplayMode;PHP:Function Name;3211394257;f8;2884;2;2892;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDisplayMode($zoom, $layout=&apos;SinglePage&apos;, $mode=&apos;UseNone&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the way the document is to be displayed by the viewer.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.2&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$zoom&lt;/b&gt;: The zoom to use. It can be one of the following string values or a number indicating the zooming factor to use. &lt;ul&gt;&lt;li&gt;fullpage: displays the entire page on screen &lt;/li&gt;&lt;li&gt;fullwidth: uses maximum width of window&lt;/li&gt;&lt;li&gt;real: uses real size (equivalent to 100% zoom)&lt;/li&gt;&lt;li&gt;default: uses viewer default mode&lt;/li&gt;&lt;/ul&gt;&#10;    string &lt;b&gt;$layout&lt;/b&gt;: The page layout. Possible values are:&lt;ul&gt;&lt;li&gt;SinglePage Display one page at a time&lt;/li&gt;&lt;li&gt;OneColumn Display the pages in one column&lt;/li&gt;&lt;li&gt;TwoColumnLeft Display the pages in two columns, with odd-numbered pages on the left&lt;/li&gt;&lt;li&gt;TwoColumnRight Display the pages in two columns, with odd-numbered pages on the right&lt;/li&gt;&lt;li&gt;TwoPageLeft (PDF 1.5) Display the pages two at a time, with odd-numbered pages on the left&lt;/li&gt;&lt;li&gt;TwoPageRight (PDF 1.5) Display the pages two at a time, with odd-numbered pages on the right&lt;/li&gt;&lt;/ul&gt;&#10;    string &lt;b&gt;$mode&lt;/b&gt;: A name object specifying how the document should be displayed when opened:&lt;ul&gt;&lt;li&gt;UseNone Neither document outline nor thumbnail images visible&lt;/li&gt;&lt;li&gt;UseOutlines Document outline visible&lt;/li&gt;&lt;li&gt;UseThumbs Thumbnail images visible&lt;/li&gt;&lt;li&gt;FullScreen Full-screen mode, with no menu bar, window controls, or any other window visible&lt;/li&gt;&lt;li&gt;UseOC (PDF 1.5) Optional content group panel visible&lt;/li&gt;&lt;li&gt;UseAttachments (PDF 1.6) Attachments panel visible&lt;/li&gt;&lt;/ul&gt;;;d78,2884;;b1,0;;m0;;e0;;i0;;o;;k;;l $zoom;;p $layout;;p $mode;;p;;x;;x;;x;;n">
</treenode>
<treenode node="setDocCreationTimestamp;PHP:Function Name;3211394257;f8;10318;2;10323;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDocCreationTimestamp($time)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the document creation timestamp&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.152 (2012-03-23)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$time&lt;/b&gt;: Document creation timestamp in seconds or date-time string.;;d48,10318;;b1,0;;m0;;e0;;i0;;o;;k;;l $time;;p;;x;;n">
</treenode>
<treenode node="setDocInfoUnicode;PHP:Function Name;3211394257;f8;2929;2;2931;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDocInfoUnicode($unicode=true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Turn on/off Unicode mode for document information dictionary (meta tags).&#10;This has effect only when unicode mode is set to false.&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.027 (2010-12-01)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    boolean &lt;b&gt;$unicode&lt;/b&gt;: if true set the meta information in Unicode;;d50,2929;;b1,0;;m0;;e0;;i0;;o;;k;;l $unicode;;p;;x;;n">
</treenode>
<treenode node="setDocModificationTimestamp;PHP:Function Name;3211394257;f8;10331;2;10336;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDocModificationTimestamp($time)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the document modification timestamp&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.152 (2012-03-23)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$time&lt;/b&gt;: Document modification timestamp in seconds or date-time string.;;d52,10331;;b1,0;;m0;;e0;;i0;;o;;k;;l $time;;p;;x;;n">
</treenode>
<treenode node="setDrawColor;PHP:Function Name;3211394257;f8;4068;2;4070;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDrawColor($col1=0, $col2=-1, $col3=-1, $col4=-1, $ret=false, $name=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the color used for all drawing operations (lines, rectangles and cell borders). It can be expressed in RGB components or gray scale. The method can be called before the first page is created and the value is retained from page to page.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.3&#10;&lt;b&gt;see&lt;/b&gt;: SetDrawColorArray(), SetFillColor(), SetTextColor(), Line(), Rect(), Cell(), MultiCell()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$col1&lt;/b&gt;: GRAY level for single color, or Red color for RGB (0-255), or CYAN color for CMYK (0-100).&#10;    float &lt;b&gt;$col2&lt;/b&gt;: GREEN color for RGB (0-255), or MAGENTA color for CMYK (0-100).&#10;    float &lt;b&gt;$col3&lt;/b&gt;: BLUE color for RGB (0-255), or YELLOW color for CMYK (0-100).&#10;    float &lt;b&gt;$col4&lt;/b&gt;: KEY (BLACK) color for CMYK (0-100).&#10;    boolean &lt;b&gt;$ret&lt;/b&gt;: If true do not send the command.&#10;    string &lt;b&gt;$name&lt;/b&gt;: spot color name (if any)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the PDF command;;d91,4068;;b1,0;;m0;;e0;;i0;;o;;k;;l $col1;;p $col2;;p $col3;;p $col4;;p $ret;;p $name;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="setDrawColorArray;PHP:Function Name;3211394257;f8;3934;2;3936;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDrawColorArray($color, $ret=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the color used for all drawing operations (lines, rectangles and cell borders).&#10;It can be expressed in RGB, CMYK or GRAY SCALE components.&#10;The method can be called before the first page is created and the value is retained from page to page.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.1.000 (2008-06-11)&#10;&lt;b&gt;see&lt;/b&gt;: SetDrawColor()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$color&lt;/b&gt;: Array of colors (1, 3 or 4 values).&#10;    boolean &lt;b&gt;$ret&lt;/b&gt;: If true do not send the PDF command.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the PDF command;;d55,3934;;b1,0;;m0;;e0;;i0;;o;;k;;l $color;;p $ret;;p;;x;;x;;n">
</treenode>
<treenode node="setDrawSpotColor;PHP:Function Name;3211394257;f8;3864;2;3866;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDrawSpotColor($name, $tint=100)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the spot color used for all drawing operations (lines, rectangles and cell borders).&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.024 (2008-09-12)&#10;&lt;b&gt;see&lt;/b&gt;: AddSpotColor(), SetFillSpotColor(), SetTextSpotColor()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: Name of the spot color.&#10;    float &lt;b&gt;$tint&lt;/b&gt;: Intensity of the color (from 0 to 100 ;s 100 = full intensity by default).;;d52,3864;;b1,0;;m0;;e0;;i0;;o;;k;;l $name;;p $tint;;p;;x;;x;;n">
</treenode>
<treenode node="setEqualColumns;PHP:Function Name;3211394257;f8;21941;2;21966;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setEqualColumns($numcols=0, $width=0, $y=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set multiple columns of the same size&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.001 (2010-03-28)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$numcols&lt;/b&gt;: number of columns (set to zero to disable columns mode)&#10;    int &lt;b&gt;$width&lt;/b&gt;: column width&#10;    int|null &lt;b&gt;$y&lt;/b&gt;: column starting Y position (leave empty for current Y position);;d64,21941;;b1,0;;m0;;e0;;i0;;o;;k;;l $numcols;;p $width;;p $y;;p;;x;;x;;x;;n">
</treenode>
<treenode node="setExtGState;PHP:Function Name;3211394257;f11;13969;2;13975;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setExtGState($gs)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add an extgstate&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.000 (2008-03-27)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$gs&lt;/b&gt;: extgstate;;d38,13969;;b2,0;;m0;;e0;;i0;;o;;k;;l $gs;;p;;x;;n">
</treenode>
<treenode node="setExtraXMP;PHP:Function Name;3211394257;f8;9616;2;9618;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setExtraXMP($xmp)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set additional XMP data to be added on the default XMP data just before the end of &quot;x:xmpmeta&quot; tag.&#10;IMPORTANT: This data is added as-is without controls, so you have to validate your data before using this method!&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.128 (2011-10-06)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$xmp&lt;/b&gt;: Custom XMP data.;;d35,9616;;b1,0;;m0;;e0;;i0;;o;;k;;l $xmp;;p;;x;;n">
</treenode>
<treenode node="setExtraXMPRDF;PHP:Function Name;3211394257;f8;9627;2;9629;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setExtraXMPRDF($xmp)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set additional XMP data to be added on the default XMP data just before the end of &quot;rdf:RDF&quot; tag.&#10;IMPORTANT: This data is added as-is without controls, so you have to validate your data before using this method!&#10;&lt;b&gt;since&lt;/b&gt;: 6.3.0 (2019-09-19)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$xmp&lt;/b&gt;: Custom XMP RDF data.;;d38,9627;;b1,0;;m0;;e0;;i0;;o;;k;;l $xmp;;p;;x;;n">
</treenode>
<treenode node="setFillColor;PHP:Function Name;3211394257;f8;4085;2;4087;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFillColor($col1=0, $col2=-1, $col3=-1, $col4=-1, $ret=false, $name=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the color used for all filling operations (filled rectangles and cell backgrounds). It can be expressed in RGB components or gray scale. The method can be called before the first page is created and the value is retained from page to page.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.3&#10;&lt;b&gt;see&lt;/b&gt;: SetFillColorArray(), SetDrawColor(), SetTextColor(), Rect(), Cell(), MultiCell()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$col1&lt;/b&gt;: GRAY level for single color, or Red color for RGB (0-255), or CYAN color for CMYK (0-100).&#10;    float &lt;b&gt;$col2&lt;/b&gt;: GREEN color for RGB (0-255), or MAGENTA color for CMYK (0-100).&#10;    float &lt;b&gt;$col3&lt;/b&gt;: BLUE color for RGB (0-255), or YELLOW color for CMYK (0-100).&#10;    float &lt;b&gt;$col4&lt;/b&gt;: KEY (BLACK) color for CMYK (0-100).&#10;    boolean &lt;b&gt;$ret&lt;/b&gt;: If true do not send the command.&#10;    string &lt;b&gt;$name&lt;/b&gt;: Spot color name (if any).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The PDF command.;;d91,4085;;b1,0;;m0;;e0;;i0;;o;;k;;l $col1;;p $col2;;p $col3;;p $col4;;p $ret;;p $name;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="setFillColorArray;PHP:Function Name;3211394257;f8;3948;2;3950;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFillColorArray($color, $ret=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the color used for all filling operations (filled rectangles and cell backgrounds).&#10;It can be expressed in RGB, CMYK or GRAY SCALE components.&#10;The method can be called before the first page is created and the value is retained from page to page.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.1.000 (2008-6-11)&#10;&lt;b&gt;see&lt;/b&gt;: SetFillColor()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$color&lt;/b&gt;: Array of colors (1, 3 or 4 values).&#10;    boolean &lt;b&gt;$ret&lt;/b&gt;: If true do not send the PDF command.;;d55,3948;;b1,0;;m0;;e0;;i0;;o;;k;;l $color;;p $ret;;p;;x;;x;;n">
</treenode>
<treenode node="setFillSpotColor;PHP:Function Name;3211394257;f8;3876;2;3878;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFillSpotColor($name, $tint=100)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the spot color used for all filling operations (filled rectangles and cell backgrounds).&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.024 (2008-09-12)&#10;&lt;b&gt;see&lt;/b&gt;: AddSpotColor(), SetDrawSpotColor(), SetTextSpotColor()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: Name of the spot color.&#10;    float &lt;b&gt;$tint&lt;/b&gt;: Intensity of the color (from 0 to 100 ;s 100 = full intensity by default).;;d52,3876;;b1,0;;m0;;e0;;i0;;o;;k;;l $name;;p $tint;;p;;x;;x;;n">
</treenode>
<treenode node="setFont;PHP:Function Name;3211394257;f8;4531;2;4549;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFont($family, $style=&apos;&apos;, $size=null, $fontfile=&apos;&apos;, $subset=&apos;default&apos;, $out=true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the font used to print character strings.&#10;The font can be either a standard one or a font added via the AddFont() method. Standard fonts use Windows encoding cp1252 (Western Europe).&#10;The method can be called before the first page is created and the font is retained from page to page.&#10;If you just wish to change the current font size, it is simpler to call SetFontSize().&#10;Note: for the standard fonts, the font metric files must be accessible. There are three possibilities for this:&lt;ul&gt;&lt;li&gt;They are in the current directory (the one where the running script lies)&lt;/li&gt;&lt;li&gt;They are in one of the directories defined by the include_path parameter&lt;/li&gt;&lt;li&gt;They are in the directory defined by the K_PATH_FONTS constant&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0&#10;&lt;b&gt;see&lt;/b&gt;: AddFont(), SetFontSize()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$family&lt;/b&gt;: Family font. It can be either a name defined by AddFont() or one of the standard Type1 families (case insensitive):&lt;ul&gt;&lt;li&gt;times (Times-Roman)&lt;/li&gt;&lt;li&gt;timesb (Times-Bold)&lt;/li&gt;&lt;li&gt;timesi (Times-Italic)&lt;/li&gt;&lt;li&gt;timesbi (Times-BoldItalic)&lt;/li&gt;&lt;li&gt;helvetica (Helvetica)&lt;/li&gt;&lt;li&gt;helveticab (Helvetica-Bold)&lt;/li&gt;&lt;li&gt;helveticai (Helvetica-Oblique)&lt;/li&gt;&lt;li&gt;helveticabi (Helvetica-BoldOblique)&lt;/li&gt;&lt;li&gt;courier (Courier)&lt;/li&gt;&lt;li&gt;courierb (Courier-Bold)&lt;/li&gt;&lt;li&gt;courieri (Courier-Oblique)&lt;/li&gt;&lt;li&gt;courierbi (Courier-BoldOblique)&lt;/li&gt;&lt;li&gt;symbol (Symbol)&lt;/li&gt;&lt;li&gt;zapfdingbats (ZapfDingbats)&lt;/li&gt;&lt;/ul&gt; It is also possible to pass an empty string. In that case, the current family is retained.&#10;    string &lt;b&gt;$style&lt;/b&gt;: Font style. Possible values are (case insensitive):&lt;ul&gt;&lt;li&gt;empty string: regular&lt;/li&gt;&lt;li&gt;B: bold&lt;/li&gt;&lt;li&gt;I: italic&lt;/li&gt;&lt;li&gt;U: underline&lt;/li&gt;&lt;li&gt;D: line through&lt;/li&gt;&lt;li&gt;O: overline&lt;/li&gt;&lt;/ul&gt; or any combination. The default value is regular. Bold and italic styles do not apply to Symbol and ZapfDingbats basic fonts or other fonts when not defined.&#10;    float|null &lt;b&gt;$size&lt;/b&gt;: Font size in points. The default value is the current size. If no size has been specified since the beginning of the document, the value taken is 12&#10;    string &lt;b&gt;$fontfile&lt;/b&gt;: The font definition file. By default, the name is built from the family and style, in lower case with no spaces.&#10;    mixed &lt;b&gt;$subset&lt;/b&gt;: if true embedd only a subset of the font (stores only the information related to the used characters);s if false embedd full font;s if &apos;default&apos; uses the default value set using setFontSubsetting(). This option is valid only for TrueTypeUnicode fonts. If you want to enable users to change the document, set this parameter to false. If you subset the font, the person who receives your PDF would need to have your same font in order to make changes to your PDF. The file size of the PDF would also be smaller because you are embedding only part of a font.&#10;    boolean &lt;b&gt;$out&lt;/b&gt;: if true output the font size command, otherwise only set the font properties.;;d101,4531;;b1,0;;m0;;e0;;i0;;o;;k;;l $family;;p $style;;p $size;;p $fontfile;;p $subset;;p $out;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="setFontBuffer;PHP:Function Name;3211394257;f11;21049;2;21058;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFontBuffer($font, $data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set font buffer content.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.000 (2009-01-02)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$font&lt;/b&gt;: font key&#10;    array &lt;b&gt;$data&lt;/b&gt;: font data;;d48,21049;;b2,0;;m0;;e0;;i0;;o;;k;;l $font;;p $data;;p;;x;;x;;n">
</treenode>
<treenode node="setFontSize;PHP:Function Name;3211394257;f8;4559;2;4592;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFontSize($size, $out=true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the size of the current font.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0&#10;&lt;b&gt;see&lt;/b&gt;: SetFont()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$size&lt;/b&gt;: The font size in points.&#10;    boolean &lt;b&gt;$out&lt;/b&gt;: if true output the font size command, otherwise only set the font properties.;;d47,4559;;b1,0;;m0;;e0;;i0;;o;;k;;l $size;;p $out;;p;;x;;x;;n">
</treenode>
<treenode node="setFontSpacing;PHP:Function Name;3211394257;f8;22743;2;22745;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFontSpacing($spacing=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the amount to increase or decrease the space between characters in a text.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.000 (2010-09-29)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$spacing&lt;/b&gt;: amount to increase or decrease the space between characters in a text (0 = default spacing);;d44,22743;;b1,0;;m0;;e0;;i0;;o;;k;;l $spacing;;p;;x;;n">
</treenode>
<treenode node="setFontStretching;PHP:Function Name;3211394257;f8;22721;2;22723;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFontStretching($perc=100)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the percentage of character stretching.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.000 (2010-09-29)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$perc&lt;/b&gt;: percentage of stretching (100 = no stretching);;d46,22721;;b1,0;;m0;;e0;;i0;;o;;k;;l $perc;;p;;x;;n">
</treenode>
<treenode node="setFontSubBuffer;PHP:Function Name;3211394257;f11;21068;2;21073;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFontSubBuffer($font, $key, $data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set font buffer content.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.000 (2009-01-02)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$font&lt;/b&gt;: font key&#10;    string &lt;b&gt;$key&lt;/b&gt;: font sub-key&#10;    mixed &lt;b&gt;$data&lt;/b&gt;: font data;;d57,21068;;b2,0;;m0;;e0;;i0;;o;;k;;l $font;;p $key;;p $data;;p;;x;;x;;x;;n">
</treenode>
<treenode node="setFontSubsetting;PHP:Function Name;3211394257;f8;22371;2;22377;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFontSubsetting($enable=true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Enable or disable default option for font subsetting.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.3.002 (2010-06-07)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    boolean &lt;b&gt;$enable&lt;/b&gt;: if true enable font subsetting by default.;;d49,22371;;b1,0;;m0;;e0;;i0;;o;;k;;l $enable;;p;;x;;n">
</treenode>
<treenode node="setFooter;PHP:Function Name;3211394257;f11;3643;2;3691;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFooter()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to render the page footer.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.012 (2008-07-24);;d32,3643;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="setFooterData;PHP:Function Name;3211394257;f8;3358;2;3361;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFooterData($tc=array(0,0,0), $lc=array(0,0,0))&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set footer data.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int[] &lt;b&gt;$tc&lt;/b&gt;: RGB array color for text.&#10;    int[] &lt;b&gt;$lc&lt;/b&gt;: RGB array color for line.;;d67,3358;;b1,0;;m0;;e0;;i0;;o;;k;;l $tc;;p $lc;;p;;x;;x;;n">
</treenode>
<treenode node="setFooterFont;PHP:Function Name;3211394257;f8;10461;2;10463;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFooterFont($font)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set footer font.&#10;&lt;b&gt;phpstan&lt;/b&gt;: -param array{0: string, 1: string, 2: float|null} $font&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.1&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array&lt;int,string|float|null&gt; &lt;b&gt;$font&lt;/b&gt;: Array describing the basic font parameters: (family, style, size).;;d38,10461;;b1,0;;m0;;e0;;i0;;o;;k;;l $font;;p;;x;;n">
</treenode>
<treenode node="setFooterMargin;PHP:Function Name;3211394257;f8;3407;2;3409;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFooterMargin($fm=10)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set footer margin.&#10;(minimum distance between footer and bottom page margin)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$fm&lt;/b&gt;: distance in user units;;d41,3407;;b1,0;;m0;;e0;;i0;;o;;k;;l $fm;;p;;x;;n">
</treenode>
<treenode node="setFormDefaultProp;PHP:Function Name;3211394257;f8;12757;2;12759;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFormDefaultProp($prop=array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set default properties for form fields.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.000 (2009-09-06)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$prop&lt;/b&gt;: javascript field properties. Possible values are described on official Javascript for Acrobat API reference.;;d51,12757;;b1,0;;m0;;e0;;i0;;o;;k;;l $prop;;p;;x;;n">
</treenode>
<treenode node="setGraphicVars;PHP:Function Name;3211394257;f11;20852;2;20910;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setGraphicVars($gvars, $extended=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set graphic variables.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.2.010 (2008-11-14)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$gvars&lt;/b&gt;: array of graphic variablesto restore&#10;    boolean &lt;b&gt;$extended&lt;/b&gt;: if true restore extended graphic variables;;d60,20852;;b2,0;;m0;;e0;;i0;;o;;k;;l $gvars;;p $extended;;p;;x;;x;;n">
</treenode>
<treenode node="setHeader;PHP:Function Name;3211394257;f11;3602;2;3636;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setHeader()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to render the page header.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.012 (2008-07-24);;d32,3602;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="setHeaderData;PHP:Function Name;3211394257;f8;3343;2;3350;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setHeaderData($ln=&apos;&apos;, $lw=0, $ht=&apos;&apos;, $hs=&apos;&apos;, $tc=array(0,0,0), $lc=array(0,0,0))&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set header data.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$ln&lt;/b&gt;: header image logo&#10;    int &lt;b&gt;$lw&lt;/b&gt;: header image logo width in mm&#10;    string &lt;b&gt;$ht&lt;/b&gt;: string to print as title on document header&#10;    string &lt;b&gt;$hs&lt;/b&gt;: string to print on document header&#10;    int[] &lt;b&gt;$tc&lt;/b&gt;: RGB array color for text.&#10;    int[] &lt;b&gt;$lc&lt;/b&gt;: RGB array color for line.;;d98,3343;;b1,0;;m0;;e0;;i0;;o;;k;;l $ln;;p $lw;;p $ht;;p $hs;;p $tc;;p $lc;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="setHeaderFont;PHP:Function Name;3211394257;f8;10439;2;10441;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setHeaderFont($font)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set header font.&#10;&lt;b&gt;phpstan&lt;/b&gt;: -param array{0: string, 1: string, 2: float|null} $font&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.1&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array&lt;int,string|float|null&gt; &lt;b&gt;$font&lt;/b&gt;: Array describing the basic font parameters: (family, style, size).;;d38,10439;;b1,0;;m0;;e0;;i0;;o;;k;;l $font;;p;;x;;n">
</treenode>
<treenode node="setHeaderMargin;PHP:Function Name;3211394257;f8;3387;2;3389;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setHeaderMargin($hm=10)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set header margin.&#10;(minimum distance between header and top page margin)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$hm&lt;/b&gt;: distance in user units;;d41,3387;;b1,0;;m0;;e0;;i0;;o;;k;;l $hm;;p;;x;;n">
</treenode>
<treenode node="setHeaderTemplateAutoreset;PHP:Function Name;3211394257;f8;3469;2;3471;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setHeaderTemplateAutoreset($val=true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set a flag to automatically reset the xobject template used by Header() method at each page.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    boolean &lt;b&gt;$val&lt;/b&gt;: set to true to reset Header xobject template at each page, false otherwise.;;d55,3469;;b1,0;;m0;;e0;;i0;;o;;k;;l $val;;p;;x;;n">
</treenode>
<treenode node="setHtmlLinksStyle;PHP:Function Name;3211394257;f8;20490;2;20493;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setHtmlLinksStyle($color=array(0,0,255), $fontstyle=&apos;U&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the color and font style for HTML links.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.4.003 (2008-12-09)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$color&lt;/b&gt;: RGB array of colors&#10;    string &lt;b&gt;$fontstyle&lt;/b&gt;: additional font styles to add;;d74,20490;;b1,0;;m0;;e0;;i0;;o;;k;;l $color;;p $fontstyle;;p;;x;;x;;n">
</treenode>
<treenode node="setHtmlVSpace;PHP:Function Name;3211394257;f8;20459;2;20461;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setHtmlVSpace($tagvs)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the vertical spaces for HTML tags.&#10;The array must have the following structure (example):&#10;$tagvs = array(&apos;h1&apos; =&gt; array(0 =&gt; array(&apos;h&apos; =&gt; &apos;&apos;, &apos;n&apos; =&gt; 2), 1 =&gt; array(&apos;h&apos; =&gt; 1.3, &apos;n&apos; =&gt; 1)));s&#10;The first array level contains the tag names,&#10;the second level contains 0 for opening tags or 1 for closing tags,&#10;the third level contains the vertical space unit (h) and the number spaces to add (n).&#10;If the h parameter is not specified, default values are used.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.2.001 (2008-10-30)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$tagvs&lt;/b&gt;: array of tags and relative vertical spaces.;;d39,20459;;b1,0;;m0;;e0;;i0;;o;;k;;l $tagvs;;p;;x;;n">
</treenode>
<treenode node="setImageBuffer;PHP:Function Name;3211394257;f11;21003;2;21011;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setImageBuffer($image, $data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set image buffer content.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.000 (2008-12-31)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$image&lt;/b&gt;: image key&#10;    array &lt;b&gt;$data&lt;/b&gt;: image data&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   image index number;;d50,21003;;b2,0;;m0;;e0;;i0;;o;;k;;l $image;;p $data;;p;;x;;x;;n">
</treenode>
<treenode node="setImageScale;PHP:Function Name;3211394257;f8;2504;2;2506;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setImageScale($scale)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the adjusting factor to convert pixels to user units.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.5.2&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$scale&lt;/b&gt;: adjusting factor to convert pixels to user units.;;d39,2504;;b1,0;;m0;;e0;;i0;;o;;k;;l $scale;;p;;x;;n">
</treenode>
<treenode node="setImageSubBuffer;PHP:Function Name;3211394257;f11;21021;2;21026;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setImageSubBuffer($image, $key, $data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set image buffer content for a specified sub-key.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.000 (2008-12-31)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$image&lt;/b&gt;: image key&#10;    string &lt;b&gt;$key&lt;/b&gt;: image sub-key&#10;    array &lt;b&gt;$data&lt;/b&gt;: image data;;d59,21021;;b2,0;;m0;;e0;;i0;;o;;k;;l $image;;p $key;;p $data;;p;;x;;x;;x;;n">
</treenode>
<treenode node="setJPEGQuality;PHP:Function Name;3211394257;f8;14092;2;14097;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setJPEGQuality($quality)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the default JPEG compression quality (1-100)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.000 (2008-03-27)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$quality&lt;/b&gt;: JPEG quality, integer between 1 and 100;;d42,14092;;b1,0;;m0;;e0;;i0;;o;;k;;l $quality;;p;;x;;n">
</treenode>
<treenode node="setKeywords;PHP:Function Name;3211394257;f8;2973;2;2975;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setKeywords($keywords)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Associates keywords with the document, generally in the form &apos;keyword1 keyword2 ...&apos;.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.2&#10;&lt;b&gt;see&lt;/b&gt;: SetAuthor(), SetCreator(), SetSubject(), SetTitle()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$keywords&lt;/b&gt;: The list of keywords.;;d40,2973;;b1,0;;m0;;e0;;i0;;o;;k;;l $keywords;;p;;x;;n">
</treenode>
<treenode node="setLIsymbol;PHP:Function Name;3211394257;f8;20396;2;20409;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setLIsymbol($symbol=&apos;!&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the default bullet to be used as LI bullet symbol&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.028 (2008-09-26)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$symbol&lt;/b&gt;: character or string to be used (legal values are: &apos;&apos; = automatic, &apos;!&apos; = auto bullet, &apos;#&apos; = auto numbering, &apos;disc&apos;, &apos;disc&apos;, &apos;circle&apos;, &apos;square&apos;, &apos;1&apos;, &apos;decimal&apos;, &apos;decimal-leading-zero&apos;, &apos;i&apos;, &apos;lower-roman&apos;, &apos;I&apos;, &apos;upper-roman&apos;, &apos;a&apos;, &apos;lower-alpha&apos;, &apos;lower-latin&apos;, &apos;A&apos;, &apos;upper-alpha&apos;, &apos;upper-latin&apos;, &apos;lower-greek&apos;, &apos;img|type|width|height|image.ext&apos;);;d42,20396;;b1,0;;m0;;e0;;i0;;o;;k;;l $symbol;;p;;x;;n">
</treenode>
<treenode node="setLanguageArray;PHP:Function Name;3211394257;f8;10482;2;10489;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setLanguageArray($language)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set language array.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.1&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$language&lt;/b&gt;;;d45,10482;;b1,0;;m0;;e0;;i0;;o;;k;;l $language;;p;;x;;n">
</treenode>
<treenode node="setLastH;PHP:Function Name;3211394257;f8;2459;2;2461;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setLastH($h)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the last cell height.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.53.0.TC034&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$h&lt;/b&gt;: cell height.;;d30,2459;;b1,0;;m0;;e0;;i0;;o;;k;;l $h;;p;;x;;n">
</treenode>
<treenode node="setLeftMargin;PHP:Function Name;3211394257;f8;2626;2;2632;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setLeftMargin($margin)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the left margin. The method can be called before creating the first page. If the current abscissa gets out of page, it is brought back to the margin.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.4&#10;&lt;b&gt;see&lt;/b&gt;: SetTopMargin(), SetRightMargin(), SetAutoPageBreak(), SetMargins()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|float &lt;b&gt;$margin&lt;/b&gt;: The margin.;;d40,2626;;b1,0;;m0;;e0;;i0;;o;;k;;l $margin;;p;;x;;n">
</treenode>
<treenode node="setLineStyle;PHP:Function Name;3211394257;f8;11462;2;11515;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setLineStyle($style, $ret=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set line style.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-08)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$style&lt;/b&gt;: Line style. Array with keys among the following: &lt;ul&gt; &lt;li&gt;width (float): Width of the line in user units.&lt;/li&gt; &lt;li&gt;cap (string): Type of cap to put on the line. Possible values are: butt, round, square. The difference between &quot;square&quot; and &quot;butt&quot; is that &quot;square&quot; projects a flat end past the end of the line.&lt;/li&gt; &lt;li&gt;join (string): Type of join. Possible values are: miter, round, bevel.&lt;/li&gt; &lt;li&gt;dash (mixed): Dash pattern. Is 0 (without dash) or string with series of length values, which are the lengths of the on and off dashes. For example: &quot;2&quot; represents 2 on, 2 off, 2 on, 2 off, ...;s &quot;2,1&quot; is 2 on, 1 off, 2 on, 1 off, ...&lt;/li&gt; &lt;li&gt;phase (integer): Modifier on the dash pattern which is used to shift the point at which the pattern starts.&lt;/li&gt; &lt;li&gt;color (array): Draw color. Format: array(GREY) or array(R,G,B) or array(C,M,Y,K) or array(C,M,Y,K,SpotColorName).&lt;/li&gt; &lt;/ul&gt;&#10;    boolean &lt;b&gt;$ret&lt;/b&gt;: if true do not send the command.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the PDF command;;d50,11462;;b1,0;;m0;;e0;;i0;;o;;k;;l $style;;p $ret;;p;;x;;x;;n">
</treenode>
<treenode node="setLineWidth;PHP:Function Name;3211394257;f8;11419;2;11426;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setLineWidth($width)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the line width. By default, the value equals 0.2 mm. The method can be called before the first page is created and the value is retained from page to page.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0&#10;&lt;b&gt;see&lt;/b&gt;: Line(), Rect(), Cell(), MultiCell()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$width&lt;/b&gt;: The width.;;d38,11419;;b1,0;;m0;;e0;;i0;;o;;k;;l $width;;p;;x;;n">
</treenode>
<treenode node="setLink;PHP:Function Name;3211394257;f8;4804;2;4818;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setLink($link, $y=0, $page=-1)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the page and position a link points to.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.5&#10;&lt;b&gt;see&lt;/b&gt;: AddLink()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$link&lt;/b&gt;: The link identifier returned by AddLink()&#10;    float &lt;b&gt;$y&lt;/b&gt;: Ordinate of target position;s -1 indicates the current position. The default value is 0 (top of page)&#10;    int|string &lt;b&gt;$page&lt;/b&gt;: Number of target page;s -1 indicates the current page (default value). If you prefix a page number with the * character, then this page will not be changed when adding/deleting/moving pages.;;d48,4804;;b1,0;;m0;;e0;;i0;;o;;k;;l $link;;p $y;;p $page;;p;;x;;x;;x;;n">
</treenode>
<treenode node="setListIndentWidth;PHP:Function Name;3211394257;f8;20469;2;20471;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setListIndentWidth($width)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set custom width for list indentation.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.2.007 (2008-11-12)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$width&lt;/b&gt;: width of the indentation. Use negative value to disable it.;;d44,20469;;b1,0;;m0;;e0;;i0;;o;;k;;l $width;;p;;x;;n">
</treenode>
<treenode node="setMargins;PHP:Function Name;3211394257;f8;2604;2;2617;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setMargins($left, $top, $right=null, $keepmargins=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the left, top and right margins.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0&#10;&lt;b&gt;see&lt;/b&gt;: SetLeftMargin(), SetTopMargin(), SetRightMargin(), SetAutoPageBreak()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|float &lt;b&gt;$left&lt;/b&gt;: Left margin.&#10;    int|float &lt;b&gt;$top&lt;/b&gt;: Top margin.&#10;    int|float|null &lt;b&gt;$right&lt;/b&gt;: Right margin. Default value is the left one.&#10;    boolean &lt;b&gt;$keepmargins&lt;/b&gt;: if true overwrites the default page margins;;d74,2604;;b1,0;;m0;;e0;;i0;;o;;k;;l $left;;p $top;;p $right;;p $keepmargins;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="setOpenCell;PHP:Function Name;3211394257;f8;20479;2;20481;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setOpenCell($isopen)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the top/bottom cell sides to be open or closed when the cell cross the page.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.2.010 (2008-11-14)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    boolean &lt;b&gt;$isopen&lt;/b&gt;: if true keeps the top/bottom border open for the cell sides that cross the page.;;d38,20479;;b1,0;;m0;;e0;;i0;;o;;k;;l $isopen;;p;;x;;n">
</treenode>
<treenode node="setOverprint;PHP:Function Name;3211394257;f8;14011;2;14028;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setOverprint($stroking=true, $nonstroking=null, $mode=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set overprint mode for stroking (OP) and non-stroking (op) painting operations.&#10;(Check the &quot;Entries in a Graphics State Parameter Dictionary&quot; on PDF 32000-1:2008).&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.152 (2012-03-23)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    boolean &lt;b&gt;$stroking&lt;/b&gt;: If true apply overprint for stroking operations.&#10;    boolean|null &lt;b&gt;$nonstroking&lt;/b&gt;: If true apply overprint for painting operations other than stroking.&#10;    integer &lt;b&gt;$mode&lt;/b&gt;: Overprint mode: (0 = each source colour component value replaces the value previously painted for the corresponding device colorant;s 1 = a tint value of 0.0 for a source colour component shall leave the corresponding component of the previously painted colour unchanged).;;d74,14011;;b1,0;;m0;;e0;;i0;;o;;k;;l $stroking;;p $nonstroking;;p $mode;;p;;x;;x;;x;;n">
</treenode>
<treenode node="setPDFVersion;PHP:Function Name;3211394257;f8;14135;2;14145;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPDFVersion($version=&apos;1.7&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the PDF version (check PDF reference for valid values).&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.1.000 (2008-06-09)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$version&lt;/b&gt;: PDF document version.;;d47,14135;;b1,0;;m0;;e0;;i0;;o;;k;;l $version;;p;;x;;n">
</treenode>
<treenode node="setPage;PHP:Function Name;3211394257;f8;3081;2;3119;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPage($pnum, $resetmargins=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Move pointer at the specified document page and update page dimensions.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-07)&#10;&lt;b&gt;see&lt;/b&gt;: getPage(), lastpage(), getNumPages()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$pnum&lt;/b&gt;: page number (1 ... numpages)&#10;    boolean &lt;b&gt;$resetmargins&lt;/b&gt;: if true reset left, right, top margins and Y position.;;d53,3081;;b1,0;;m0;;e0;;i0;;o;;k;;l $pnum;;p $resetmargins;;p;;x;;x;;n">
</treenode>
<treenode node="setPageBoxTypes;PHP:Function Name;3211394257;f11;7991;2;7998;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPageBoxTypes($boxes)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set page boxes to be included on page descriptions.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$boxes&lt;/b&gt;: Array of page boxes to set on document: (&apos;MediaBox&apos;, &apos;CropBox&apos;, &apos;BleedBox&apos;, &apos;TrimBox&apos;, &apos;ArtBox&apos;).;;d44,7991;;b2,0;;m0;;e0;;i0;;o;;k;;l $boxes;;p;;x;;n">
</treenode>
<treenode node="setPageBuffer;PHP:Function Name;3211394257;f11;20968;2;20979;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPageBuffer($page, $data, $append=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set page buffer content.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.000 (2008-12-31)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$page&lt;/b&gt;: page number&#10;    string &lt;b&gt;$data&lt;/b&gt;: page data&#10;    boolean &lt;b&gt;$append&lt;/b&gt;: if true append data, false replace.;;d63,20968;;b2,0;;m0;;e0;;i0;;o;;k;;l $page;;p $data;;p $append;;p;;x;;x;;x;;n">
</treenode>
<treenode node="setPageFormat;PHP:Function Name;3211394257;f11;2145;2;2249;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPageFormat($format, $orientation=&apos;P&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Change the format of the current page&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.015 (2008-06-06)&#10;&lt;b&gt;see&lt;/b&gt;: getPageSizeFromFormat()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$format&lt;/b&gt;: The format used for pages. It can be either: one of the string values specified at getPageSizeFromFormat() documentation or an array of two numbers (width, height) or an array containing the following measures and options:&lt;ul&gt; &lt;li&gt;[&apos;format&apos;] = page format name (one of the above);s&lt;/li&gt; &lt;li&gt;[&apos;Rotate&apos;] : The number of degrees by which the page shall be rotated clockwise when displayed or printed. The value shall be a multiple of 90.&lt;/li&gt; &lt;li&gt;[&apos;PZ&apos;] : The page&apos;s preferred zoom (magnification) factor.&lt;/li&gt; &lt;li&gt;[&apos;MediaBox&apos;] : the boundaries of the physical medium on which the page shall be displayed or printed:&lt;/li&gt; &lt;li&gt;[&apos;MediaBox&apos;][&apos;llx&apos;] : lower-left x coordinate&lt;/li&gt; &lt;li&gt;[&apos;MediaBox&apos;][&apos;lly&apos;] : lower-left y coordinate&lt;/li&gt; &lt;li&gt;[&apos;MediaBox&apos;][&apos;urx&apos;] : upper-right x coordinate&lt;/li&gt; &lt;li&gt;[&apos;MediaBox&apos;][&apos;ury&apos;] : upper-right y coordinate&lt;/li&gt; &lt;li&gt;[&apos;CropBox&apos;] : the visible region of default user space:&lt;/li&gt; &lt;li&gt;[&apos;CropBox&apos;][&apos;llx&apos;] : lower-left x coordinate&lt;/li&gt; &lt;li&gt;[&apos;CropBox&apos;][&apos;lly&apos;] : lower-left y coordinate&lt;/li&gt; &lt;li&gt;[&apos;CropBox&apos;][&apos;urx&apos;] : upper-right x coordinate&lt;/li&gt; &lt;li&gt;[&apos;CropBox&apos;][&apos;ury&apos;] : upper-right y coordinate&lt;/li&gt; &lt;li&gt;[&apos;BleedBox&apos;] : the region to which the contents of the page shall be clipped when output in a production environment:&lt;/li&gt; &lt;li&gt;[&apos;BleedBox&apos;][&apos;llx&apos;] : lower-left x coordinate&lt;/li&gt; &lt;li&gt;[&apos;BleedBox&apos;][&apos;lly&apos;] : lower-left y coordinate&lt;/li&gt; &lt;li&gt;[&apos;BleedBox&apos;][&apos;urx&apos;] : upper-right x coordinate&lt;/li&gt; &lt;li&gt;[&apos;BleedBox&apos;][&apos;ury&apos;] : upper-right y coordinate&lt;/li&gt; &lt;li&gt;[&apos;TrimBox&apos;] : the intended dimensions of the finished page after trimming:&lt;/li&gt; &lt;li&gt;[&apos;TrimBox&apos;][&apos;llx&apos;] : lower-left x coordinate&lt;/li&gt; &lt;li&gt;[&apos;TrimBox&apos;][&apos;lly&apos;] : lower-left y coordinate&lt;/li&gt; &lt;li&gt;[&apos;TrimBox&apos;][&apos;urx&apos;] : upper-right x coordinate&lt;/li&gt; &lt;li&gt;[&apos;TrimBox&apos;][&apos;ury&apos;] : upper-right y coordinate&lt;/li&gt; &lt;li&gt;[&apos;ArtBox&apos;] : the extent of the page&apos;s meaningful content:&lt;/li&gt; &lt;li&gt;[&apos;ArtBox&apos;][&apos;llx&apos;] : lower-left x coordinate&lt;/li&gt; &lt;li&gt;[&apos;ArtBox&apos;][&apos;lly&apos;] : lower-left y coordinate&lt;/li&gt; &lt;li&gt;[&apos;ArtBox&apos;][&apos;urx&apos;] : upper-right x coordinate&lt;/li&gt; &lt;li&gt;[&apos;ArtBox&apos;][&apos;ury&apos;] : upper-right y coordinate&lt;/li&gt; &lt;li&gt;[&apos;BoxColorInfo&apos;] :specify the colours and other visual characteristics that should be used in displaying guidelines on the screen for each of the possible page boundaries other than the MediaBox:&lt;/li&gt; &lt;li&gt;[&apos;BoxColorInfo&apos;][BOXTYPE][&apos;C&apos;] : an array of three numbers in the range 0-255, representing the components in the DeviceRGB colour space.&lt;/li&gt; &lt;li&gt;[&apos;BoxColorInfo&apos;][BOXTYPE][&apos;W&apos;] : the guideline width in default user units&lt;/li&gt; &lt;li&gt;[&apos;BoxColorInfo&apos;][BOXTYPE][&apos;S&apos;] : the guideline style: S = Solid;s D = Dashed&lt;/li&gt; &lt;li&gt;[&apos;BoxColorInfo&apos;][BOXTYPE][&apos;D&apos;] : dash array defining a pattern of dashes and gaps to be used in drawing dashed guidelines&lt;/li&gt; &lt;li&gt;[&apos;trans&apos;] : the style and duration of the visual transition to use when moving from another page to the given page during a presentation&lt;/li&gt; &lt;li&gt;[&apos;trans&apos;][&apos;Dur&apos;] : The page&apos;s display duration (also called its advance timing): the maximum length of time, in seconds, that the page shall be displayed during presentations before the viewer application shall automatically advance to the next page.&lt;/li&gt; &lt;li&gt;[&apos;trans&apos;][&apos;S&apos;] : transition style : Split, Blinds, Box, Wipe, Dissolve, Glitter, R, Fly, Push, Cover, Uncover, Fade&lt;/li&gt; &lt;li&gt;[&apos;trans&apos;][&apos;D&apos;] : The duration of the transition effect, in seconds.&lt;/li&gt; &lt;li&gt;[&apos;trans&apos;][&apos;Dm&apos;] : (Split and Blinds transition styles only) The dimension in which the specified transition effect shall occur: H = Horizontal, V = Vertical. Default value: H.&lt;/li&gt; &lt;li&gt;[&apos;trans&apos;][&apos;M&apos;] : (Split, Box and Fly transition styles only) The direction of motion for the specified transition effect: I = Inward from the edges of the page, O = Outward from the center of the pageDefault value: I.&lt;/li&gt; &lt;li&gt;[&apos;trans&apos;][&apos;Di&apos;] : (Wipe, Glitter, Fly, Cover, Uncover and Push transition styles only) The direction in which the specified transition effect shall moves, expressed in degrees counterclockwise starting from a left-to-right direction. If the value is a number, it shall be one of: 0 = Left to right, 90 = Bottom to top (Wipe only), 180 = Right to left (Wipe only), 270 = Top to bottom, 315 = Top-left to bottom-right (Glitter only). If the value is a name, it shall be None, which is relevant only for the Fly transition when the value of SS is not 1.0. Default value: 0.&lt;/li&gt; &lt;li&gt;[&apos;trans&apos;][&apos;SS&apos;] : (Fly transition style only) The starting or ending scale at which the changes shall be drawn. If M specifies an inward transition, the scale of the changes drawn shall progress from SS to 1.0 over the course of the transition. If M specifies an outward transition, the scale of the changes drawn shall progress from 1.0 to SS over the course of the transition. Default: 1.0.&lt;/li&gt; &lt;li&gt;[&apos;trans&apos;][&apos;B&apos;] : (Fly transition style only) If true, the area that shall be flown in is rectangular and opaque. Default: false.&lt;/li&gt; &lt;/ul&gt;&#10;    string &lt;b&gt;$orientation&lt;/b&gt;: page orientation. Possible values are (case insensitive):&lt;ul&gt; &lt;li&gt;P or Portrait (default)&lt;/li&gt; &lt;li&gt;L or Landscape&lt;/li&gt; &lt;li&gt;&apos;&apos; (empty string) for automatic orientation&lt;/li&gt; &lt;/ul&gt;;;d61,2145;;b2,0;;m0;;e0;;i0;;o;;k;;l $format;;p $orientation;;p;;x;;x;;n">
</treenode>
<treenode node="setPageMark;PHP:Function Name;3211394257;f8;3309;2;3313;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPageMark()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set start-writing mark on current page stream used to put borders and fills.&#10;Borders and fills are always created after content and inserted on the position marked by this method.&#10;This function must be called after calling Image() function for a background image.&#10;Background images must be always inserted before calling Multicell() or WriteHTMLCell() or WriteHTML() functions.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.016 (2008-07-30);;d31,3309;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="setPageOrientation;PHP:Function Name;3211394257;f8;2259;2;2345;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPageOrientation($orientation, $autopagebreak=null, $bottommargin=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set page orientation.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.015 (2008-06-06)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$orientation&lt;/b&gt;: page orientation. Possible values are (case insensitive):&lt;ul&gt;&lt;li&gt;P or Portrait (default)&lt;/li&gt;&lt;li&gt;L or Landscape&lt;/li&gt;&lt;li&gt;&apos;&apos; (empty string) for automatic orientation&lt;/li&gt;&lt;/ul&gt;&#10;    boolean|null &lt;b&gt;$autopagebreak&lt;/b&gt;: Boolean indicating if auto-page-break mode should be on or off.&#10;    float|null &lt;b&gt;$bottommargin&lt;/b&gt;: bottom margin of the page.;;d91,2259;;b1,0;;m0;;e0;;i0;;o;;k;;l $orientation;;p $autopagebreak;;p $bottommargin;;p;;x;;x;;x;;n">
</treenode>
<treenode node="setPageRegions;PHP:Function Name;3211394257;f8;22781;2;22788;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPageRegions($regions=array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set no-write regions on page.&#10;A no-write region is a portion of the page with a rectangular or trapezium shape that will not be covered when writing text or html code.&#10;A region is always aligned on the left or right side of the page ad is defined using a vertical segment.&#10;You can set multiple regions for the same page.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.003 (2010-10-13)&#10;&lt;b&gt;see&lt;/b&gt;: addPageRegion(), getPageRegions()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$regions&lt;/b&gt;: array of no-write regions. For each region you can define an array as follow: (&apos;page&apos; =&gt; page number or empy for current page, &apos;xt&apos; =&gt; X top, &apos;yt&apos; =&gt; Y top, &apos;xb&apos; =&gt; X bottom, &apos;yb&apos; =&gt; Y bottom, &apos;side&apos; =&gt; page side &apos;L&apos; = left or &apos;R&apos; = right). Omit this parameter to remove all regions.;;d50,22781;;b1,0;;m0;;e0;;i0;;o;;k;;l $regions;;p;;x;;n">
</treenode>
<treenode node="setPageUnit;PHP:Function Name;3211394257;f8;2053;2;2088;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPageUnit($unit)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the units of measure for the document.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.015 (2008-06-06)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$unit&lt;/b&gt;: User measure unit. Possible values are:&lt;ul&gt;&lt;li&gt;pt: point&lt;/li&gt;&lt;li&gt;mm: millimeter (default)&lt;/li&gt;&lt;li&gt;cm: centimeter&lt;/li&gt;&lt;li&gt;in: inch&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;A point equals 1/72 of inch, that is to say about 0.35 mm (an inch being 2.54 cm). This is a very common unit in typography;s font sizes are expressed in that unit.;;d36,2053;;b1,0;;m0;;e0;;i0;;o;;k;;l $unit;;p;;x;;n">
</treenode>
<treenode node="setPrintFooter;PHP:Function Name;3211394257;f8;3434;2;3436;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPrintFooter($val=true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set a flag to print page footer.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    boolean &lt;b&gt;$val&lt;/b&gt;: set to true to print the page footer (default), false otherwise.;;d43,3434;;b1,0;;m0;;e0;;i0;;o;;k;;l $val;;p;;x;;n">
</treenode>
<treenode node="setPrintHeader;PHP:Function Name;3211394257;f8;3425;2;3427;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPrintHeader($val=true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set a flag to print page header.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    boolean &lt;b&gt;$val&lt;/b&gt;: set to true to print the page header (default), false otherwise.;;d43,3425;;b1,0;;m0;;e0;;i0;;o;;k;;l $val;;p;;x;;n">
</treenode>
<treenode node="setProtection;PHP:Function Name;3211394257;f8;10979;2;11071;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setProtection($permissions=array(&apos;print&apos;, &apos;modify&apos;, &apos;copy&apos;, &apos;annot-forms&apos;, &apos;fill-forms&apos;, &apos;extract&apos;, &apos;assemble&apos;, &apos;print-high&apos;), $user_pass=&apos;&apos;, $owner_pass=null, $mode=0, $pubkeys=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set document protection&#10;Remark: the protection against modification is for people who have the full Acrobat product.&#10;If you don&apos;t set any password, the document will open as usual. If you set a user password, the PDF viewer will ask for it before displaying the document. The master password, if different from the user one, can be used to get full access.&#10;Note: protecting a document requires to encrypt it, which increases the processing time a lot. This can cause a PHP time-out in some cases, especially if the document contains images or fonts.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.0.000 (2008-01-02)&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$permissions&lt;/b&gt;: the set of permissions (specify the ones you want to block):&lt;ul&gt;&lt;li&gt;print : Print the document;s&lt;/li&gt;&lt;li&gt;modify : Modify the contents of the document by operations other than those controlled by &apos;fill-forms&apos;, &apos;extract&apos; and &apos;assemble&apos;;s&lt;/li&gt;&lt;li&gt;copy : Copy or otherwise extract text and graphics from the document;s&lt;/li&gt;&lt;li&gt;annot-forms : Add or modify text annotations, fill in interactive form fields, and, if &apos;modify&apos; is also set, create or modify interactive form fields (including signature fields);s&lt;/li&gt;&lt;li&gt;fill-forms : Fill in existing interactive form fields (including signature fields), even if &apos;annot-forms&apos; is not specified;s&lt;/li&gt;&lt;li&gt;extract : Extract text and graphics (in support of accessibility to users with disabilities or for other purposes);s&lt;/li&gt;&lt;li&gt;assemble : Assemble the document (insert, rotate, or delete pages and create bookmarks or thumbnail images), even if &apos;modify&apos; is not set;s&lt;/li&gt;&lt;li&gt;print-high : Print the document to a representation from which a faithful digital copy of the PDF content could be generated. When this is not set, printing is limited to a low-level representation of the appearance, possibly of degraded quality.&lt;/li&gt;&lt;li&gt;owner : (inverted logic - only for public-key) when set permits change of encryption and enables all other permissions.&lt;/li&gt;&lt;/ul&gt;&#10;    string &lt;b&gt;$user_pass&lt;/b&gt;: user password. Empty by default.&#10;    string|null &lt;b&gt;$owner_pass&lt;/b&gt;: owner password. If not specified, a random value is used.&#10;    int &lt;b&gt;$mode&lt;/b&gt;: encryption strength: 0 = RC4 40 bit;s 1 = RC4 128 bit;s 2 = AES 128 bit;s 3 = AES 256 bit.&#10;    array|null &lt;b&gt;$pubkeys&lt;/b&gt;: array of recipients containing public-key certificates (&apos;c&apos;) and permissions (&apos;p&apos;). For example: array(array(&apos;c&apos; =&gt; &apos;file://../examples/data/cert/tcpdf.crt&apos;, &apos;p&apos; =&gt; array(&apos;print&apos;)));;d201,10979;;b1,0;;m0;;e0;;i0;;o;;k;;l $permissions;;p $user_pass;;p $owner_pass;;p $mode;;p $pubkeys;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="setRTL;PHP:Function Name;3211394257;f8;2390;2;2398;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setRTL($enable, $resetx=true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Enable or disable Right-To-Left language mode&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.0.000 (2008-01-03)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    boolean &lt;b&gt;$enable&lt;/b&gt;: if true enable Right-To-Left language mode.&#10;    boolean &lt;b&gt;$resetx&lt;/b&gt;: if true reset the X position on direction change.;;d47,2390;;b1,0;;m0;;e0;;i0;;o;;k;;l $enable;;p $resetx;;p;;x;;x;;n">
</treenode>
<treenode node="setRasterizeVectorImages;PHP:Function Name;3211394257;f8;22360;2;22362;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setRasterizeVectorImages($mode)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Enable/disable rasterization of vector images using ImageMagick library.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-04-27)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    boolean &lt;b&gt;$mode&lt;/b&gt;: if true enable rasterization, false otherwise.;;d49,22360;;b1,0;;m0;;e0;;i0;;o;;k;;l $mode;;p;;x;;n">
</treenode>
<treenode node="setRightMargin;PHP:Function Name;3211394257;f8;2656;2;2661;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setRightMargin($margin)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the right margin. The method can be called before creating the first page.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.5&#10;&lt;b&gt;see&lt;/b&gt;: SetLeftMargin(), SetTopMargin(), SetAutoPageBreak(), SetMargins()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|float &lt;b&gt;$margin&lt;/b&gt;: The margin.;;d41,2656;;b1,0;;m0;;e0;;i0;;o;;k;;l $margin;;p;;x;;n">
</treenode>
<treenode node="setSRGBmode;PHP:Function Name;3211394257;f8;2918;2;2920;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setSRGBmode($mode=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set flag to force sRGB_IEC61966-2.1 black scaled ICC color profile for the whole document.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.121 (2011-09-28)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    boolean &lt;b&gt;$mode&lt;/b&gt;: If true force sRGB output intent.;;d42,2918;;b1,0;;m0;;e0;;i0;;o;;k;;l $mode;;p;;x;;n">
</treenode>
<treenode node="setSVGStyles;PHP:Function Name;3211394257;f11;23303;2;23578;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setSVGStyles($svgstyle, $prevsvgstyle, $x=0, $y=0, $w=1, $h=1, $clip_function=&apos;&apos;, $clip_params=array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Apply the requested SVG styles (*** TO BE COMPLETED ***)&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-05-02)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$svgstyle&lt;/b&gt;: array of SVG styles to apply&#10;    array &lt;b&gt;$prevsvgstyle&lt;/b&gt;: array of previous SVG style&#10;    int &lt;b&gt;$x&lt;/b&gt;: X origin of the bounding box&#10;    int &lt;b&gt;$y&lt;/b&gt;: Y origin of the bounding box&#10;    int &lt;b&gt;$w&lt;/b&gt;: width of the bounding box&#10;    int &lt;b&gt;$h&lt;/b&gt;: height of the bounding box&#10;    string &lt;b&gt;$clip_function&lt;/b&gt;: clip function&#10;    array &lt;b&gt;$clip_params&lt;/b&gt;: array of parameters for clipping function&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   style;;d124,23303;;b2,0;;m0;;e0;;i0;;o;;k;;l $svgstyle;;p $prevsvgstyle;;p $x;;p $y;;p $w;;p $h;;p $clip_function;;p $clip_params;;p;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="setSignature;PHP:Function Name;3211394257;f8;13555;2;13578;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setSignature($signing_cert=&apos;&apos;, $private_key=&apos;&apos;, $private_key_password=&apos;&apos;, $extracerts=&apos;&apos;, $cert_type=2, $info=array(), $approval=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Enable document signature (requires the OpenSSL Library).&#10;The digital signature improve document authenticity and integrity and allows o enable extra features on Acrobat Reader.&#10;To create self-signed signature: openssl req -x509 -nodes -days 365000 -newkey rsa:1024 -keyout tcpdf.crt -out tcpdf.crt&#10;To export crt to p12: openssl pkcs12 -export -in tcpdf.crt -out tcpdf.p12&#10;To convert pfx certificate to pem: openssl pkcs12 -in tcpdf.pfx -out tcpdf.crt -nodes&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.6.005 (2009-04-24)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$signing_cert&lt;/b&gt;: signing certificate (string or filename prefixed with &apos;file://&apos;)&#10;    mixed &lt;b&gt;$private_key&lt;/b&gt;: private key (string or filename prefixed with &apos;file://&apos;)&#10;    string &lt;b&gt;$private_key_password&lt;/b&gt;: password&#10;    string &lt;b&gt;$extracerts&lt;/b&gt;: specifies the name of a file containing a bunch of extra certificates to include in the signature which can for example be used to help the recipient to verify the certificate that you used.&#10;    int &lt;b&gt;$cert_type&lt;/b&gt;: The access permissions granted for this document. Valid values shall be: 1 = No changes to the document shall be permitted;s any change to the document shall invalidate the signature;s 2 = Permitted changes shall be filling in forms, instantiating page templates, and signing;s other changes shall invalidate the signature;s 3 = Permitted changes shall be the same as for 2, as well as annotation creation, deletion, and modification;s other changes shall invalidate the signature.&#10;    array &lt;b&gt;$info&lt;/b&gt;: array of option information: Name, Location, Reason, ContactInfo.&#10;    string &lt;b&gt;$approval&lt;/b&gt;: Enable approval signature eg. for PDF incremental update;;d150,13555;;b1,0;;m0;;e0;;i0;;o;;k;;l $signing_cert;;p $private_key;;p $private_key_password;;p $extracerts;;p $cert_type;;p $info;;p $approval;;p;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="setSignatureAppearance;PHP:Function Name;3211394257;f8;13592;2;13594;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setSignatureAppearance($x=0, $y=0, $w=0, $h=0, $page=-1, $name=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the digital signature appearance (a cliccable rectangle area to get signature properties)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.3.011 (2010-06-17)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: Abscissa of the upper-left corner.&#10;    float &lt;b&gt;$y&lt;/b&gt;: Ordinate of the upper-left corner.&#10;    float &lt;b&gt;$w&lt;/b&gt;: Width of the signature area.&#10;    float &lt;b&gt;$h&lt;/b&gt;: Height of the signature area.&#10;    int &lt;b&gt;$page&lt;/b&gt;: option page number (if &lt; 0 the current page is used).&#10;    string &lt;b&gt;$name&lt;/b&gt;: Name of the signature.;;d84,13592;;b1,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $w;;p $h;;p $page;;p $name;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="setSpacesRE;PHP:Function Name;3211394257;f8;2365;2;2381;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setSpacesRE($re=&apos;/[^\S\xa0]/&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set regular expression to detect withespaces or word separators.&#10;The pattern delimiter must be the forward-slash character &quot;/&quot;.&#10;Some example patterns are:&#10;&lt;pre&gt;&#10;Non-Unicode or missing PCRE unicode support: &quot;/[^\S\xa0]/&quot;&#10;Unicode and PCRE unicode support: &quot;/(?!\xa0)[\s\p{Z}]/u&quot;&#10;Unicode and PCRE unicode support in Chinese mode: &quot;/(?!\xa0)[\s\p{Z}\p{Lo}]/u&quot;&#10;if PCRE unicode support is turned ON (&quot;\P&quot; is the negate class of &quot;\p&quot;):&#10;\s     : any whitespace character&#10;\p{Z}  : any separator&#10;\p{Lo} : Unicode letter or ideograph that does not have lowercase and uppercase variants. Is used to chunk chinese words.&#10;\xa0   : Unicode Character &apos;NO-BREAK SPACE&apos; (U+00A0)&#10;&lt;/pre&gt;&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.6.016 (2009-06-15)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$re&lt;/b&gt;: regular expression (leave empty for default).;;d48,2365;;b1,0;;m0;;e0;;i0;;o;;k;;l $re;;p;;x;;n">
</treenode>
<treenode node="setSpotColor;PHP:Function Name;3211394257;f8;3818;2;3854;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setSpotColor($type, $name, $tint=100)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the spot color for the specified type (&apos;draw&apos;, &apos;fill&apos;, &apos;text&apos;).&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.125 (2011-10-03)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$type&lt;/b&gt;: Type of object affected by this color: (&apos;draw&apos;, &apos;fill&apos;, &apos;text&apos;).&#10;    string &lt;b&gt;$name&lt;/b&gt;: Name of the spot color.&#10;    float &lt;b&gt;$tint&lt;/b&gt;: Intensity of the color (from 0 to 100 ;s 100 = full intensity by default).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   PDF color command.;;d55,3818;;b1,0;;m0;;e0;;i0;;o;;k;;l $type;;p $name;;p $tint;;p;;x;;x;;x;;n">
</treenode>
<treenode node="setStartingPageNumber;PHP:Function Name;3211394257;f8;13714;2;13716;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setStartingPageNumber($num=1)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the starting page number.&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.093 (2011-06-16)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$num&lt;/b&gt;: Starting page number.;;d47,13714;;b1,0;;m0;;e0;;i0;;o;;k;;l $num;;p;;x;;n">
</treenode>
<treenode node="setSubject;PHP:Function Name;3211394257;f8;2951;2;2953;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setSubject($subject)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the subject of the document.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.2&#10;&lt;b&gt;see&lt;/b&gt;: SetAuthor(), SetCreator(), SetKeywords(), SetTitle()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$subject&lt;/b&gt;: The subject.;;d38,2951;;b1,0;;m0;;e0;;i0;;o;;k;;l $subject;;p;;x;;n">
</treenode>
<treenode node="setTableHeader;PHP:Function Name;3211394257;f11;3708;2;3766;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setTableHeader()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to render the table header on new page (if any).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.030 (2009-03-25);;d37,3708;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="setTempRTL;PHP:Function Name;3211394257;f8;2416;2;2440;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setTempRTL($mode)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Force temporary RTL language direction&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-09)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    false|string &lt;b&gt;$mode&lt;/b&gt;: can be false, &apos;L&apos; for LTR or &apos;R&apos; for RTL;;d35,2416;;b1,0;;m0;;e0;;i0;;o;;k;;l $mode;;p;;x;;n">
</treenode>
<treenode node="setTextColor;PHP:Function Name;3211394257;f8;4102;2;4104;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setTextColor($col1=0, $col2=-1, $col3=-1, $col4=-1, $ret=false, $name=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the color used for text. It can be expressed in RGB components or gray scale. The method can be called before the first page is created and the value is retained from page to page.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.3&#10;&lt;b&gt;see&lt;/b&gt;: SetTextColorArray(), SetDrawColor(), SetFillColor(), Text(), Cell(), MultiCell()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$col1&lt;/b&gt;: GRAY level for single color, or Red color for RGB (0-255), or CYAN color for CMYK (0-100).&#10;    float &lt;b&gt;$col2&lt;/b&gt;: GREEN color for RGB (0-255), or MAGENTA color for CMYK (0-100).&#10;    float &lt;b&gt;$col3&lt;/b&gt;: BLUE color for RGB (0-255), or YELLOW color for CMYK (0-100).&#10;    float &lt;b&gt;$col4&lt;/b&gt;: KEY (BLACK) color for CMYK (0-100).&#10;    boolean &lt;b&gt;$ret&lt;/b&gt;: If true do not send the command.&#10;    string &lt;b&gt;$name&lt;/b&gt;: Spot color name (if any).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Empty string.;;d91,4102;;b1,0;;m0;;e0;;i0;;o;;k;;l $col1;;p $col2;;p $col3;;p $col4;;p $ret;;p $name;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="setTextColorArray;PHP:Function Name;3211394257;f8;3961;2;3963;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setTextColorArray($color, $ret=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the color used for text. It can be expressed in RGB components or gray scale.&#10;The method can be called before the first page is created and the value is retained from page to page.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.1.000 (2008-6-11)&#10;&lt;b&gt;see&lt;/b&gt;: SetFillColor()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$color&lt;/b&gt;: Array of colors (1, 3 or 4 values).&#10;    boolean &lt;b&gt;$ret&lt;/b&gt;: If true do not send the PDF command.;;d55,3961;;b1,0;;m0;;e0;;i0;;o;;k;;l $color;;p $ret;;p;;x;;x;;n">
</treenode>
<treenode node="setTextRenderingMode;PHP:Function Name;3211394257;f8;22101;2;22148;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setTextRenderingMode($stroke=0, $fill=true, $clip=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set Text rendering mode.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.008 (2009-04-02)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$stroke&lt;/b&gt;: outline size in user units (0 = disable).&#10;    boolean &lt;b&gt;$fill&lt;/b&gt;: if true fills the text (default).&#10;    boolean &lt;b&gt;$clip&lt;/b&gt;: if true activate clipping mode;;d74,22101;;b1,0;;m0;;e0;;i0;;o;;k;;l $stroke;;p $fill;;p $clip;;p;;x;;x;;x;;n">
</treenode>
<treenode node="setTextShadow;PHP:Function Name;3211394257;f8;22156;2;22190;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setTextShadow($params=array(&apos;enabled&apos;=&gt;false, &apos;depth_w&apos;=&gt;0, &apos;depth_h&apos;=&gt;0, &apos;color&apos;=&gt;false, &apos;opacity&apos;=&gt;1, &apos;blend_mode&apos;=&gt;&apos;Normal&apos;))&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set parameters for drop shadow effect for text.&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.174 (2012-07-25)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$params&lt;/b&gt;: Array of parameters: enabled (boolean) set to true to enable shadow;s depth_w (float) shadow width in user units;s depth_h (float) shadow height in user units;s color (array) shadow color or false to use the stroke color;s opacity (float) Alpha value: real value from 0 (transparent) to 1 (opaque);s blend_mode (string) blend mode, one of the following: Normal, Multiply, Screen, Overlay, Darken, Lighten, ColorDodge, ColorBurn, HardLight, SoftLight, Difference, Exclusion, Hue, Saturation, Color, Luminosity.;;d146,22156;;b1,0;;m0;;e0;;i0;;o;;k;;l $params;;p;;x;;n">
</treenode>
<treenode node="setTextSpotColor;PHP:Function Name;3211394257;f8;3888;2;3890;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setTextSpotColor($name, $tint=100)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the spot color used for text.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.024 (2008-09-12)&#10;&lt;b&gt;see&lt;/b&gt;: AddSpotColor(), SetDrawSpotColor(), SetFillSpotColor()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: Name of the spot color.&#10;    int &lt;b&gt;$tint&lt;/b&gt;: Intensity of the color (from 0 to 100 ;s 100 = full intensity by default).;;d52,3888;;b1,0;;m0;;e0;;i0;;o;;k;;l $name;;p $tint;;p;;x;;x;;n">
</treenode>
<treenode node="setTimeStamp;PHP:Function Name;3211394257;f8;13658;2;13675;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setTimeStamp($tsa_host=&apos;&apos;, $tsa_username=&apos;&apos;, $tsa_password=&apos;&apos;, $tsa_cert=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Enable document timestamping (requires the OpenSSL Library).&#10;The trusted timestamping improve document security that means that no one should be able to change the document once it has been recorded.&#10;Use with digital signature only!&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Richard Stockinger&#10;&lt;b&gt;since&lt;/b&gt;: 6.0.090 (2014-06-16)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$tsa_host&lt;/b&gt;: Time Stamping Authority (TSA) server (prefixed with &apos;https://&apos;)&#10;    string &lt;b&gt;$tsa_username&lt;/b&gt;: Specifies the username for TSA authorization (optional) OR specifies the TSA authorization PEM file (see: example_66.php, optional)&#10;    string &lt;b&gt;$tsa_password&lt;/b&gt;: Specifies the password for TSA authorization (optional)&#10;    string &lt;b&gt;$tsa_cert&lt;/b&gt;: Specifies the location of TSA certificate for authorization (optional for cURL);;d94,13658;;b1,0;;m0;;e0;;i0;;o;;k;;l $tsa_host;;p $tsa_username;;p $tsa_password;;p $tsa_cert;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="setTitle;PHP:Function Name;3211394257;f8;2940;2;2942;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setTitle($title)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the title of the document.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.2&#10;&lt;b&gt;see&lt;/b&gt;: SetAuthor(), SetCreator(), SetKeywords(), SetSubject()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$title&lt;/b&gt;: The title.;;d34,2940;;b1,0;;m0;;e0;;i0;;o;;k;;l $title;;p;;x;;n">
</treenode>
<treenode node="setTopMargin;PHP:Function Name;3211394257;f8;2641;2;2647;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setTopMargin($margin)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the top margin. The method can be called before creating the first page.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.5&#10;&lt;b&gt;see&lt;/b&gt;: SetLeftMargin(), SetRightMargin(), SetAutoPageBreak(), SetMargins()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|float &lt;b&gt;$margin&lt;/b&gt;: The margin.;;d39,2641;;b1,0;;m0;;e0;;i0;;o;;k;;l $margin;;p;;x;;n">
</treenode>
<treenode node="setUserRights;PHP:Function Name;3211394257;f8;13518;2;13536;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setUserRights(&#10;			$enable=true,&#10;			$document=&apos;/FullSave&apos;,&#10;			$annots=&apos;/Create/Delete/Modify/Copy/Import/Export&apos;,&#10;			$form=&apos;/Add/Delete/FillIn/Import/Export/SubmitStandalone/SpawnTemplate&apos;,&#10;			$signature=&apos;/Modify&apos;,&#10;			$ef=&apos;/Create/Delete/Modify/Import&apos;,&#10;			$formex=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set User&apos;s Rights for PDF Reader&#10;WARNING: This is experimental and currently do not work.&#10;Check the PDF Reference 8.7.1 Transform Methods,&#10;Table 8.105 Entries in the UR transform parameters dictionary&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2.9.000 (2008-03-26)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    boolean &lt;b&gt;$enable&lt;/b&gt;: if true enable user&apos;s rights on PDF reader&#10;    string &lt;b&gt;$document&lt;/b&gt;: Names specifying additional document-wide usage rights for the document. The only defined value is &quot;/FullSave&quot;, which permits a user to save the document along with modified form and/or annotation data.&#10;    string &lt;b&gt;$annots&lt;/b&gt;: Names specifying additional annotation-related usage rights for the document. Valid names in PDF 1.5 and later are /Create/Delete/Modify/Copy/Import/Export, which permit the user to perform the named operation on annotations.&#10;    string &lt;b&gt;$form&lt;/b&gt;: Names specifying additional form-field-related usage rights for the document. Valid names are: /Add/Delete/FillIn/Import/Export/SubmitStandalone/SpawnTemplate&#10;    string &lt;b&gt;$signature&lt;/b&gt;: Names specifying additional signature-related usage rights for the document. The only defined value is /Modify, which permits a user to apply a digital signature to an existing signature form field or clear a signed signature form field.&#10;    string &lt;b&gt;$ef&lt;/b&gt;: Names specifying additional usage rights for named embedded files in the document. Valid names are /Create/Delete/Modify/Import, which permit the user to perform the named operation on named embedded files Names specifying additional embedded-files-related usage rights for the document.&#10;    string &lt;b&gt;$formex&lt;/b&gt;: Names specifying additional form-field-related usage rights. The only valid name is BarcodePlaintext, which permits text form field data to be encoded as a plaintext two-dimensional barcode.;;d15,13525;;b1,0;;m0;;e0;;i0;;o;;k;;l $enable;;p $document;;p $annots;;p $form;;p $signature;;p $ef;;p $formex;;p;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="setViewerPreferences;PHP:Function Name;3211394257;f8;14156;2;14158;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setViewerPreferences($preferences)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the viewer preferences dictionary controlling the way the document is to be presented on the screen or in print.&#10;(see Section 8.1 of PDF reference, &quot;Viewer Preferences&quot;).&#10;&lt;ul&gt;&lt;li&gt;HideToolbar boolean (Optional) A flag specifying whether to hide the viewer application&apos;s tool bars when the document is active. Default value: false.&lt;/li&gt;&lt;li&gt;HideMenubar boolean (Optional) A flag specifying whether to hide the viewer application&apos;s menu bar when the document is active. Default value: false.&lt;/li&gt;&lt;li&gt;HideWindowUI boolean (Optional) A flag specifying whether to hide user interface elements in the document&apos;s window (such as scroll bars and navigation controls), leaving only the document&apos;s contents displayed. Default value: false.&lt;/li&gt;&lt;li&gt;FitWindow boolean (Optional) A flag specifying whether to resize the document&apos;s window to fit the size of the first displayed page. Default value: false.&lt;/li&gt;&lt;li&gt;CenterWindow boolean (Optional) A flag specifying whether to position the document&apos;s window in the center of the screen. Default value: false.&lt;/li&gt;&lt;li&gt;DisplayDocTitle boolean (Optional;s PDF 1.4) A flag specifying whether the window&apos;s title bar should display the document title taken from the Title entry of the document information dictionary (see Section 10.2.1, &quot;Document Information Dictionary&quot;). If false, the title bar should instead display the name of the PDF file containing the document. Default value: false.&lt;/li&gt;&lt;li&gt;NonFullScreenPageMode name (Optional) The document&apos;s page mode, specifying how to display the document on exiting full-screen mode:&lt;ul&gt;&lt;li&gt;UseNone Neither document outline nor thumbnail images visible&lt;/li&gt;&lt;li&gt;UseOutlines Document outline visible&lt;/li&gt;&lt;li&gt;UseThumbs Thumbnail images visible&lt;/li&gt;&lt;li&gt;UseOC Optional content group panel visible&lt;/li&gt;&lt;/ul&gt;This entry is meaningful only if the value of the PageMode entry in the catalog dictionary (see Section 3.6.1, &quot;Document Catalog&quot;) is FullScreen;s it is ignored otherwise. Default value: UseNone.&lt;/li&gt;&lt;li&gt;ViewArea name (Optional;s PDF 1.4) The name of the page boundary representing the area of a page to be displayed when viewing the document on the screen. Valid values are (see Section 10.10.1, &quot;Page Boundaries&quot;).:&lt;ul&gt;&lt;li&gt;MediaBox&lt;/li&gt;&lt;li&gt;CropBox (default)&lt;/li&gt;&lt;li&gt;BleedBox&lt;/li&gt;&lt;li&gt;TrimBox&lt;/li&gt;&lt;li&gt;ArtBox&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;ViewClip name (Optional;s PDF 1.4) The name of the page boundary to which the contents of a page are to be clipped when viewing the document on the screen. Valid values are (see Section 10.10.1, &quot;Page Boundaries&quot;).:&lt;ul&gt;&lt;li&gt;MediaBox&lt;/li&gt;&lt;li&gt;CropBox (default)&lt;/li&gt;&lt;li&gt;BleedBox&lt;/li&gt;&lt;li&gt;TrimBox&lt;/li&gt;&lt;li&gt;ArtBox&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;PrintArea name (Optional;s PDF 1.4) The name of the page boundary representing the area of a page to be rendered when printing the document. Valid values are (see Section 10.10.1, &quot;Page Boundaries&quot;).:&lt;ul&gt;&lt;li&gt;MediaBox&lt;/li&gt;&lt;li&gt;CropBox (default)&lt;/li&gt;&lt;li&gt;BleedBox&lt;/li&gt;&lt;li&gt;TrimBox&lt;/li&gt;&lt;li&gt;ArtBox&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;PrintClip name (Optional;s PDF 1.4) The name of the page boundary to which the contents of a page are to be clipped when printing the document. Valid values are (see Section 10.10.1, &quot;Page Boundaries&quot;).:&lt;ul&gt;&lt;li&gt;MediaBox&lt;/li&gt;&lt;li&gt;CropBox (default)&lt;/li&gt;&lt;li&gt;BleedBox&lt;/li&gt;&lt;li&gt;TrimBox&lt;/li&gt;&lt;li&gt;ArtBox&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;PrintScaling name (Optional;s PDF 1.6) The page scaling option to be selected when a print dialog is displayed for this document. Valid values are: &lt;ul&gt;&lt;li&gt;None, which indicates that the print dialog should reflect no page scaling&lt;/li&gt;&lt;li&gt;AppDefault (default), which indicates that applications should use the current print scaling&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Duplex name (Optional;s PDF 1.7) The paper handling option to use when printing the file from the print dialog. The following values are valid:&lt;ul&gt;&lt;li&gt;Simplex - Print single-sided&lt;/li&gt;&lt;li&gt;DuplexFlipShortEdge - Duplex and flip on the short edge of the sheet&lt;/li&gt;&lt;li&gt;DuplexFlipLongEdge - Duplex and flip on the long edge of the sheet&lt;/li&gt;&lt;/ul&gt;Default value: none&lt;/li&gt;&lt;li&gt;PickTrayByPDFSize boolean (Optional;s PDF 1.7) A flag specifying whether the PDF page size is used to select the input paper tray. This setting influences only the preset values used to populate the print dialog presented by a PDF viewer application. If PickTrayByPDFSize is true, the check box in the print dialog associated with input paper tray is checked. Note: This setting has no effect on Mac OS systems, which do not provide the ability to pick the input tray by size.&lt;/li&gt;&lt;li&gt;PrintPageRange array (Optional;s PDF 1.7) The page numbers used to initialize the print dialog box when the file is printed. The first page of the PDF file is denoted by 1. Each pair consists of the first and last pages in the sub-range. An odd number of integers causes this entry to be ignored. Negative numbers cause the entire array to be ignored. Default value: as defined by PDF viewer application&lt;/li&gt;&lt;li&gt;NumCopies integer (Optional;s PDF 1.7) The number of copies to be printed when the print dialog is opened for this file. Supported values are the integers 2 through 5. Values outside this range are ignored. Default value: as defined by PDF viewer application, but typically 1&lt;/li&gt;&lt;/ul&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.1.000 (2008-06-09)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$preferences&lt;/b&gt;: array of options.;;d52,14156;;b1,0;;m0;;e0;;i0;;o;;k;;l $preferences;;p;;x;;n">
</treenode>
<treenode node="setVisibility;PHP:Function Name;3211394257;f8;13905;2;13929;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setVisibility($v)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the visibility of the successive elements.&#10;This can be useful, for instance, to put a background&#10;image or color that will show on screen but won&apos;t print.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.000 (2008-03-27)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$v&lt;/b&gt;: visibility mode. Legal values are: all, print, screen or view.;;d35,13905;;b1,0;;m0;;e0;;i0;;o;;k;;l $v;;p;;x;;n">
</treenode>
<treenode node="setX;PHP:Function Name;3211394257;f8;7535;2;7556;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setX($x, $rtloff=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the abscissa of the current position.&#10;If the passed value is negative, it is relative to the right of the page (or left if language is RTL).&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.2&#10;&lt;b&gt;see&lt;/b&gt;: GetX(), GetY(), SetY(), SetXY()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: The value of the abscissa in user units.&#10;    boolean &lt;b&gt;$rtloff&lt;/b&gt;: if true always uses the page top-left corner as origin of axis.;;d41,7535;;b1,0;;m0;;e0;;i0;;o;;k;;l $x;;p $rtloff;;p;;x;;x;;n">
</treenode>
<treenode node="setXY;PHP:Function Name;3211394257;f8;7601;2;7604;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setXY($x, $y, $rtloff=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the abscissa and ordinate of the current position.&#10;If the passed values are negative, they are relative respectively to the right and bottom of the page.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.2&#10;&lt;b&gt;see&lt;/b&gt;: SetX(), SetY()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$x&lt;/b&gt;: The value of the abscissa.&#10;    float &lt;b&gt;$y&lt;/b&gt;: The value of the ordinate.&#10;    boolean &lt;b&gt;$rtloff&lt;/b&gt;: if true always uses the page top-left corner as origin of axis.;;d46,7601;;b1,0;;m0;;e0;;i0;;o;;k;;l $x;;p $y;;p $rtloff;;p;;x;;x;;x;;n">
</treenode>
<treenode node="setY;PHP:Function Name;3211394257;f8;7568;2;7589;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setY($y, $resetx=true, $rtloff=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Moves the current abscissa back to the left margin and sets the ordinate.&#10;If the passed value is negative, it is relative to the bottom of the page.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0&#10;&lt;b&gt;see&lt;/b&gt;: GetX(), GetY(), SetY(), SetXY()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$y&lt;/b&gt;: The value of the ordinate in user units.&#10;    bool &lt;b&gt;$resetx&lt;/b&gt;: if true (default) reset the X position.&#10;    boolean &lt;b&gt;$rtloff&lt;/b&gt;: if true always uses the page top-left corner as origin of axis.;;d55,7568;;b1,0;;m0;;e0;;i0;;o;;k;;l $y;;p $resetx;;p $rtloff;;p;;x;;x;;x;;n">
</treenode>
<treenode node="sortBookmarks;PHP:Function Name;3211394257;f11;12490;2;12500;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    sortBookmarks()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sort bookmarks for page and key.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.119 (2011-09-19);;d36,12490;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="startLayer;PHP:Function Name;3211394257;f8;13866;2;13879;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    startLayer($name=&apos;&apos;, $print=true, $view=true, $lock=true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Start a new pdf layer.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.102 (2011-07-13)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: Layer name (only a-z letters and numbers). Leave empty for automatic name.&#10;    boolean|null &lt;b&gt;$print&lt;/b&gt;: Set to TRUE to print this layer, FALSE to not print and NULL to not set this option&#10;    boolean &lt;b&gt;$view&lt;/b&gt;: Set to true to view this layer.&#10;    boolean &lt;b&gt;$lock&lt;/b&gt;: If true lock the layer;;d75,13866;;b1,0;;m0;;e0;;i0;;o;;k;;l $name;;p $print;;p $view;;p $lock;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="startPage;PHP:Function Name;3211394257;f8;3238;2;3299;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    startPage($orientation=&apos;&apos;, $format=&apos;&apos;, $tocpage=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Starts a new page to the document. The page must be closed using the endPage() function.&#10;The origin of the coordinate system is at the top-left corner and increasing ordinates go downwards.&#10;&lt;b&gt;since&lt;/b&gt;: 4.2.010 (2008-11-14)&#10;&lt;b&gt;see&lt;/b&gt;: AddPage(), endPage(), addTOCPage(), endTOCPage(), getPageSizeFromFormat(), setPageFormat()&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$orientation&lt;/b&gt;: page orientation. Possible values are (case insensitive):&lt;ul&gt;&lt;li&gt;P or PORTRAIT (default)&lt;/li&gt;&lt;li&gt;L or LANDSCAPE&lt;/li&gt;&lt;/ul&gt;&#10;    mixed &lt;b&gt;$format&lt;/b&gt;: The format used for pages. It can be either: one of the string values specified at getPageSizeFromFormat() or an array of parameters specified at setPageFormat().&#10;    boolean &lt;b&gt;$tocpage&lt;/b&gt;: if true the page is designated to contain the Table-Of-Content.;;d72,3238;;b1,0;;m0;;e0;;i0;;o;;k;;l $orientation;;p $format;;p $tocpage;;p;;x;;x;;x;;n">
</treenode>
<treenode node="startPageGroup;PHP:Function Name;3211394257;f8;13701;2;13706;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    startPageGroup($page=null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Create a new page group.&#10;NOTE: call this function before calling AddPage()&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.000 (2008-03-27)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|null &lt;b&gt;$page&lt;/b&gt;: starting group page (leave empty for next page).;;d44,13701;;b1,0;;m0;;e0;;i0;;o;;k;;l $page;;p;;x;;n">
</treenode>
<treenode node="startSVGElementHandler;PHP:Function Name;3211394257;f11;23979;2;24643;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    startSVGElementHandler($parser, $name, $attribs, $ctm=array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the opening SVG element handler function for the XML parser. (*** TO BE COMPLETED ***)&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-05-02)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    resource|string &lt;b&gt;$parser&lt;/b&gt;: The first parameter, parser, is a reference to the XML parser calling the handler.&#10;    string &lt;b&gt;$name&lt;/b&gt;: The second parameter, name, contains the name of the element for which this handler is called. If case-folding is in effect for this parser, the element name will be in uppercase letters.&#10;    array &lt;b&gt;$attribs&lt;/b&gt;: The third parameter, attribs, contains an associative array with the element&apos;s attributes (if any). The keys of this array are the attribute names, the values are the attribute values. Attribute names are case-folded on the same criteria as element names. Attribute values are not case-folded. The original order of the attributes can be retrieved by walking through attribs the normal way, using each(). The first key in the array was the first attribute, and so on.&#10;    array &lt;b&gt;$ctm&lt;/b&gt;: tranformation matrix for clipping mode (starting transformation matrix).;;d83,23979;;b2,0;;m0;;e0;;i0;;o;;k;;l $parser;;p $name;;p $attribs;;p $ctm;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="startTemplate;PHP:Function Name;3211394257;f8;22494;2;22547;;;;vpos;;v;;astring|false;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    startTemplate($w=0, $h=0, $group=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Start a new XObject Template.&#10;An XObject Template is a PDF block that is a self-contained description of any sequence of graphics objects (including path objects, text objects, and sampled images).&#10;An XObject Template may be painted multiple times, either on several pages or at several locations on the same page and produces the same results each time, subject only to the graphics state at the time it is invoked.&#10;Note: X,Y coordinates will be reset to 0,0.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.8.017 (2010-08-24)&#10;&lt;b&gt;see&lt;/b&gt;: endTemplate(), printTemplate()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$w&lt;/b&gt;: Template width in user units (empty string or zero = page width less margins).&#10;    int &lt;b&gt;$h&lt;/b&gt;: Template height in user units (empty string or zero = page height less margins).&#10;    mixed &lt;b&gt;$group&lt;/b&gt;: Set transparency group. Can be a boolean value or an array specifying optional parameters: &apos;CS&apos; (solour space name), &apos;I&apos; (boolean flag to indicate isolated group) and &apos;K&apos; (boolean flag to indicate knockout group).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the XObject Template ID in case of success or false in case of error.;;d57,22494;;b1,0;;m0;;e0;;i0;;o;;k;;l $w;;p $h;;p $group;;p;;x;;x;;x;;n">
</treenode>
<treenode node="startTransaction;PHP:Function Name;3211394257;f8;21878;2;21888;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    startTransaction()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Stores a copy of the current TCPDF object used for undo operation.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.029 (2009-03-19);;d36,21878;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="stringLeftTrim;PHP:Function Name;3211394257;f8;22399;2;22401;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    stringLeftTrim($str, $replace=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Left trim the input string&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.8.000 (2010-08-11)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: string to trim&#10;    string &lt;b&gt;$replace&lt;/b&gt;: string that replace spaces.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   left trimmed string;;d51,22399;;b1,0;;m0;;e0;;i0;;o;;k;;l $str;;p $replace;;p;;x;;x;;n">
</treenode>
<treenode node="stringRightTrim;PHP:Function Name;3211394257;f8;22412;2;22414;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    stringRightTrim($str, $replace=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Right trim the input string&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.8.000 (2010-08-11)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: string to trim&#10;    string &lt;b&gt;$replace&lt;/b&gt;: string that replace spaces.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   right trimmed string;;d52,22412;;b1,0;;m0;;e0;;i0;;o;;k;;l $str;;p $replace;;p;;x;;x;;n">
</treenode>
<treenode node="stringTrim;PHP:Function Name;3211394257;f8;22425;2;22429;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    stringTrim($str, $replace=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Trim the input string&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.8.000 (2010-08-11)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: string to trim&#10;    string &lt;b&gt;$replace&lt;/b&gt;: string that replace spaces.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   trimmed string;;d47,22425;;b1,0;;m0;;e0;;i0;;o;;k;;l $str;;p $replace;;p;;x;;x;;n">
</treenode>
<treenode node="swapMargins;PHP:Function Name;3211394257;f11;20435;2;20445;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    swapMargins($reverse=true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Swap the left and right margins.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.2.000 (2008-10-29)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    boolean &lt;b&gt;$reverse&lt;/b&gt;: if true swap left and right margins.;;d47,20435;;b2,0;;m0;;e0;;i0;;o;;k;;l $reverse;;p;;x;;n">
</treenode>
<treenode node="unhtmlentities;PHP:Function Name;3211394257;f8;10567;2;10569;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    unhtmlentities($text_to_convert)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Reverse function for htmlentities.&#10;Convert entities in UTF-8.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$text_to_convert&lt;/b&gt;: Text to convert.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   converted text string;;d50,10567;;b1,0;;m0;;e0;;i0;;o;;k;;l $text_to_convert;;p;;x;;n">
</treenode>
<treenode node="unserializeTCPDFtag;PHP:Function Name;3211394257;f11;17257;2;17266;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    unserializeTCPDFtag($data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Unserialize data to be used with TCPDF tag in HTML code.&#10;&lt;b&gt;protected&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$data&lt;/b&gt;: serialized data&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing unserialized data;;d47,17257;;b2,0;;m0;;e0;;i0;;o;;k;;l $data;;p;;x;;n">
</treenode>
<treenode node="write1DBarcode;PHP:Function Name;3211394257;f8;15340;2;15632;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    write1DBarcode($code, $type, $x=null, $y=null, $w=null, $h=null, $xres=null, $style=array(), $align=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Print a Linear Barcode.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 3.1.000 (2008-06-09)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to print&#10;    string &lt;b&gt;$type&lt;/b&gt;: type of barcode (see tcpdf_barcodes_1d.php for supported formats).&#10;    float|null &lt;b&gt;$x&lt;/b&gt;: x position in user units (null = current x position)&#10;    float|null &lt;b&gt;$y&lt;/b&gt;: y position in user units (null = current y position)&#10;    float|null &lt;b&gt;$w&lt;/b&gt;: width in user units (null = remaining page width)&#10;    float|null &lt;b&gt;$h&lt;/b&gt;: height in user units (null = remaining page height)&#10;    float|null &lt;b&gt;$xres&lt;/b&gt;: width of the smallest bar in user units (null = default value = 0.4mm)&#10;    array &lt;b&gt;$style&lt;/b&gt;: array of options:&lt;ul&gt; &lt;li&gt;boolean $style[&apos;border&apos;] if true prints a border&lt;/li&gt; &lt;li&gt;int $style[&apos;padding&apos;] padding to leave around the barcode in user units (set to &apos;auto&apos; for automatic padding)&lt;/li&gt; &lt;li&gt;int $style[&apos;hpadding&apos;] horizontal padding in user units (set to &apos;auto&apos; for automatic padding)&lt;/li&gt; &lt;li&gt;int $style[&apos;vpadding&apos;] vertical padding in user units (set to &apos;auto&apos; for automatic padding)&lt;/li&gt; &lt;li&gt;array $style[&apos;fgcolor&apos;] color array for bars and text&lt;/li&gt; &lt;li&gt;mixed $style[&apos;bgcolor&apos;] color array for background (set to false for transparent)&lt;/li&gt; &lt;li&gt;boolean $style[&apos;text&apos;] if true prints text below the barcode&lt;/li&gt; &lt;li&gt;string $style[&apos;label&apos;] override default label&lt;/li&gt; &lt;li&gt;string $style[&apos;font&apos;] font name for text&lt;/li&gt;&lt;li&gt;int $style[&apos;fontsize&apos;] font size for text&lt;/li&gt; &lt;li&gt;int $style[&apos;stretchtext&apos;]: 0 = disabled;s 1 = horizontal scaling only if necessary;s 2 = forced horizontal scaling;s 3 = character spacing only if necessary;s 4 = forced character spacing.&lt;/li&gt; &lt;li&gt;string $style[&apos;position&apos;] horizontal position of the containing barcode cell on the page: L = left margin;s C = center;s R = right margin.&lt;/li&gt; &lt;li&gt;string $style[&apos;align&apos;] horizontal position of the barcode on the containing rectangle: L = left;s C = center;s R = right.&lt;/li&gt; &lt;li&gt;string $style[&apos;stretch&apos;] if true stretch the barcode to best fit the available width, otherwise uses $xres resolution for a single bar.&lt;/li&gt; &lt;li&gt;string $style[&apos;fitwidth&apos;] if true reduce the width to fit the barcode width + padding. When this option is enabled the &apos;stretch&apos; option is automatically disabled.&lt;/li&gt; &lt;li&gt;string $style[&apos;cellfitalign&apos;] this option works only when &apos;fitwidth&apos; is true and &apos;position&apos; is unset or empty. Set the horizontal position of the containing barcode cell inside the specified rectangle: L = left;s C = center;s R = right.&lt;/li&gt;&lt;/ul&gt;&#10;    string &lt;b&gt;$align&lt;/b&gt;: Indicates the alignment of the pointer next to barcode insertion relative to barcode height. The value can be:&lt;ul&gt;&lt;li&gt;T: top-right for LTR or top-left for RTL&lt;/li&gt;&lt;li&gt;M: middle-right for LTR or middle-left for RTL&lt;/li&gt;&lt;li&gt;B: bottom-right for LTR or bottom-left for RTL&lt;/li&gt;&lt;li&gt;N: next line&lt;/li&gt;&lt;/ul&gt;;;d121,15340;;b1,0;;m0;;e0;;i0;;o;;k;;l $code;;p $type;;p $x;;p $y;;p $w;;p $h;;p $xres;;p $style;;p $align;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="write2DBarcode;PHP:Function Name;3211394257;f8;15658;2;15866;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    write2DBarcode($code, $type, $x=null, $y=null, $w=null, $h=null, $style=array(), $align=&apos;&apos;, $distort=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Print 2D Barcode.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.037 (2009-04-07)&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to print&#10;    string &lt;b&gt;$type&lt;/b&gt;: type of barcode (see tcpdf_barcodes_2d.php for supported formats).&#10;    float|null &lt;b&gt;$x&lt;/b&gt;: x position in user units&#10;    float|null &lt;b&gt;$y&lt;/b&gt;: y position in user units&#10;    float|null &lt;b&gt;$w&lt;/b&gt;: width in user units&#10;    float|null &lt;b&gt;$h&lt;/b&gt;: height in user units&#10;    array &lt;b&gt;$style&lt;/b&gt;: array of options:&lt;ul&gt; &lt;li&gt;boolean $style[&apos;border&apos;] if true prints a border around the barcode&lt;/li&gt; &lt;li&gt;int $style[&apos;padding&apos;] padding to leave around the barcode in barcode units (set to &apos;auto&apos; for automatic padding)&lt;/li&gt; &lt;li&gt;int $style[&apos;hpadding&apos;] horizontal padding in barcode units (set to &apos;auto&apos; for automatic padding)&lt;/li&gt; &lt;li&gt;int $style[&apos;vpadding&apos;] vertical padding in barcode units (set to &apos;auto&apos; for automatic padding)&lt;/li&gt; &lt;li&gt;int $style[&apos;module_width&apos;] width of a single module in points&lt;/li&gt; &lt;li&gt;int $style[&apos;module_height&apos;] height of a single module in points&lt;/li&gt; &lt;li&gt;array $style[&apos;fgcolor&apos;] color array for bars and text&lt;/li&gt; &lt;li&gt;mixed $style[&apos;bgcolor&apos;] color array for background or false for transparent&lt;/li&gt; &lt;li&gt;string $style[&apos;position&apos;] barcode position on the page: L = left margin;s C = center;s R = right margin;s S = stretch&lt;/li&gt;&#10;    string &lt;b&gt;$align&lt;/b&gt;: Indicates the alignment of the pointer next to barcode insertion relative to barcode height. The value can be:&lt;ul&gt;&lt;li&gt;T: top-right for LTR or top-left for RTL&lt;/li&gt;&lt;li&gt;M: middle-right for LTR or middle-left for RTL&lt;/li&gt;&lt;li&gt;B: bottom-right for LTR or bottom-left for RTL&lt;/li&gt;&lt;li&gt;N: next line&lt;/li&gt;&lt;/ul&gt;&#10;    boolean &lt;b&gt;$distort&lt;/b&gt;: if true distort the barcode to fit width and height, otherwise preserve aspect ratio;;d125,15658;;b1,0;;m0;;e0;;i0;;o;;k;;l $code;;p $type;;p $x;;p $y;;p $w;;p $h;;p $style;;p $align;;p $distort;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="writeHTML;PHP:Function Name;3211394257;f8;17319;2;18868;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    writeHTML($html, $ln=true, $fill=false, $reseth=false, $cell=false, $align=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Allows to preserve some HTML formatting (limited support).&lt;br /&gt;&#10;IMPORTANT: The HTML must be well formatted - try to clean-up it using an application like HTML-Tidy before submitting.&#10;Supported tags are: a, b, blockquote, br, dd, del, div, dl, dt, em, font, h1, h2, h3, h4, h5, h6, hr, i, img, li, ol, p, pre, small, span, strong, sub, sup, table, tcpdf, td, th, thead, tr, tt, u, ul&#10;NOTE: all the HTML attributes must be enclosed in double-quote.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$html&lt;/b&gt;: text to display&#10;    boolean &lt;b&gt;$ln&lt;/b&gt;: if true add a new line after text (default = true)&#10;    boolean &lt;b&gt;$fill&lt;/b&gt;: Indicates if the background must be painted (true) or transparent (false).&#10;    boolean &lt;b&gt;$reseth&lt;/b&gt;: if true reset the last cell height (default false).&#10;    boolean &lt;b&gt;$cell&lt;/b&gt;: if true add the current left (or right for RTL) padding to each Write (default false).&#10;    string &lt;b&gt;$align&lt;/b&gt;: Allows to center or align the text. Possible values are:&lt;ul&gt;&lt;li&gt;L : left align&lt;/li&gt;&lt;li&gt;C : center&lt;/li&gt;&lt;li&gt;R : right align&lt;/li&gt;&lt;li&gt;&apos;&apos; : empty string : left for LTR or right for RTL&lt;/li&gt;&lt;/ul&gt;;;d96,17319;;b1,0;;m0;;e0;;i0;;o;;k;;l $html;;p $ln;;p $fill;;p $reseth;;p $cell;;p $align;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="writeHTMLCell;PHP:Function Name;3211394257;f8;17302;2;17304;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    writeHTMLCell($w, $h, $x, $y, $html=&apos;&apos;, $border=0, $ln=0, $fill=false, $reseth=true, $align=&apos;&apos;, $autopadding=true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Prints a cell (rectangular area) with optional borders, background color and html text string.&#10;The upper-left corner of the cell corresponds to the current position. After the call, the current position moves to the right or to the next line.&lt;br /&gt;&#10;If automatic page breaking is enabled and the cell goes beyond the limit, a page break is done before outputting.&#10;IMPORTANT: The HTML must be well formatted - try to clean-up it using an application like HTML-Tidy before submitting.&#10;Supported tags are: a, b, blockquote, br, dd, del, div, dl, dt, em, font, h1, h2, h3, h4, h5, h6, hr, i, img, li, ol, p, pre, small, span, strong, sub, sup, table, tcpdf, td, th, thead, tr, tt, u, ul&#10;NOTE: all the HTML attributes must be enclosed in double-quote.&#10;&lt;b&gt;see&lt;/b&gt;: Multicell(), writeHTML()&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$w&lt;/b&gt;: Cell width. If 0, the cell extends up to the right margin.&#10;    float &lt;b&gt;$h&lt;/b&gt;: Cell minimum height. The cell extends automatically if needed.&#10;    float|null &lt;b&gt;$x&lt;/b&gt;: upper-left corner X coordinate&#10;    float|null &lt;b&gt;$y&lt;/b&gt;: upper-left corner Y coordinate&#10;    string &lt;b&gt;$html&lt;/b&gt;: html text to print. Default value: empty string.&#10;    mixed &lt;b&gt;$border&lt;/b&gt;: Indicates if borders must be drawn around the cell. The value can be a number:&lt;ul&gt;&lt;li&gt;0: no border (default)&lt;/li&gt;&lt;li&gt;1: frame&lt;/li&gt;&lt;/ul&gt; or a string containing some or all of the following characters (in any order):&lt;ul&gt;&lt;li&gt;L: left&lt;/li&gt;&lt;li&gt;T: top&lt;/li&gt;&lt;li&gt;R: right&lt;/li&gt;&lt;li&gt;B: bottom&lt;/li&gt;&lt;/ul&gt; or an array of line styles for each border group - for example: array(&apos;LTRB&apos; =&gt; array(&apos;width&apos; =&gt; 2, &apos;cap&apos; =&gt; &apos;butt&apos;, &apos;join&apos; =&gt; &apos;miter&apos;, &apos;dash&apos; =&gt; 0, &apos;color&apos; =&gt; array(0, 0, 0)))&#10;    int &lt;b&gt;$ln&lt;/b&gt;: Indicates where the current position should go after the call. Possible values are:&lt;ul&gt;&lt;li&gt;0: to the right (or left for RTL language)&lt;/li&gt;&lt;li&gt;1: to the beginning of the next line&lt;/li&gt;&lt;li&gt;2: below&lt;/li&gt;&lt;/ul&gt; Putting 1 is equivalent to putting 0 and calling Ln() just after. Default value: 0.&#10;    boolean &lt;b&gt;$fill&lt;/b&gt;: Indicates if the cell background must be painted (true) or transparent (false).&#10;    boolean &lt;b&gt;$reseth&lt;/b&gt;: if true reset the last cell height (default true).&#10;    string &lt;b&gt;$align&lt;/b&gt;: Allows to center or align the text. Possible values are:&lt;ul&gt;&lt;li&gt;L : left align&lt;/li&gt;&lt;li&gt;C : center&lt;/li&gt;&lt;li&gt;R : right align&lt;/li&gt;&lt;li&gt;&apos;&apos; : empty string : left for LTR or right for RTL&lt;/li&gt;&lt;/ul&gt;&#10;    boolean &lt;b&gt;$autopadding&lt;/b&gt;: if true, uses internal padding and automatically adjust it to account for line width.;;d132,17302;;b1,0;;m0;;e0;;i0;;o;;k;;l $w;;p $h;;p $x;;p $y;;p $html;;p $border;;p $ln;;p $fill;;p $reseth;;p $align;;p $autopadding;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="$AutoPageBreak;PHP:Var Name;3211394257;f11;448;25;448;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Automatic page breaking.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$ColorFlag;PHP:Var Name;3211394257;f11;442;21;442;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Indicates whether fill and text colors are different.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$CoreFonts;PHP:Var Name;3211394257;f11;320;21;320;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of standard font names.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$CurOrientation;PHP:Var Name;3211394257;f11;192;26;192;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current page orientation (P = Portrait, L = Landscape).&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$CurrentFont;PHP:Var Name;3211394257;f11;406;23;406;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current font info.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$DrawColor;PHP:Var Name;3211394257;f11;424;21;424;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Commands for drawing color.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$FillColor;PHP:Var Name;3211394257;f11;430;21;430;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Commands for filling color.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$FontAscent;PHP:Var Name;3211394257;f11;381;22;381;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current font ascent (distance between font top and baseline).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.8.000 (2007-03-29);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$FontDescent;PHP:Var Name;3211394257;f11;388;23;388;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current font descent (distance between font bottom and baseline).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.8.000 (2007-03-29);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$FontFamily;PHP:Var Name;3211394257;f11;368;22;368;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current font family.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$FontFiles;PHP:Var Name;3211394257;f11;332;21;332;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of font files.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$FontSize;PHP:Var Name;3211394257;f11;418;20;418;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current font size in user unit.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$FontSizePt;PHP:Var Name;3211394257;f11;412;22;412;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current font size in points.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$FontStyle;PHP:Var Name;3211394257;f11;374;21;374;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current font style.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$HREF;PHP:Var Name;3211394257;f11;720;16;720;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    HTML PARSER: array to store current link and rendering styles.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$InFooter;PHP:Var Name;3211394257;f11;466;20;466;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Flag set when processing page footer.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$InHeader;PHP:Var Name;3211394257;f11;460;20;460;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Flag set when processing page header.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$LayoutMode;PHP:Var Name;3211394257;f11;478;22;478;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Layout display mode.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$LineWidth;PHP:Var Name;3211394257;f11;314;21;314;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Line width in user unit.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$OutlineRoot;PHP:Var Name;3211394257;f11;861;23;861;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Outline root for bookmark.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.002 (2008-02-12);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$PDFVersion;PHP:Var Name;3211394257;f11;559;22;559;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    PDF version.&#10;&lt;b&gt;since&lt;/b&gt;: 1.5.3&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$PageAnnots;PHP:Var Name;3211394257;f11;356;22;356;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of Annotations in pages.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$PageBreakTrigger;PHP:Var Name;3211394257;f11;454;28;454;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Threshold used to trigger page breaks.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$PageMode;PHP:Var Name;3211394257;f11;955;20;955;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A name object specifying how the document should be displayed when opened.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.1.000 (2008-06-09);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$TextColor;PHP:Var Name;3211394257;f11;436;21;436;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Commands for text color.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$ZoomMode;PHP:Var Name;3211394257;f11;472;20;472;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Zoom display mode.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$allowLocalFiles;PHP:Var Name;3211394257;f11;1865;27;1865;;;;vposbool;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$alpha;PHP:Var Name;3211394257;f11;1827;17;1827;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Alpha mode array.&#10;(Check the &quot;Entries in a Graphics State Parameter Dictionary&quot; on PDF 32000-1:2008).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.152 (2012-03-23);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$annotation_fonts;PHP:Var Name;3211394257;f11;1390;28;1390;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    List of fonts used on form fields (fontname =&gt; fontkey).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.001 (2009-09-09);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$author;PHP:Var Name;3211394257;f11;502;18;502;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Document author.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$bMargin;PHP:Var Name;3211394257;f11;276;19;276;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Page break margin.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$barcode;PHP:Var Name;3211394257;f11;627;19;627;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Barcode to print on page footer (only if set).&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$bgcolor;PHP:Var Name;3211394257;f11;768;19;768;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current background color.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$booklet;PHP:Var Name;3211394257;f11;1102;19;1102;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Booklet mode for double-sided pages.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.2.000 (2008-10-29);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$bordermrk;PHP:Var Name;3211394257;f11;976;21;976;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array used to store positions inside the pages buffer (keys are the page numbers).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.7.000 (2010-08-03);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$buffer;PHP:Var Name;3211394257;f11;168;18;168;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Buffer holding in-memory PDF.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$bufferlen;PHP:Var Name;3211394257;f11;1201;21;1201;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Length of the buffer in bytes.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.000 (2008-12-31);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$cache_file_length;PHP:Var Name;3211394257;f11;1250;29;1250;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array used to store the lengths of cache files.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.029 (2009-03-19);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$cell_height_ratio;PHP:Var Name;3211394257;f11;941;29;941;;;;vposfloat;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$cell_margin;PHP:Var Name;3211394257;f11;290;23;290;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of cell margins (&apos;T&apos; =&gt; top, &apos;R&apos; =&gt; right, &apos;B&apos; =&gt; bottom, &apos;L&apos; =&gt; left).&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.000 (2010-10-04)&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$cell_padding;PHP:Var Name;3211394257;f11;283;24;283;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of cell internal paddings (&apos;T&apos; =&gt; top, &apos;R&apos; =&gt; right, &apos;B&apos; =&gt; bottom, &apos;L&apos; =&gt; left).&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.000 (2010-10-03)&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$check_page_regions;PHP:Var Name;3211394257;f11;1578;30;1578;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Boolean value true when page region check is active.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$clMargin;PHP:Var Name;3211394257;f11;258;20;258;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Cell left margin (used by regions).&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$cleaned_ids;PHP:Var Name;3211394257;f18;7842;30;7842;;;;vpos;;v;;a;;r;;d-1,-1;;b2,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$cntmrk;PHP:Var Name;3211394257;f11;990;18;990;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array used to store content positions inside the pages buffer (keys are the page numbers).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.6.021 (2009-07-20);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$column_start_page;PHP:Var Name;3211394257;f11;1460;29;1460;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Starting page for columns.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.001 (2010-03-28);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$columns;PHP:Var Name;3211394257;f11;1439;19;1439;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of column measures (width, space, starting Y position).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.001 (2010-03-28);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$colxshift;PHP:Var Name;3211394257;f11;1474;21;1474;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of: X difference between table cell x start and starting page margin, cellspacing, cellpadding.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.8.000 (2010-08-11);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$compress;PHP:Var Name;3211394257;f11;186;20;186;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Compression flag.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$crMargin;PHP:Var Name;3211394257;f11;264;20;264;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Cell right margin (used by regions).&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$creator;PHP:Var Name;3211394257;f11;514;19;514;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Document creator.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$current_column;PHP:Var Name;3211394257;f11;1453;26;1453;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current column number.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.001 (2010-03-28);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$currpagegroup;PHP:Var Name;3211394257;f11;919;25;919;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current page group number.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.000 (2008-03-27);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$custom_xmp;PHP:Var Name;3211394257;f11;1803;22;1803;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Custom XMP data.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.128 (2011-10-06);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$custom_xmp_rdf;PHP:Var Name;3211394257;f11;1810;26;1810;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Custom XMP RDF data.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 6.3.0 (2019-09-19);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$customlistindent;PHP:Var Name;3211394257;f11;1123;28;1123;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    HTML PARSER: custom indent amount for lists. Negative value means disabled.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.2.007 (2008-11-12);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$default_form_prop;PHP:Var Name;3211394257;f11;1355;29;1355;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Deafult Javascript field properties. Possible values are described on official Javascript for Acrobat API reference. Annotation options can be directly specified using the &apos;aopt&apos; entry.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.000 (2009-09-07);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$default_graphic_vars;PHP:Var Name;3211394257;f11;1529;32;1529;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of default graphic settings.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.5.008 (2010-07-02);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$default_monospaced_font;PHP:Var Name;3211394257;f11;1236;35;1236;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default monospace font.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.025 (2009-03-10);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$default_table_columns;PHP:Var Name;3211394257;f11;712;33;712;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default number of columns for html table.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$dests;PHP:Var Name;3211394257;f11;1592;17;1592;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A dictionary of names and corresponding destinations (Dests key on document Catalog).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.097 (2011-06-23);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$diffs;PHP:Var Name;3211394257;f11;338;17;338;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of encoding differences.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$doc_creation_timestamp;PHP:Var Name;3211394257;f11;1789;34;1789;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Document creation date-time&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.152 (2012-03-22);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$doc_modification_timestamp;PHP:Var Name;3211394257;f11;1796;38;1796;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Document modification date-time&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.152 (2012-03-22);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$docinfounicode;PHP:Var Name;3211394257;f11;484;26;484;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true set the document information dictionary in Unicode.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$dpi;PHP:Var Name;3211394257;f11;898;15;898;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    DPI (Dot Per Inch) Document Resolution (do not change).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.000 (2008-03-27);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$efnames;PHP:Var Name;3211394257;f11;1606;19;1606;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Embedded Files Names&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.204 (2013-01-23);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$embeddedfiles;PHP:Var Name;3211394257;f11;1137;25;1137;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of files to embedd.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.4.000 (2008-12-07);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$empty_signature_appearance;PHP:Var Name;3211394257;f11;1299;38;1299;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of empty digital signature appearances.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.101 (2011-07-06);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$emptypagemrk;PHP:Var Name;3211394257;f11;983;24;983;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array used to store page positions to track empty pages (keys are the page numbers).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.8.007 (2010-08-18);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$encoding;PHP:Var Name;3211394257;f11;787;20;787;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default encoding.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.53.0.TC010;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$encryptdata;PHP:Var Name;3211394257;f11;817;23;817;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array containing encryption settings.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.005 (2010-05-11);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$encrypted;PHP:Var Name;3211394257;f11;810;21;810;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    IBoolean flag indicating whether document is protected.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.0.000 (2008-01-02);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$endlinex;PHP:Var Name;3211394257;f11;1018;20;1018;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    End position of the latest inserted line.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.2.000 (2008-07-01);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$epsmarker;PHP:Var Name;3211394257;f11;1081;21;1081;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    String used to mark the beginning and end of EPS image blocks.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.1.000 (2008-10-18);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$extgstates;PHP:Var Name;3211394257;f11;926;22;926;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of transparency objects and parameters.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.000 (2008-03-27);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$feps;PHP:Var Name;3211394257;f11;1109;16;1109;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Epsilon value used for float calculations.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.2.000 (2008-10-29);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$fgcolor;PHP:Var Name;3211394257;f11;732;19;732;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current foreground color.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$fhPt;PHP:Var Name;3211394257;f11;216;16;216;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Height of page format in points.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$fileContentCache;PHP:Var Name;3211394257;f11;1856;28;1856;;;;vposarray;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$file_id;PHP:Var Name;3211394257;f11;838;19;838;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    File ID (used on document trailer).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.005 (2010-05-12);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$font_obj_ids;PHP:Var Name;3211394257;f11;1222;24;1222;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Store the font object IDs.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.001 (2009-09-09);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$font_spacing;PHP:Var Name;3211394257;f11;1564;24;1564;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Increases or decreases the space between characters in a text by the specified amount (tracking).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.000 (2010-09-29);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$font_stretching;PHP:Var Name;3211394257;f11;1557;27;1557;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Percentage of character stretching.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.000 (2010-09-29);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$font_subsetting;PHP:Var Name;3211394257;f11;1522;27;1522;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Boolean flag: if true enables font subsetting by default.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.3.002 (2010-06-07);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$fontkeys;PHP:Var Name;3211394257;f11;1215;20;1215;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Store the font keys.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.000 (2009-01-02);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$fontlist;PHP:Var Name;3211394257;f11;726;20;726;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    List of available fonts on filesystem.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$fonts;PHP:Var Name;3211394257;f11;326;17;326;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of used fonts.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$footer_font;PHP:Var Name;3211394257;f11;615;23;615;;;;vposarray;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$footer_line_color;PHP:Var Name;3211394257;f11;699;29;699;;;;vposint;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$footer_margin;PHP:Var Name;3211394257;f11;585;25;585;;;;vposfloat;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$footer_text_color;PHP:Var Name;3211394257;f11;690;29;690;;;;vposint;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$footerlen;PHP:Var Name;3211394257;f11;1004;21;1004;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array used to store footer length of each page.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.014 (2008-07-29);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$footerpos;PHP:Var Name;3211394257;f11;997;21;997;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array used to store footer positions of each page.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.2.000 (2008-07-01);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$force_srgb;PHP:Var Name;3211394257;f11;1768;22;1768;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true force sRGB color profile for all document.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.121 (2011-09-28);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$form_action;PHP:Var Name;3211394257;f11;1369;23;1369;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current form action (used during XHTML rendering).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.000 (2009-09-07);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$form_enctype;PHP:Var Name;3211394257;f11;1376;24;1376;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current form encryption type (used during XHTML rendering).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.000 (2009-09-07);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$form_mode;PHP:Var Name;3211394257;f11;1383;21;1383;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current method to submit forms.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.000 (2009-09-07);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$form_obj_id;PHP:Var Name;3211394257;f11;1348;23;1348;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    List of form annotations IDs.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.000 (2009-09-07);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$fwPt;PHP:Var Name;3211394257;f11;210;16;210;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Width of page format in points.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$gdgammacache;PHP:Var Name;3211394257;f11;1848;24;1848;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Cache array for computed GD gamma values.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.1632 (2012-06-05);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$gradients;PHP:Var Name;3211394257;f11;962;21;962;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array for storing gradient information.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.1.000 (2008-06-09);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$h;PHP:Var Name;3211394257;f11;240;13;240;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current height of page in user unit.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$hPt;PHP:Var Name;3211394257;f11;228;15;228;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current height of page in points.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$hash_key;PHP:Var Name;3211394257;f11;845;20;845;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Internal secret used to encrypt data.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 6.7.5 (2024-03-21);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$header_font;PHP:Var Name;3211394257;f11;607;23;607;;;;vposarray;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$header_line_color;PHP:Var Name;3211394257;f11;681;29;681;;;;vposint;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$header_logo;PHP:Var Name;3211394257;f11;645;23;645;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Header image logo.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$header_logo_width;PHP:Var Name;3211394257;f11;651;29;651;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Width of header image logo in user units.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$header_margin;PHP:Var Name;3211394257;f11;578;25;578;;;;vposfloat;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$header_string;PHP:Var Name;3211394257;f11;663;25;663;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    String to print on page header after title.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$header_text_color;PHP:Var Name;3211394257;f11;672;29;672;;;;vposint;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$header_title;PHP:Var Name;3211394257;f11;657;24;657;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Title to be printed on default page header.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$header_xobj_autoreset;PHP:Var Name;3211394257;f11;571;33;571;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true reset the Header Xobject template at each page&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$header_xobjid;PHP:Var Name;3211394257;f11;565;25;565;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ID of the stored default header template (-1 = not set).&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$htmlLinkColorArray;PHP:Var Name;3211394257;f11;1159;30;1159;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default color for html links.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.4.003 (2008-12-09);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$htmlLinkFontStyle;PHP:Var Name;3211394257;f11;1166;29;1166;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default font style to add to html links.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.4.003 (2008-12-09);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$htmlvspace;PHP:Var Name;3211394257;f11;1060;22;1060;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Count the latest inserted vertical spaces on HTML.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.021 (2008-08-24);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$imagekeys;PHP:Var Name;3211394257;f11;1194;21;1194;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Store the image keys.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.000 (2008-12-31);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$images;PHP:Var Name;3211394257;f11;344;18;344;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of used images.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$img_rb_x;PHP:Var Name;3211394257;f11;528;20;528;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The right-bottom (or left-bottom for RTL) corner X coordinate of last inserted image.&#10;&lt;b&gt;since&lt;/b&gt;: 2002-07-31&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$img_rb_y;PHP:Var Name;3211394257;f11;536;20;536;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The right-bottom corner Y coordinate of last inserted image.&#10;&lt;b&gt;since&lt;/b&gt;: 2002-07-31&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$imgscale;PHP:Var Name;3211394257;f11;544;20;544;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adjusting factor to convert pixels to user units.&#10;&lt;b&gt;since&lt;/b&gt;: 2004-06-14&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$inthead;PHP:Var Name;3211394257;f11;1432;19;1432;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    True when we are printing the thead section on a new page.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.027 (2010-01-25);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$intmrk;PHP:Var Name;3211394257;f11;969;18;969;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array used to store positions inside the pages buffer (keys are the page numbers).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.2.000 (2008-06-26);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$inxobj;PHP:Var Name;3211394257;f11;1543;18;1543;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Boolean value true when we are inside an XObject.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.8.017 (2010-08-24);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$isunicode;PHP:Var Name;3211394257;f11;552;21;552;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Boolean flag set to true when the input text is unicode (require unicode fonts).&#10;&lt;b&gt;since&lt;/b&gt;: 2005-01-02&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$javascript;PHP:Var Name;3211394257;f11;870;22;870;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Javascript code.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.002 (2008-02-12);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$jpeg_quality;PHP:Var Name;3211394257;f11;933;24;933;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the default JPEG compression quality (1-100).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.000 (2008-03-27);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$js_objects;PHP:Var Name;3211394257;f11;1362;22;1362;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Javascript objects array.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.000 (2009-09-07);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$k;PHP:Var Name;3211394257;f11;204;13;204;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Scale factor (number of points in user unit).&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$keywords;PHP:Var Name;3211394257;f11;508;20;508;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Document keywords.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$l;PHP:Var Name;3211394257;f11;621;13;621;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Language templates.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$lMargin;PHP:Var Name;3211394257;f11;246;19;246;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Left margin.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$last_enc_key;PHP:Var Name;3211394257;f11;824;24;824;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Last RC4 key encrypted (cached for optimisation).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.0.000 (2008-01-02);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$last_enc_key_c;PHP:Var Name;3211394257;f11;831;26;831;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Last RC4 computed key.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.0.000 (2008-01-02);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$lasth;PHP:Var Name;3211394257;f11;308;17;308;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Height of last cell printed.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$linestyleCap;PHP:Var Name;3211394257;f11;1032;24;1032;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    PDF string for CAP value of the last line.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.006 (2008-07-16);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$linestyleDash;PHP:Var Name;3211394257;f11;1046;25;1046;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    PDF string for dash value of the last line.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.006 (2008-07-16);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$linestyleJoin;PHP:Var Name;3211394257;f11;1039;25;1039;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    PDF string for join value of the last line.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.006 (2008-07-16);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$linestyleWidth;PHP:Var Name;3211394257;f11;1025;26;1025;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    PDF string for width value of the last line.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.006 (2008-07-16);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$linethrough;PHP:Var Name;3211394257;f11;884;23;884;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    line through state&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.8.000 (2008-03-19);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$links;PHP:Var Name;3211394257;f11;362;17;362;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of internal links.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$lispacer;PHP:Var Name;3211394257;f11;780;20;780;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Spacer string for LI tags.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$listcount;PHP:Var Name;3211394257;f11;744;21;744;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    HTML PARSER: array count list items on nested lists.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$listindent;PHP:Var Name;3211394257;f11;756;22;756;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    HTML PARSER: indent amount for lists.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$listindentlevel;PHP:Var Name;3211394257;f11;762;27;762;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    HTML PARSER: current list indententation level.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$listnum;PHP:Var Name;3211394257;f11;750;19;750;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    HTML PARSER: current list nesting level.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$listordered;PHP:Var Name;3211394257;f11;738;23;738;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    HTML PARSER: array of boolean values, true in case of ordered list (OL), false otherwise.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$lisymbol;PHP:Var Name;3211394257;f11;1074;20;1074;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Symbol used for HTML unordered list items.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.028 (2008-09-26);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$maxselcol;PHP:Var Name;3211394257;f11;1467;21;1467;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Maximum page and column selected.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.8.000 (2010-08-11);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$n;PHP:Var Name;3211394257;f11;150;13;150;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current object number.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$n_dests;PHP:Var Name;3211394257;f11;1599;19;1599;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Object ID for Named Destinations&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.097 (2011-06-23);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$n_js;PHP:Var Name;3211394257;f11;877;16;877;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Javascript counter.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.002 (2008-02-12);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$newline;PHP:Var Name;3211394257;f11;1011;19;1011;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Boolean flag to indicate if a new line is created.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.2.000 (2008-07-01);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$newpagegroup;PHP:Var Name;3211394257;f11;905;24;905;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of page numbers were a new page group was started (the page numbers are the keys of the array).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.000 (2008-03-27);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$num_columns;PHP:Var Name;3211394257;f11;1446;23;1446;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Number of colums.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.001 (2010-03-28);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$numfonts;PHP:Var Name;3211394257;f11;1208;20;1208;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Counts the number of fonts.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.000 (2009-01-02);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$numimages;PHP:Var Name;3211394257;f11;1187;21;1187;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Counts the number of pages.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.000 (2008-12-31);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$numpages;PHP:Var Name;3211394257;f11;1173;20;1173;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Counts the number of pages.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.000 (2008-12-31);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$objcopy;PHP:Var Name;3211394257;f11;1243;19;1243;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Cloned copy of the current class object.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.029 (2009-03-19);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$offsets;PHP:Var Name;3211394257;f11;156;19;156;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of object offsets.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$openMarkedContent;PHP:Var Name;3211394257;f11;1053;29;1053;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Boolean flag to indicate if marked-content sequence is open.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.013 (2008-07-28);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$opencell;PHP:Var Name;3211394257;f11;1130;20;1130;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Boolean flag to indicate if the border of the cell sides that cross the page should be removed.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.2.010 (2008-11-14);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$original_lMargin;PHP:Var Name;3211394257;f11;592;28;592;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Original left margin value.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.53.0.TC013;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$original_rMargin;PHP:Var Name;3211394257;f11;599;28;599;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Original right margin value.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.53.0.TC013;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$outlines;PHP:Var Name;3211394257;f11;854;20;854;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Outlines for bookmark.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.002 (2008-02-12);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$overline;PHP:Var Name;3211394257;f11;400;20;400;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Overlining flag.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$overprint;PHP:Var Name;3211394257;f11;1819;21;1819;;;;vposarray;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$page;PHP:Var Name;3211394257;f11;144;16;144;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current page number.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$page_boxes;PHP:Var Name;3211394257;f11;1834;22;1834;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Define the page boundaries boxes to be set on document.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.152 (2012-03-23);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$page_obj_id;PHP:Var Name;3211394257;f11;1341;23;1341;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ID of page objects.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.7.000 (2009-08-29);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$page_regions;PHP:Var Name;3211394257;f11;1572;24;1572;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of no-write regions.&#10;(&apos;page&apos; =&gt; page number or empy for current page, &apos;xt&apos; =&gt; X top, &apos;yt&apos; =&gt; Y top, &apos;xb&apos; =&gt; X bottom, &apos;yb&apos; =&gt; Y bottom, &apos;side&apos; =&gt; page side &apos;L&apos; = left or &apos;R&apos; = right)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.003 (2010-10-14);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$pagedim;PHP:Var Name;3211394257;f11;198;19;198;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Page dimensions.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$pagegroups;PHP:Var Name;3211394257;f11;912;22;912;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array that contains the number of pages in each page group.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.000 (2008-03-27);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$pagelen;PHP:Var Name;3211394257;f11;1180;19;1180;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array containing page lengths in bytes.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.000 (2008-12-31);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$pageobjects;PHP:Var Name;3211394257;f11;162;23;162;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of object IDs for each page.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$pageopen;PHP:Var Name;3211394257;f11;1229;20;1229;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Store the fage status (true when opened, false when closed).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.000 (2009-01-02);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$pages;PHP:Var Name;3211394257;f11;174;17;174;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array containing pages.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$pdfa_mode;PHP:Var Name;3211394257;f11;1775;21;1775;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true set the document to PDF/A mode.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.121 (2011-09-27);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$pdfa_version;PHP:Var Name;3211394257;f11;1782;24;1782;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    version of PDF/A mode (1 - 3).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 6.2.26 (2019-03-12);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$pdflayers;PHP:Var Name;3211394257;f11;1585;21;1585;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of PDF layers data.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.102 (2011-07-13);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$pdfunit;PHP:Var Name;3211394257;f11;1502;19;1502;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Default unit of measure for document.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-04-22);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$premode;PHP:Var Name;3211394257;f11;1144;19;1144;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Boolean flag to indicate if we are inside a PRE tag.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.4.001 (2008-12-08);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$print_footer;PHP:Var Name;3211394257;f11;639;24;639;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Boolean flag to print/hide page footer.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$print_header;PHP:Var Name;3211394257;f11;633;24;633;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Boolean flag to print/hide page header.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$rMargin;PHP:Var Name;3211394257;f11;252;19;252;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Right margin.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$radio_groups;PHP:Var Name;3211394257;f11;1404;24;1404;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    List of radio group objects IDs.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.001 (2009-09-09);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$radiobutton_groups;PHP:Var Name;3211394257;f11;1397;30;1397;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    List of radio buttons parent objects.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.001 (2009-09-09);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$rasterize_vector_images;PHP:Var Name;3211394257;f11;1515;35;1515;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Boolean flag: if true convert vector images (SVG, EPS) to raster image using GD or ImageMagick library.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-04-26);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$re_space;PHP:Var Name;3211394257;f11;1327;20;1327;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of $re_spaces parts.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.5.011 (2010-07-09);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$re_spaces;PHP:Var Name;3211394257;f11;1320;21;1320;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Regular expression used to find blank characters (required for word-wrapping).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.6.006 (2009-04-28);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$rtl;PHP:Var Name;3211394257;f11;794;15;794;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Boolean flag to indicate if the document language is Right-To-Left.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.0.000;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$sig_obj_id;PHP:Var Name;3211394257;f11;1334;22;1334;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Digital signature object ID.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.6.022 (2009-06-23);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$sign;PHP:Var Name;3211394257;f11;1271;16;1271;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Boolean flag to enable document digital signature.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.6.005 (2009-04-24);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$signature_appearance;PHP:Var Name;3211394257;f11;1292;32;1292;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Data for digital signature appearance.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.3.011 (2010-06-16);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$signature_data;PHP:Var Name;3211394257;f11;1278;26;1278;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Digital signature data.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.6.005 (2009-04-24);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$signature_max_length;PHP:Var Name;3211394257;f11;1285;32;1285;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Digital signature max length.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.6.005 (2009-04-24);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$spot_colors;PHP:Var Name;3211394257;f11;1067;23;1067;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of Spot colors.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.024 (2008-09-12);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$start_transaction_page;PHP:Var Name;3211394257;f11;1418;34;1418;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Store page number when startTransaction() is called.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.006 (2009-09-23);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$start_transaction_y;PHP:Var Name;3211394257;f11;1425;31;1425;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Store Y position when startTransaction() is called.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.001 (2010-03-28);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$starting_page_number;PHP:Var Name;3211394257;f11;520;32;520;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Starting page number.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$state;PHP:Var Name;3211394257;f11;180;17;180;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current document state.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$strokecolor;PHP:Var Name;3211394257;f11;1495;23;1495;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current stroke color.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.008 (2010-04-03);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$subject;PHP:Var Name;3211394257;f11;496;19;496;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Document subject.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$svg_tag_depth;PHP:Var Name;3211394257;f11;350;25;350;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Depth of the svg tag, to keep track if the svg tag is a subtag or the root tag.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$svgclipid;PHP:Var Name;3211394257;f11;1676;21;1676;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ID of last SVG clipPath.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-05-02);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$svgclipmode;PHP:Var Name;3211394257;f11;1655;23;1655;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Boolean value true when in SVG clipPath tag.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-04-26);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$svgclippaths;PHP:Var Name;3211394257;f11;1662;24;1662;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of SVG clipPath commands.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-05-02);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$svgcliptm;PHP:Var Name;3211394257;f11;1669;21;1669;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of SVG clipPath tranformation matrix.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.8.022 (2010-08-31);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$svgdefs;PHP:Var Name;3211394257;f11;1648;19;1648;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of SVG defs.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-05-02);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$svgdefsmode;PHP:Var Name;3211394257;f11;1641;23;1641;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Boolean value true when in SVG defs group.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-05-02);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$svgdir;PHP:Var Name;3211394257;f11;1613;18;1613;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Directory used for the last SVG image.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-05-05);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$svggradientid;PHP:Var Name;3211394257;f11;1634;25;1634;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ID of last SVG gradient.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-05-02);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$svggradients;PHP:Var Name;3211394257;f11;1627;24;1627;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of SVG gradients.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-05-02);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$svgstyles;PHP:Var Name;3211394257;f11;1697;21;1697;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of SVG properties.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-05-02);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$svgtext;PHP:Var Name;3211394257;f11;1683;19;1683;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    SVG text.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-05-02);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$svgtextmode;PHP:Var Name;3211394257;f11;1690;23;1690;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    SVG text properties.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.8.013 (2010-08-23);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$svgunit;PHP:Var Name;3211394257;f11;1620;19;1620;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Deafult unit of measure for SVG.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-05-02);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$tMargin;PHP:Var Name;3211394257;f11;270;19;270;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Top margin.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$tagvspaces;PHP:Var Name;3211394257;f11;1116;22;1116;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array used for custom vertical spaces for HTML tags.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.2.001 (2008-10-30);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$tcpdflink;PHP:Var Name;3211394257;f11;1841;21;1841;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If true print TCPDF meta link.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.152 (2012-03-23);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$tempfontsize;PHP:Var Name;3211394257;f11;774;24;774;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Temporary font size in points.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$textindent;PHP:Var Name;3211394257;f11;1411;22;1411;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Text indentation value (used for text-indent CSS attribute).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.006 (2009-09-23);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$textrendermode;PHP:Var Name;3211394257;f11;1481;26;1481;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Text rendering mode: 0 = Fill text;s 1 = Stroke text;s 2 = Fill, then stroke text;s 3 = Neither fill nor stroke text (invisible);s 4 = Fill text and add to path for clipping;s 5 = Stroke text and add to path for clipping;s 6 = Fill, then stroke text and add to path for clipping;s 7 = Add text to path for clipping.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.008 (2010-04-03);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$textstrokewidth;PHP:Var Name;3211394257;f11;1488;27;1488;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Text stroke width in doc units.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.008 (2010-04-03);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$thead;PHP:Var Name;3211394257;f11;1257;17;1257;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Table header content to be repeated on each new page.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.030 (2009-03-20);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$theadMargins;PHP:Var Name;3211394257;f11;1264;24;1264;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Margins used for table header.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.030 (2009-03-20);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$title;PHP:Var Name;3211394257;f11;490;17;490;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Document title.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$tmprtl;PHP:Var Name;3211394257;f11;801;18;801;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Boolean flag used to force RTL or LTR string direction.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.0.000;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$tocpage;PHP:Var Name;3211394257;f11;1508;19;1508;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Boolean flag true when we are on TOC (Table Of Content) page.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$transfmatrix;PHP:Var Name;3211394257;f11;1088;24;1088;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of transformation matrix.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.2.000 (2008-10-29);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$transfmatrix_key;PHP:Var Name;3211394257;f11;1095;28;1095;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current key for transformation matrix.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.005 (2009-09-17);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$transfmrk;PHP:Var Name;3211394257;f11;1152;21;1152;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array used to store positions of graphics transformation blocks inside the page buffer.&#10;keys are the page numbers&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.4.002 (2008-12-09);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$tsa_data;PHP:Var Name;3211394257;f11;1313;20;1313;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Timestamping data.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 6.0.085 (2014-06-19);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$tsa_timestamp;PHP:Var Name;3211394257;f11;1306;25;1306;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Boolean flag to enable document timestamping with TSA.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 6.0.085 (2014-06-19);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$txtshadow;PHP:Var Name;3211394257;f11;706;21;706;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Text shadow data array.&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.174 (2012-07-25)&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$underline;PHP:Var Name;3211394257;f11;394;21;394;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Underlining flag.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$ur;PHP:Var Name;3211394257;f11;891;14;891;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array with additional document-wide usage rights for the document.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.8.014 (2010-08-23);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$viewer_preferences;PHP:Var Name;3211394257;f11;948;30;948;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    PDF viewer preferences.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.1.000 (2008-06-09);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$w;PHP:Var Name;3211394257;f11;234;13;234;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current width of page in user unit.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$wPt;PHP:Var Name;3211394257;f11;222;15;222;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current width of page in points.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$x;PHP:Var Name;3211394257;f11;296;13;296;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current horizontal position in user unit for cell positioning.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$xobjects;PHP:Var Name;3211394257;f11;1536;20;1536;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of XObjects.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.8.014 (2010-08-23);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$xobjid;PHP:Var Name;3211394257;f11;1550;18;1550;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current XObject ID.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.8.017 (2010-08-24);;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$y;PHP:Var Name;3211394257;f11;302;13;302;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current vertical position in user unit for cell positioning.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="TCPDF2DBarcode;PHP:Class Name;215621312;f0;49;1;344;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TCPDF2DBarcode&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;class&lt;/b&gt;: TCPDF2DBarcode&#10;PHP class to creates array representations for 2D barcodes to be used with TCPDF (http://www.tcpdf.org).&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcpdf&#10;&lt;b&gt;version&lt;/b&gt;: 1.0.015&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni;;d21,49;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;215621312;f8;67;2;69;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($code, $type)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This is the class constructor.&#10;Return an array representations for 2D barcodes:&lt;ul&gt;&#10;&lt;li&gt;$arrcode[&apos;code&apos;] code to be printed on text label&lt;/li&gt;&#10;&lt;li&gt;$arrcode[&apos;num_rows&apos;] required number of rows&lt;/li&gt;&#10;&lt;li&gt;$arrcode[&apos;num_cols&apos;] required number of columns&lt;/li&gt;&#10;&lt;li&gt;$arrcode[&apos;bcode&apos;][$r][$c] value of the cell is $r row and $c column (0 = transparent, 1 = black)&lt;/li&gt;&lt;/ul&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to print&#10;    string &lt;b&gt;$type&lt;/b&gt;: type of barcode: &lt;ul&gt;&lt;li&gt;DATAMATRIX : Datamatrix (ISO/IEC 16022)&lt;/li&gt;&lt;li&gt;PDF417 : PDF417 (ISO/IEC 15438:2006)&lt;/li&gt;&lt;li&gt;PDF417,a,e,t,s,f,o0,o1,o2,o3,o4,o5,o6 : PDF417 with parameters: a = aspect ratio (width/height);s e = error correction level (0-8);s t = total number of macro segments;s s = macro segment index (0-99998);s f = file ID;s o0 = File Name (text);s o1 = Segment Count (numeric);s o2 = Time Stamp (numeric);s o3 = Sender (text);s o4 = Addressee (text);s o5 = File Size (numeric);s o6 = Checksum (numeric). NOTES: Parameters t, s and f are required for a Macro Control Block, all other parameters are optional. To use a comma character &apos;,&apos; on text options, replace it with the character 255: &quot;\xff&quot;.&lt;/li&gt;&lt;li&gt;QRCODE : QRcode Low error correction&lt;/li&gt;&lt;li&gt;QRCODE,L : QRcode Low error correction&lt;/li&gt;&lt;li&gt;QRCODE,M : QRcode Medium error correction&lt;/li&gt;&lt;li&gt;QRCODE,Q : QRcode Better error correction&lt;/li&gt;&lt;li&gt;QRCODE,H : QR-CODE Best error correction&lt;/li&gt;&lt;li&gt;RAW: raw mode - comma-separad list of array rows&lt;/li&gt;&lt;li&gt;RAW2: raw mode - array rows are surrounded by square parenthesis.&lt;/li&gt;&lt;li&gt;TEST : Test matrix&lt;/li&gt;&lt;/ul&gt;;;d43,67;;b1,0;;m0;;e0;;i0;;o;;k;;l $code;;p $type;;p;;x;;x;;n">
</treenode>
<treenode node="getBarcodeArray;PHP:Function Name;215621312;f8;75;2;77;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBarcodeArray()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return an array representations of barcode.;;d35,75;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getBarcodeHTML;PHP:Function Name;215621312;f8;143;2;162;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBarcodeHTML($w=10, $h=10, $color=&apos;black&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return an HTML representation of barcode.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$w&lt;/b&gt;: Width of a single rectangle element in pixels.&#10;    int &lt;b&gt;$h&lt;/b&gt;: Height of a single rectangle element in pixels.&#10;    string &lt;b&gt;$color&lt;/b&gt;: Foreground color for bar elements (background is transparent).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   HTML code.;;d62,143;;b1,0;;m0;;e0;;i0;;o;;k;;l $w;;p $h;;p $color;;p;;x;;x;;x;;n">
</treenode>
<treenode node="getBarcodePNG;PHP:Function Name;215621312;f8;171;2;182;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBarcodePNG($w=3, $h=3, $color=array(0,0,0))&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Send a PNG image representation of barcode (requires GD or Imagick library).&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$w&lt;/b&gt;: Width of a single rectangle element in pixels.&#10;    int &lt;b&gt;$h&lt;/b&gt;: Height of a single rectangle element in pixels.&#10;    array &lt;b&gt;$color&lt;/b&gt;: RGB (0-255) foreground color for bar elements (background is transparent).;;d64,171;;b1,0;;m0;;e0;;i0;;o;;k;;l $w;;p $h;;p $color;;p;;x;;x;;x;;n">
</treenode>
<treenode node="getBarcodePngData;PHP:Function Name;215621312;f8;192;2;243;;;;vpos;;v;;astring|Imagick|false;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBarcodePngData($w=3, $h=3, $color=array(0,0,0))&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return a PNG image representation of barcode (requires GD or Imagick library).&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$w&lt;/b&gt;: Width of a single rectangle element in pixels.&#10;    int &lt;b&gt;$h&lt;/b&gt;: Height of a single rectangle element in pixels.&#10;    array &lt;b&gt;$color&lt;/b&gt;: RGB (0-255) foreground color for bar elements (background is transparent).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   image or false in case of error.;;d68,192;;b1,0;;m0;;e0;;i0;;o;;k;;l $w;;p $h;;p $color;;p;;x;;x;;x;;n">
</treenode>
<treenode node="getBarcodeSVG;PHP:Function Name;215621312;f8;86;2;97;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBarcodeSVG($w=3, $h=3, $color=&apos;black&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Send barcode as SVG image object to the standard output.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$w&lt;/b&gt;: Width of a single rectangle element in user units.&#10;    int &lt;b&gt;$h&lt;/b&gt;: Height of a single rectangle element in user units.&#10;    string &lt;b&gt;$color&lt;/b&gt;: Foreground color (in SVG format) for bar elements (background is transparent).;;d59,86;;b1,0;;m0;;e0;;i0;;o;;k;;l $w;;p $h;;p $color;;p;;x;;x;;x;;n">
</treenode>
<treenode node="getBarcodeSVGcode;PHP:Function Name;215621312;f8;107;2;133;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBarcodeSVGcode($w=3, $h=3, $color=&apos;black&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return a SVG string representation of barcode.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$w&lt;/b&gt;: Width of a single rectangle element in user units.&#10;    int &lt;b&gt;$h&lt;/b&gt;: Height of a single rectangle element in user units.&#10;    string &lt;b&gt;$color&lt;/b&gt;: Foreground color (in SVG format) for bar elements (background is transparent).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   SVG code.;;d63,107;;b1,0;;m0;;e0;;i0;;o;;k;;l $w;;p $h;;p $color;;p;;x;;x;;x;;n">
</treenode>
<treenode node="setBarcode;PHP:Function Name;215621312;f8;251;2;343;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setBarcode($code, $type)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the barcode.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to print&#10;    string &lt;b&gt;$type&lt;/b&gt;: type of barcode: &lt;ul&gt;&lt;li&gt;DATAMATRIX : Datamatrix (ISO/IEC 16022)&lt;/li&gt;&lt;li&gt;PDF417 : PDF417 (ISO/IEC 15438:2006)&lt;/li&gt;&lt;li&gt;PDF417,a,e,t,s,f,o0,o1,o2,o3,o4,o5,o6 : PDF417 with parameters: a = aspect ratio (width/height);s e = error correction level (0-8);s t = total number of macro segments;s s = macro segment index (0-99998);s f = file ID;s o0 = File Name (text);s o1 = Segment Count (numeric);s o2 = Time Stamp (numeric);s o3 = Sender (text);s o4 = Addressee (text);s o5 = File Size (numeric);s o6 = Checksum (numeric). NOTES: Parameters t, s and f are required for a Macro Control Block, all other parameters are optional. To use a comma character &apos;,&apos; on text options, replace it with the character 255: &quot;\xff&quot;.&lt;/li&gt;&lt;li&gt;QRCODE : QRcode Low error correction&lt;/li&gt;&lt;li&gt;QRCODE,L : QRcode Low error correction&lt;/li&gt;&lt;li&gt;QRCODE,M : QRcode Medium error correction&lt;/li&gt;&lt;li&gt;QRCODE,Q : QRcode Better error correction&lt;/li&gt;&lt;li&gt;QRCODE,H : QR-CODE Best error correction&lt;/li&gt;&lt;li&gt;RAW: raw mode - comma-separad list of array rows&lt;/li&gt;&lt;li&gt;RAW2: raw mode - array rows are surrounded by square parenthesis.&lt;/li&gt;&lt;li&gt;TEST : Test matrix&lt;/li&gt;&lt;/ul&gt;;;d42,251;;b1,0;;m0;;e0;;i0;;o;;k;;l $code;;p $type;;p;;x;;x;;n">
</treenode>
<treenode node="$barcode_array;PHP:Var Name;215621312;f11;55;25;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array representation of barcode.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="TCPDFBarcode;PHP:Class Name;1215568595;f0;49;1;2352;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TCPDFBarcode&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;class&lt;/b&gt;: TCPDFBarcode&#10;PHP class to creates array representations for common 1D barcodes to be used with TCPDF (http://www.tcpdf.org).&lt;br&gt;&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcpdf&#10;&lt;b&gt;version&lt;/b&gt;: 1.0.027&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni;;d19,49;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;1215568595;f8;72;2;74;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($code, $type)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This is the class constructor.&#10;Return an array representations for common 1D barcodes:&lt;ul&gt;&#10;&lt;li&gt;$arrcode[&apos;code&apos;] code to be printed on text label&lt;/li&gt;&#10;&lt;li&gt;$arrcode[&apos;maxh&apos;] max barcode height&lt;/li&gt;&#10;&lt;li&gt;$arrcode[&apos;maxw&apos;] max barcode width&lt;/li&gt;&#10;&lt;li&gt;$arrcode[&apos;bcode&apos;][$k] single bar or space in $k position&lt;/li&gt;&#10;&lt;li&gt;$arrcode[&apos;bcode&apos;][$k][&apos;t&apos;] bar type: true = bar, false = space.&lt;/li&gt;&#10;&lt;li&gt;$arrcode[&apos;bcode&apos;][$k][&apos;w&apos;] bar width in units.&lt;/li&gt;&#10;&lt;li&gt;$arrcode[&apos;bcode&apos;][$k][&apos;h&apos;] bar height in units.&lt;/li&gt;&#10;&lt;li&gt;$arrcode[&apos;bcode&apos;][$k][&apos;p&apos;] bar top position (0 = top, 1 = middle)&lt;/li&gt;&lt;/ul&gt;&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to print&#10;    string &lt;b&gt;$type&lt;/b&gt;: type of barcode: &lt;ul&gt;&lt;li&gt;C39 : CODE 39 - ANSI MH10.8M-1983 - USD-3 - 3 of 9.&lt;/li&gt;&lt;li&gt;C39+ : CODE 39 with checksum&lt;/li&gt;&lt;li&gt;C39E : CODE 39 EXTENDED&lt;/li&gt;&lt;li&gt;C39E+ : CODE 39 EXTENDED + CHECKSUM&lt;/li&gt;&lt;li&gt;C93 : CODE 93 - USS-93&lt;/li&gt;&lt;li&gt;S25 : Standard 2 of 5&lt;/li&gt;&lt;li&gt;S25+ : Standard 2 of 5 + CHECKSUM&lt;/li&gt;&lt;li&gt;I25 : Interleaved 2 of 5&lt;/li&gt;&lt;li&gt;I25+ : Interleaved 2 of 5 + CHECKSUM&lt;/li&gt;&lt;li&gt;C128 : CODE 128&lt;/li&gt;&lt;li&gt;C128A : CODE 128 A&lt;/li&gt;&lt;li&gt;C128B : CODE 128 B&lt;/li&gt;&lt;li&gt;C128C : CODE 128 C&lt;/li&gt;&lt;li&gt;EAN2 : 2-Digits UPC-Based Extension&lt;/li&gt;&lt;li&gt;EAN5 : 5-Digits UPC-Based Extension&lt;/li&gt;&lt;li&gt;EAN8 : EAN 8&lt;/li&gt;&lt;li&gt;EAN13 : EAN 13&lt;/li&gt;&lt;li&gt;UPCA : UPC-A&lt;/li&gt;&lt;li&gt;UPCE : UPC-E&lt;/li&gt;&lt;li&gt;MSI : MSI (Variation of Plessey code)&lt;/li&gt;&lt;li&gt;MSI+ : MSI + CHECKSUM (modulo 11)&lt;/li&gt;&lt;li&gt;POSTNET : POSTNET&lt;/li&gt;&lt;li&gt;PLANET : PLANET&lt;/li&gt;&lt;li&gt;RMS4CC : RMS4CC (Royal Mail 4-state Customer Code) - CBC (Customer Bar Code)&lt;/li&gt;&lt;li&gt;KIX : KIX (Klant index - Customer index)&lt;/li&gt;&lt;li&gt;IMB: Intelligent Mail Barcode - Onecode - USPS-B-3200&lt;/li&gt;&lt;li&gt;CODABAR : CODABAR&lt;/li&gt;&lt;li&gt;CODE11 : CODE 11&lt;/li&gt;&lt;li&gt;PHARMA : PHARMACODE&lt;/li&gt;&lt;li&gt;PHARMA2T : PHARMACODE TWO-TRACKS&lt;/li&gt;&lt;/ul&gt;;;d43,72;;b1,0;;m0;;e0;;i0;;o;;k;;l $code;;p $type;;p;;x;;x;;n">
</treenode>
<treenode node="barcode_c128;PHP:Function Name;1215568595;f11;956;2;1278;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    barcode_c128($code, $type=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    C128 barcodes.&#10;Very capable code, excellent density, high reliability;s in very wide use world-wide&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to represent.&#10;    string &lt;b&gt;$type&lt;/b&gt;: barcode type: A, B, C or empty for automatic switch (AUTO mode)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   barcode representation.;;d50,956;;b2,0;;m0;;e0;;i0;;o;;k;;l $code;;p $type;;p;;x;;x;;n">
</treenode>
<treenode node="barcode_codabar;PHP:Function Name;1215568595;f11;1817;2;1864;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    barcode_codabar($code)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    CODABAR barcodes.&#10;Older code often used in library systems, sometimes in blood banks&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to represent.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   barcode representation.;;d43,1817;;b2,0;;m0;;e0;;i0;;o;;k;;l $code;;p;;x;;n">
</treenode>
<treenode node="barcode_code11;PHP:Function Name;1215568595;f11;1873;2;1955;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    barcode_code11($code)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    CODE11 barcodes.&#10;Used primarily for labeling telecommunications equipment&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to represent.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   barcode representation.;;d42,1873;;b2,0;;m0;;e0;;i0;;o;;k;;l $code;;p;;x;;n">
</treenode>
<treenode node="barcode_code39;PHP:Function Name;1215568595;f11;392;2;477;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    barcode_code39($code, $extended=false, $checksum=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    CODE 39 - ANSI MH10.8M-1983 - USD-3 - 3 of 9.&#10;General-purpose code in very wide use world-wide&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to represent.&#10;    boolean &lt;b&gt;$extended&lt;/b&gt;: if true uses the extended mode.&#10;    boolean &lt;b&gt;$checksum&lt;/b&gt;: if true add a checksum to the code.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   barcode representation.;;d76,392;;b2,0;;m0;;e0;;i0;;o;;k;;l $code;;p $extended;;p $checksum;;p;;x;;x;;x;;n">
</treenode>
<treenode node="barcode_code93;PHP:Function Name;1215568595;f11;559;2;679;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    barcode_code93($code)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    CODE 93 - USS-93&#10;Compact code similar to Code 39&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to represent.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   barcode representation.;;d42,559;;b2,0;;m0;;e0;;i0;;o;;k;;l $code;;p;;x;;n">
</treenode>
<treenode node="barcode_eanext;PHP:Function Name;1215568595;f11;1518;2;1583;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    barcode_eanext($code, $len=5)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    UPC-Based Extensions&#10;2-Digit Ext.: Used to indicate magazines and newspaper issue numbers&#10;5-Digit Ext.: Used to mark suggested retail price of books&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to represent.&#10;    string &lt;b&gt;$len&lt;/b&gt;: barcode type: 2 = 2-Digit, 5 = 5-Digit&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   barcode representation.;;d50,1518;;b2,0;;m0;;e0;;i0;;o;;k;;l $code;;p $len;;p;;x;;x;;n">
</treenode>
<treenode node="barcode_eanupc;PHP:Function Name;1215568595;f11;1325;2;1507;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    barcode_eanupc($code, $len=13)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    EAN13 and UPC-A barcodes.&#10;EAN13: European Article Numbering international retail product code&#10;UPC-A: Universal product code seen on almost all retail products in the USA and Canada&#10;UPC-E: Short version of UPC symbol&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to represent.&#10;    string &lt;b&gt;$len&lt;/b&gt;: barcode type: 6 = UPC-E, 8 = EAN8, 13 = EAN13, 12 = UPC-A&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   barcode representation.;;d51,1325;;b2,0;;m0;;e0;;i0;;o;;k;;l $code;;p $len;;p;;x;;x;;n">
</treenode>
<treenode node="barcode_i25;PHP:Function Name;1215568595;f11;892;2;946;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    barcode_i25($code, $checksum=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Interleaved 2 of 5 barcodes.&#10;Compact numeric code, widely used in industry, air cargo&#10;Contains digits (0 to 9) and encodes the data in the width of both bars and spaces.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to represent.&#10;    boolean &lt;b&gt;$checksum&lt;/b&gt;: if true add a checksum to the code&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   barcode representation.;;d56,892;;b2,0;;m0;;e0;;i0;;o;;k;;l $code;;p $checksum;;p;;x;;x;;n">
</treenode>
<treenode node="barcode_imb;PHP:Function Name;1215568595;f11;2052;2;2168;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    barcode_imb($code)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    IMB - Intelligent Mail Barcode - Onecode - USPS-B-3200&#10;(requires PHP bcmath extension)&#10;Intelligent Mail barcode is a 65-bar code for use on mail in the United States.&#10;The fields are described as follows:&lt;ul&gt;&lt;li&gt;The Barcode Identifier shall be assigned by USPS to encode the presort identification that is currently printed in human readable form on the optional endorsement line (OEL) as well as for future USPS use. This shall be two digits, with the second digit in the range of 0–4. The allowable encoding ranges shall be 00–04, 10–14, 20–24, 30–34, 40–44, 50–54, 60–64, 70–74, 80–84, and 90–94.&lt;/li&gt;&lt;li&gt;The Service Type Identifier shall be assigned by USPS for any combination of services requested on the mailpiece. The allowable encoding range shall be 000http://it2.php.net/manual/en/function.dechex.php–999. Each 3-digit value shall correspond to a particular mail class with a particular combination of service(s). Each service program, such as OneCode Confirm and OneCode ACS, shall provide the list of Service Type Identifier values.&lt;/li&gt;&lt;li&gt;The Mailer or Customer Identifier shall be assigned by USPS as a unique, 6 or 9 digit number that identifies a business entity. The allowable encoding range for the 6 digit Mailer ID shall be 000000- 899999, while the allowable encoding range for the 9 digit Mailer ID shall be 900000000-999999999.&lt;/li&gt;&lt;li&gt;The Serial or Sequence Number shall be assigned by the mailer for uniquely identifying and tracking mailpieces. The allowable encoding range shall be 000000000–999999999 when used with a 6 digit Mailer ID and 000000-999999 when used with a 9 digit Mailer ID. e. The Delivery Point ZIP Code shall be assigned by the mailer for routing the mailpiece. This shall replace POSTNET for routing the mailpiece to its final delivery point. The length may be 0, 5, 9, or 11 digits. The allowable encoding ranges shall be no ZIP Code, 00000–99999,  000000000–999999999, and 00000000000–99999999999.&lt;/li&gt;&lt;/ul&gt;&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to print, separate the ZIP (routing code) from the rest using a minus char &apos;-&apos; (BarcodeID_ServiceTypeID_MailerID_SerialNumber-RoutingCode)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   barcode representation.;;d39,2052;;b2,0;;m0;;e0;;i0;;o;;k;;l $code;;p;;x;;n">
</treenode>
<treenode node="barcode_imb_pre;PHP:Function Name;1215568595;f11;2177;2;2219;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    barcode_imb_pre($code)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    IMB - Intelligent Mail Barcode - Onecode - USPS-B-3200&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: pre-formatted IMB barcode (65 chars &quot;FADT&quot;)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   barcode representation.;;d43,2177;;b2,0;;m0;;e0;;i0;;o;;k;;l $code;;p;;x;;n">
</treenode>
<treenode node="barcode_msi;PHP:Function Name;1215568595;f11;762;2;810;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    barcode_msi($code, $checksum=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    MSI.&#10;Variation of Plessey code, with similar applications&#10;Contains digits (0 to 9) and encodes the data only in the width of bars.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to represent.&#10;    boolean &lt;b&gt;$checksum&lt;/b&gt;: if true add a checksum to the code (modulo 11)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   barcode representation.;;d56,762;;b2,0;;m0;;e0;;i0;;o;;k;;l $code;;p $checksum;;p;;x;;x;;n">
</treenode>
<treenode node="barcode_pharmacode;PHP:Function Name;1215568595;f11;1964;2;1981;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    barcode_pharmacode($code)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Pharmacode&#10;Contains digits (0 to 9)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to represent.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   barcode representation.;;d46,1964;;b2,0;;m0;;e0;;i0;;o;;k;;l $code;;p;;x;;n">
</treenode>
<treenode node="barcode_pharmacode2t;PHP:Function Name;1215568595;f11;1990;2;2041;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    barcode_pharmacode2t($code)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Pharmacode two-track&#10;Contains digits (0 to 9)&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to represent.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   barcode representation.;;d48,1990;;b2,0;;m0;;e0;;i0;;o;;k;;l $code;;p;;x;;n">
</treenode>
<treenode node="barcode_postnet;PHP:Function Name;1215568595;f11;1593;2;1655;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    barcode_postnet($code, $planet=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    POSTNET and PLANET barcodes.&#10;Used by U.S. Postal Service for automated mail sorting&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: zip code to represent. Must be a string containing a zip code of the form DDDDD or DDDDD-DDDD.&#10;    boolean &lt;b&gt;$planet&lt;/b&gt;: if true print the PLANET barcode, otherwise print POSTNET&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   barcode representation.;;d58,1593;;b2,0;;m0;;e0;;i0;;o;;k;;l $code;;p $planet;;p;;x;;x;;n">
</treenode>
<treenode node="barcode_rms4cc;PHP:Function Name;1215568595;f11;1666;2;1808;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    barcode_rms4cc($code, $kix=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    RMS4CC - CBC - KIX&#10;RMS4CC (Royal Mail 4-state Customer Code) - CBC (Customer Bar Code) - KIX (Klant index - Customer index)&#10;RM4SCC is the name of the barcode symbology used by the Royal Mail for its Cleanmail service.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to print&#10;    boolean &lt;b&gt;$kix&lt;/b&gt;: if true prints the KIX variation (doesn&apos;t use the start and end symbols, and the checksum) - in this case the house number must be sufficed with an X and placed at the end of the code.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   barcode representation.;;d54,1666;;b2,0;;m0;;e0;;i0;;o;;k;;l $code;;p $kix;;p;;x;;x;;n">
</treenode>
<treenode node="barcode_s25;PHP:Function Name;1215568595;f11;821;2;853;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    barcode_s25($code, $checksum=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Standard 2 of 5 barcodes.&#10;Used in airline ticket marking, photofinishing&#10;Contains digits (0 to 9) and encodes the data only in the width of bars.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to represent.&#10;    boolean &lt;b&gt;$checksum&lt;/b&gt;: if true add a checksum to the code&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   barcode representation.;;d56,821;;b2,0;;m0;;e0;;i0;;o;;k;;l $code;;p $checksum;;p;;x;;x;;n">
</treenode>
<treenode node="binseq_to_array;PHP:Function Name;1215568595;f11;862;2;881;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    binseq_to_array($seq, $bararray)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert binary barcode sequence to WarnockPDF barcode array.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$seq&lt;/b&gt;: barcode as binary sequence.&#10;    array &lt;b&gt;$bararray&lt;/b&gt;: barcode array to fill up&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   barcode representation.;;d53,862;;b2,0;;m0;;e0;;i0;;o;;k;;l $seq;;p $bararray;;p;;x;;x;;n">
</treenode>
<treenode node="checksum_code39;PHP:Function Name;1215568595;f11;536;2;550;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    checksum_code39($code)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Calculate CODE 39 checksum (modulo 43).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to represent.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   char checksum.;;d43,536;;b2,0;;m0;;e0;;i0;;o;;k;;l $code;;p;;x;;n">
</treenode>
<treenode node="checksum_code93;PHP:Function Name;1215568595;f11;687;2;728;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    checksum_code93($code)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Calculate CODE 93 checksum (modulo 47).&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to represent.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   checksum code.;;d43,687;;b2,0;;m0;;e0;;i0;;o;;k;;l $code;;p;;x;;n">
</treenode>
<treenode node="checksum_s25;PHP:Function Name;1215568595;f11;736;2;751;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    checksum_s25($code)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checksum for standard 2 of 5 barcodes.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to process.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   checksum.;;d40,736;;b2,0;;m0;;e0;;i0;;o;;k;;l $code;;p;;x;;n">
</treenode>
<treenode node="dec_to_hex;PHP:Function Name;1215568595;f8;2227;2;2243;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    dec_to_hex($number)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert large integer number to hexadecimal representation.&#10;(requires PHP bcmath extension)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$number&lt;/b&gt;: number to convert specified as a string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   hexadecimal representation;;d37,2227;;b1,0;;m0;;e0;;i0;;o;;k;;l $number;;p;;x;;n">
</treenode>
<treenode node="encode_code39_ext;PHP:Function Name;1215568595;f11;485;2;528;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    encode_code39_ext($code)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Encode a string to be used for CODE 39 Extended mode.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to represent.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   encoded string.;;d45,485;;b2,0;;m0;;e0;;i0;;o;;k;;l $code;;p;;x;;n">
</treenode>
<treenode node="get128ABsequence;PHP:Function Name;1215568595;f11;1286;2;1313;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    get128ABsequence($code)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Split text code in A/B sequence for 128 code&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to split.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   sequence;;d44,1286;;b2,0;;m0;;e0;;i0;;o;;k;;l $code;;p;;x;;n">
</treenode>
<treenode node="getBarcodeArray;PHP:Function Name;1215568595;f8;81;2;83;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBarcodeArray()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return an array representations of barcode.&#10;&lt;b&gt;public&lt;/b&gt;;;d35,81;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getBarcodeHTML;PHP:Function Name;1215568595;f8;146;2;162;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBarcodeHTML($w=2, $h=30, $color=&apos;black&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return an HTML representation of barcode.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$w&lt;/b&gt;: Width of a single bar element in pixels.&#10;    int &lt;b&gt;$h&lt;/b&gt;: Height of a single bar element in pixels.&#10;    string &lt;b&gt;$color&lt;/b&gt;: Foreground color for bar elements (background is transparent).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   HTML code.;;d61,146;;b1,0;;m0;;e0;;i0;;o;;k;;l $w;;p $h;;p $color;;p;;x;;x;;x;;n">
</treenode>
<treenode node="getBarcodePNG;PHP:Function Name;1215568595;f8;171;2;181;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBarcodePNG($w=2, $h=30, $color=array(0,0,0))&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Send a PNG image representation of barcode (requires GD or Imagick library).&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$w&lt;/b&gt;: Width of a single bar element in pixels.&#10;    int &lt;b&gt;$h&lt;/b&gt;: Height of a single bar element in pixels.&#10;    array &lt;b&gt;$color&lt;/b&gt;: RGB (0-255) foreground color for bar elements (background is transparent).;;d65,171;;b1,0;;m0;;e0;;i0;;o;;k;;l $w;;p $h;;p $color;;p;;x;;x;;x;;n">
</treenode>
<treenode node="getBarcodePngData;PHP:Function Name;1215568595;f8;191;2;239;;;;vpos;;v;;astring|Imagick|false;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBarcodePngData($w=2, $h=30, $color=array(0,0,0))&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return a PNG image representation of barcode (requires GD or Imagick library).&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$w&lt;/b&gt;: Width of a single bar element in pixels.&#10;    int &lt;b&gt;$h&lt;/b&gt;: Height of a single bar element in pixels.&#10;    array &lt;b&gt;$color&lt;/b&gt;: RGB (0-255) foreground color for bar elements (background is transparent).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   image or false in case of error.;;d69,191;;b1,0;;m0;;e0;;i0;;o;;k;;l $w;;p $h;;p $color;;p;;x;;x;;x;;n">
</treenode>
<treenode node="getBarcodeSVG;PHP:Function Name;1215568595;f8;92;2;103;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBarcodeSVG($w=2, $h=30, $color=&apos;black&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Send barcode as SVG image object to the standard output.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$w&lt;/b&gt;: Minimum width of a single bar in user units.&#10;    int &lt;b&gt;$h&lt;/b&gt;: Height of barcode in user units.&#10;    string &lt;b&gt;$color&lt;/b&gt;: Foreground color (in SVG format) for bar elements (background is transparent).;;d60,92;;b1,0;;m0;;e0;;i0;;o;;k;;l $w;;p $h;;p $color;;p;;x;;x;;x;;n">
</treenode>
<treenode node="getBarcodeSVGcode;PHP:Function Name;1215568595;f8;113;2;136;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBarcodeSVGcode($w=2, $h=30, $color=&apos;black&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return a SVG string representation of barcode.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$w&lt;/b&gt;: Minimum width of a single bar in user units.&#10;    int &lt;b&gt;$h&lt;/b&gt;: Height of barcode in user units.&#10;    string &lt;b&gt;$color&lt;/b&gt;: Foreground color (in SVG format) for bar elements (background is transparent).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   SVG code.;;d64,113;;b1,0;;m0;;e0;;i0;;o;;k;;l $w;;p $h;;p $color;;p;;x;;x;;x;;n">
</treenode>
<treenode node="hex_to_dec;PHP:Function Name;1215568595;f8;2251;2;2260;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hex_to_dec($hex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert large hexadecimal number to decimal representation (string).&#10;(requires PHP bcmath extension)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$hex&lt;/b&gt;: hexadecimal number to convert specified as a string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   hexadecimal representation;;d34,2251;;b1,0;;m0;;e0;;i0;;o;;k;;l $hex;;p;;x;;n">
</treenode>
<treenode node="imb_crc11fcs;PHP:Function Name;1215568595;f11;2268;2;2296;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    imb_crc11fcs($code_arr)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Intelligent Mail Barcode calculation of Frame Check Sequence&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code_arr&lt;/b&gt;: array of hexadecimal values (13 bytes holding 102 bits right justified).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   11 bit Frame Check Sequence as integer (decimal base);;d44,2268;;b2,0;;m0;;e0;;i0;;o;;k;;l $code_arr;;p;;x;;n">
</treenode>
<treenode node="imb_reverse_us;PHP:Function Name;1215568595;f11;2304;2;2312;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    imb_reverse_us($num)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Reverse unsigned short value&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$num&lt;/b&gt;: value to reversr&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   reversed value;;d41,2304;;b2,0;;m0;;e0;;i0;;o;;k;;l $num;;p;;x;;n">
</treenode>
<treenode node="imb_tables;PHP:Function Name;1215568595;f11;2321;2;2350;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    imb_tables($n, $size)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    generate Nof13 tables used for Intelligent Mail Barcode&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$n&lt;/b&gt;: is the type of table: 2 for 2of13 table, 5 for 5of13table&#10;    int &lt;b&gt;$size&lt;/b&gt;: size of table (78 for n=2 and 1287 for n=5)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   requested table;;d42,2321;;b2,0;;m0;;e0;;i0;;o;;k;;l $n;;p $size;;p;;x;;x;;n">
</treenode>
<treenode node="setBarcode;PHP:Function Name;1215568595;f8;248;2;381;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setBarcode($code, $type)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the barcode.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: code to print&#10;    string &lt;b&gt;$type&lt;/b&gt;: type of barcode: &lt;ul&gt;&lt;li&gt;C39 : CODE 39 - ANSI MH10.8M-1983 - USD-3 - 3 of 9.&lt;/li&gt;&lt;li&gt;C39+ : CODE 39 with checksum&lt;/li&gt;&lt;li&gt;C39E : CODE 39 EXTENDED&lt;/li&gt;&lt;li&gt;C39E+ : CODE 39 EXTENDED + CHECKSUM&lt;/li&gt;&lt;li&gt;C93 : CODE 93 - USS-93&lt;/li&gt;&lt;li&gt;S25 : Standard 2 of 5&lt;/li&gt;&lt;li&gt;S25+ : Standard 2 of 5 + CHECKSUM&lt;/li&gt;&lt;li&gt;I25 : Interleaved 2 of 5&lt;/li&gt;&lt;li&gt;I25+ : Interleaved 2 of 5 + CHECKSUM&lt;/li&gt;&lt;li&gt;C128 : CODE 128&lt;/li&gt;&lt;li&gt;C128A : CODE 128 A&lt;/li&gt;&lt;li&gt;C128B : CODE 128 B&lt;/li&gt;&lt;li&gt;C128C : CODE 128 C&lt;/li&gt;&lt;li&gt;EAN2 : 2-Digits UPC-Based Extension&lt;/li&gt;&lt;li&gt;EAN5 : 5-Digits UPC-Based Extension&lt;/li&gt;&lt;li&gt;EAN8 : EAN 8&lt;/li&gt;&lt;li&gt;EAN13 : EAN 13&lt;/li&gt;&lt;li&gt;UPCA : UPC-A&lt;/li&gt;&lt;li&gt;UPCE : UPC-E&lt;/li&gt;&lt;li&gt;MSI : MSI (Variation of Plessey code)&lt;/li&gt;&lt;li&gt;MSI+ : MSI + CHECKSUM (modulo 11)&lt;/li&gt;&lt;li&gt;POSTNET : POSTNET&lt;/li&gt;&lt;li&gt;PLANET : PLANET&lt;/li&gt;&lt;li&gt;RMS4CC : RMS4CC (Royal Mail 4-state Customer Code) - CBC (Customer Bar Code)&lt;/li&gt;&lt;li&gt;KIX : KIX (Klant index - Customer index)&lt;/li&gt;&lt;li&gt;IMB: Intelligent Mail Barcode - Onecode - USPS-B-3200&lt;/li&gt;&lt;li&gt;IMBPRE: Pre-processed Intelligent Mail Barcode - Onecode - USPS-B-3200, using only F,A,D,T letters&lt;/li&gt;&lt;li&gt;CODABAR : CODABAR&lt;/li&gt;&lt;li&gt;CODE11 : CODE 11&lt;/li&gt;&lt;li&gt;PHARMA : PHARMACODE&lt;/li&gt;&lt;li&gt;PHARMA2T : PHARMACODE TWO-TRACKS&lt;/li&gt;&lt;/ul&gt;;;d42,248;;b1,0;;m0;;e0;;i0;;o;;k;;l $code;;p $type;;p;;x;;x;;n">
</treenode>
<treenode node="$barcode_array;PHP:Var Name;1215568595;f11;55;25;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array representation of barcode.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="TCPDFEX;PHP:Class Name;3817744236;f0;53;1;898;;;;vpos;;v;;aTCPDF;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TCPDFEX extends TCPDF&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;class&lt;/b&gt;: TCPDFEX&#10;This is an extension of the TCPDF class for creating PDF document.&#10;This extension allows you to define custom Header and Footer for PDF documents.&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcpdf&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni - info&#10;&lt;b&gt;tecnick&lt;/b&gt;: .com;;d0,54;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="Footer;PHP:Function Name;3817744236;f11;241;5;244;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Footer()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to render the page footer and overrides the original Footer() method on TCPDF.&#10;&lt;b&gt;public&lt;/b&gt;;;d4,242;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="Header;PHP:Function Name;3817744236;f11;142;5;235;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Header()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to render the page header and overrides the original Header() method on TCPDF.&#10;&lt;b&gt;public&lt;/b&gt;;;d4,143;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="__construct;PHP:Function Name;3817744236;f11;118;5;126;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($orientation = &apos;P&apos;, $unit = &apos;mm&apos;, $format = &apos;A4&apos;, $unicode = true, $encoding = &apos;UTF-8&apos;, $diskcache = false, $pdfa = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This is the class constructor.&#10;It allows to set up the page format, the orientation and the measure unit used in all the methods (except for the font sizes).&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;see&lt;/b&gt;: getPageSizeFromFormat(), setPageFormat()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$orientation&lt;/b&gt;: (string) page orientation. Possible values are (case insensitive):&lt;ul&gt;&lt;li&gt;P or Portrait (default)&lt;/li&gt;&lt;li&gt;L or Landscape&lt;/li&gt;&lt;li&gt;&apos;&apos; (empty string) for automatic orientation&lt;/li&gt;&lt;/ul&gt;&#10;     &lt;b&gt;$unit&lt;/b&gt;: (string) User measure unit. Possible values are:&lt;ul&gt;&lt;li&gt;pt: point&lt;/li&gt;&lt;li&gt;mm: millimeter (default)&lt;/li&gt;&lt;li&gt;cm: centimeter&lt;/li&gt;&lt;li&gt;in: inch&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;A point equals 1/72 of inch, that is to say about 0.35 mm (an inch being 2.54 cm). This is a very common unit in typography;s font sizes are expressed in that unit.&#10;     &lt;b&gt;$format&lt;/b&gt;: (mixed) The format used for pages. It can be either: one of the string values specified at getPageSizeFromFormat() or an array of parameters specified at setPageFormat().&#10;     &lt;b&gt;$unicode&lt;/b&gt;: (boolean) TRUE means that the input text is unicode (default = true)&#10;     &lt;b&gt;$encoding&lt;/b&gt;: (string) Charset encoding;s default is UTF-8.&#10;     &lt;b&gt;$diskcache&lt;/b&gt;: (boolean) If TRUE reduce the RAM memory usage by caching temporary data on filesystem (slower).&#10;     &lt;b&gt;$pdfa&lt;/b&gt;: (boolean) If TRUE set the document to PDF/A mode.;;d4,119;;b1,0;;m0;;e0;;i0;;o;;k;;l $orientation;;p $unit;;p $format;;p $unicode;;p $encoding;;p $diskcache;;p $pdfa;;p;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="printQuestionStats;PHP:Function Name;3817744236;f11;252;5;403;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    printQuestionStats($stats, $display_mode = 2)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Print question stats.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$stats&lt;/b&gt;: (array) data to print&#10;     &lt;b&gt;$display_mode&lt;/b&gt;: (int) display mode: 0 = disabled;s 1 = minimum;s 2 = module;s 3 = subject;s 4 = question;s 5 = answer.;;d4,253;;b1,0;;m0;;e0;;i0;;o;;k;;l $stats;;p $display_mode;;p;;x;;x;;n">
</treenode>
<treenode node="printSVGStatsGraph;PHP:Function Name;3817744236;f11;410;5;429;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    printSVGStatsGraph($svgdata)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Print SVG graph&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$svgdata&lt;/b&gt;: (string) String containing SVG data to print.;;d4,411;;b1,0;;m0;;e0;;i0;;o;;k;;l $svgdata;;p;;x;;n">
</treenode>
<treenode node="printTestResultStat;PHP:Function Name;3817744236;f11;437;5;570;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    printTestResultStat($data, $pubmode = false, $stats = 2)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Print test stats table&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$data&lt;/b&gt;: (array) Array containing test statistics.&#10;     &lt;b&gt;$pubmode&lt;/b&gt;: (boolean) If true filter the results for the public interface.&#10;     &lt;b&gt;$stats&lt;/b&gt;: (int) 2 = full stats;s 1 = user stats;s 0 = disabled stats;s;;d4,438;;b1,0;;m0;;e0;;i0;;o;;k;;l $data;;p $pubmode;;p $stats;;p;;x;;x;;x;;n">
</treenode>
<treenode node="printTestUserInfo;PHP:Function Name;3817744236;f11;577;5;718;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    printTestUserInfo($data, $onlytext = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Print testuser data&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$data&lt;/b&gt;: (array) Array containing test statistics.&#10;     &lt;b&gt;$onlytext&lt;/b&gt;: (boolean) If true print only text questions.;;d4,578;;b1,0;;m0;;e0;;i0;;o;;k;;l $data;;p $onlytext;;p;;x;;x;;n">
</treenode>
<treenode node="printUserTestDetails;PHP:Function Name;3817744236;f11;725;5;897;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    printUserTestDetails($data, $onlytext = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    print test details for the selected user&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$data&lt;/b&gt;: (array) Testuser data array.&#10;     &lt;b&gt;$onlytext&lt;/b&gt;: (boolean) If true print only text questions.;;d4,726;;b1,0;;m0;;e0;;i0;;o;;k;;l $data;;p $onlytext;;p;;x;;x;;n">
</treenode>
<treenode node="setTCExamBackLink;PHP:Function Name;3817744236;f11;133;5;136;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setTCExamBackLink($link)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set an URL link that points back to TCExam website (this will be printed as QR-Code on header).&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$link&lt;/b&gt;: URL link.;;d4,134;;b1,0;;m0;;e0;;i0;;o;;k;;l $link;;p;;x;;n">
</treenode>
<treenode node="$booklet;PHP:Var Name;3817744236;f11;73;19;73;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$cell_height_ratio;PHP:Var Name;3817744236;f11;63;29;63;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$header_xobjid;PHP:Var Name;3817744236;f11;55;25;55;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$imgscale;PHP:Var Name;3817744236;f11;77;20;77;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$k;PHP:Var Name;3817744236;f11;65;13;65;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$original_lMargin;PHP:Var Name;3817744236;f11;69;28;69;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$original_rMargin;PHP:Var Name;3817744236;f11;67;28;67;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$page;PHP:Var Name;3817744236;f11;75;16;75;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$rtl;PHP:Var Name;3817744236;f11;59;15;59;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$tce_cell_height_ratio;PHP:Var Name;3817744236;f14;88;36;88;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$tce_data_cell_height;PHP:Var Name;3817744236;f14;98;35;98;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$tce_main_cell_height;PHP:Var Name;3817744236;f14;103;35;103;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$tce_page_width;PHP:Var Name;3817744236;f14;93;29;93;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$tcexam_backlink;PHP:Var Name;3817744236;f14;83;30;83;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    URL link that points back to TCExam website.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$w;PHP:Var Name;3817744236;f11;71;13;71;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$x;PHP:Var Name;3817744236;f11;61;13;61;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$y;PHP:Var Name;3817744236;f11;57;13;57;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="TCPDF_COLORS;PHP:Class Name;1345181080;f0;47;1;457;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TCPDF_COLORS&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;class&lt;/b&gt;: TCPDF_COLORS&#10;PHP color class for TCPDF&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcpdf&#10;&lt;b&gt;version&lt;/b&gt;: 1.0.004&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni - info&#10;&lt;b&gt;tecnick&lt;/b&gt;: .com;;d19,47;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="_JScolor;PHP:Function Name;1345181080;f15;445;2;454;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _JScolor($color)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert color to javascript color.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.002 (2008-02-12)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$color&lt;/b&gt;: color name or &quot;#RRGGBB&quot;;;d41,445;;b1,5;;m0;;e0;;i0;;o;;k;;l $color;;p;;x;;n">
</treenode>
<treenode node="convertHTMLColorToDec;PHP:Function Name;1345181080;f15;272;2;405;;;;vpos;;v;;aarray|false;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    convertHTMLColorToDec($hcolor, &amp;$spotc, $defcol=array(&apos;R&apos;=&gt;128,&apos;G&apos;=&gt;128,&apos;B&apos;=&gt;128))&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an array (RGB or CMYK) from an html color name, or a six-digit (i.e. #3FE5AA), or three-digit (i.e. #7FF) hexadecimal color, or a javascript color array, or javascript color name.&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$hcolor&lt;/b&gt;: HTML color.&#10;    array &lt;b&gt;$spotc&lt;/b&gt;: Reference to an array of spot colors.&#10;    array &lt;b&gt;$defcol&lt;/b&gt;: Color to return in case of error.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   RGB or CMYK color, or false in case of error.;;d107,272;;b1,5;;m0;;e0;;i0;;o;;k;;l $hcolor;;p $spotc;;p $defcol;;p;;x;;x;;x;;n">
</treenode>
<treenode node="getColorStringFromArray;PHP:Function Name;1345181080;f15;414;2;436;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getColorStringFromArray($c)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert a color array into a string representation.&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.137 (2011-12-01)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$c&lt;/b&gt;: Array of colors.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The color array representation.;;d52,414;;b1,5;;m0;;e0;;i0;;o;;k;;l $c;;p;;x;;n">
</treenode>
<treenode node="getSpotColor;PHP:Function Name;1345181080;f15;248;2;262;;;;vpos;;v;;aarray|false;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSpotColor($name, &amp;$spotc)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the Spot color array.&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.125 (2011-10-03)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: Name of the spot color.&#10;    array &lt;b&gt;$spotc&lt;/b&gt;: Reference to an array of spot colors.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Spot color array or false if not defined.;;d53,248;;b1,5;;m0;;e0;;i0;;o;;k;;l $name;;p $spotc;;p;;x;;x;;n">
</treenode>
<treenode node="$jscolor;PHP:Var Name;1345181080;f15;209;23;209;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of valid JavaScript color names&#10;&lt;b&gt;public&lt;/b&gt;: static;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$spotcolor;PHP:Var Name;1345181080;f15;218;25;218;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of Spot colors (C,M,Y,K,name)&#10;Color keys must be in lowercase and without spaces.&#10;As long as no open standard for spot colours exists, you have to buy a colour book by one of the colour manufacturers and insert the values and names of spot colours directly.&#10;Common industry standard spot colors are: ANPA-COLOR, DIC, FOCOLTONE, GCMI, HKS, PANTONE, TOYO, TRUMATCH.&#10;&lt;b&gt;public&lt;/b&gt;: static;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$webcolor;PHP:Var Name;1345181080;f15;53;24;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of WEB safe colors&#10;&lt;b&gt;public&lt;/b&gt;: static;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="TCPDF_FILTERS;PHP:Class Name;1359579117;f0;50;1;476;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TCPDF_FILTERS&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;class&lt;/b&gt;: TCPDF_FILTERS&#10;This is a PHP class for decoding common PDF filters (PDF 32000-2008 - 7.4 Filters).&lt;br&gt;&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcpdf&#10;&lt;b&gt;brief&lt;/b&gt;: This is a PHP class for decoding common PDF filters.&#10;&lt;b&gt;version&lt;/b&gt;: 1.0.001&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni - info&#10;&lt;b&gt;tecnick&lt;/b&gt;: .com;;d20,50;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="Error;PHP:Function Name;1359579117;f15;472;2;474;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Error($msg)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Throw an exception.&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-05-23)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$msg&lt;/b&gt;: The error message;;d36,472;;b1,5;;m0;;e0;;i0;;o;;k;;l $msg;;p;;x;;n">
</treenode>
<treenode node="decodeFilter;PHP:Function Name;1359579117;f15;78;2;125;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    decodeFilter($filter, $data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Decode data using the specified filter type.&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-05-23)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$filter&lt;/b&gt;: Filter name.&#10;    string &lt;b&gt;$data&lt;/b&gt;: Data to decode.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Decoded data string.;;d53,78;;b1,5;;m0;;e0;;i0;;o;;k;;l $filter;;p $data;;p;;x;;x;;n">
</treenode>
<treenode node="decodeFilterASCII85Decode;PHP:Function Name;1359579117;f15;189;2;263;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    decodeFilterASCII85Decode($data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ASCII85Decode&#10;Decodes data encoded in an ASCII base-85 representation, reproducing the original binary data.&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-05-23)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$data&lt;/b&gt;: Data to decode.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Decoded data string.;;d57,189;;b1,5;;m0;;e0;;i0;;o;;k;;l $data;;p;;x;;n">
</treenode>
<treenode node="decodeFilterASCIIHexDecode;PHP:Function Name;1359579117;f15;149;2;179;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    decodeFilterASCIIHexDecode($data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ASCIIHexDecode&#10;Decodes data encoded in an ASCII hexadecimal representation, reproducing the original binary data.&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-05-23)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$data&lt;/b&gt;: Data to decode.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Decoded data string.;;d58,149;;b1,5;;m0;;e0;;i0;;o;;k;;l $data;;p;;x;;n">
</treenode>
<treenode node="decodeFilterCCITTFaxDecode;PHP:Function Name;1359579117;f15;407;2;410;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    decodeFilterCCITTFaxDecode($data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    CCITTFaxDecode (NOT IMPLEMETED - RETURN AN EXCEPTION)&#10;Decompresses data encoded using the CCITT facsimile standard, reproducing the original data (typically monochrome image data at 1 bit per pixel).&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-05-23)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$data&lt;/b&gt;: Data to decode.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Decoded data string.;;d58,407;;b1,5;;m0;;e0;;i0;;o;;k;;l $data;;p;;x;;n">
</treenode>
<treenode node="decodeFilterCrypt;PHP:Function Name;1359579117;f15;459;2;462;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    decodeFilterCrypt($data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Crypt (NOT IMPLEMETED - RETURN AN EXCEPTION)&#10;Decrypts data encrypted by a security handler, reproducing the data as it was before encryption.&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-05-23)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$data&lt;/b&gt;: Data to decode.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Decoded data string.;;d49,459;;b1,5;;m0;;e0;;i0;;o;;k;;l $data;;p;;x;;n">
</treenode>
<treenode node="decodeFilterDCTDecode;PHP:Function Name;1359579117;f15;433;2;436;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    decodeFilterDCTDecode($data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    DCTDecode (NOT IMPLEMETED - RETURN AN EXCEPTION)&#10;Decompresses data encoded using a DCT (discrete cosine transform) technique based on the JPEG standard, reproducing image sample data that approximates the original data.&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-05-23)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$data&lt;/b&gt;: Data to decode.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Decoded data string.;;d53,433;;b1,5;;m0;;e0;;i0;;o;;k;;l $data;;p;;x;;n">
</treenode>
<treenode node="decodeFilterFlateDecode;PHP:Function Name;1359579117;f15;354;2;361;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    decodeFilterFlateDecode($data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    FlateDecode&#10;Decompresses data encoded using the zlib/deflate compression method, reproducing the original text or binary data.&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-05-23)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$data&lt;/b&gt;: Data to decode.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Decoded data string.;;d55,354;;b1,5;;m0;;e0;;i0;;o;;k;;l $data;;p;;x;;n">
</treenode>
<treenode node="decodeFilterJBIG2Decode;PHP:Function Name;1359579117;f15;420;2;423;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    decodeFilterJBIG2Decode($data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    JBIG2Decode (NOT IMPLEMETED - RETURN AN EXCEPTION)&#10;Decompresses data encoded using the JBIG2 standard, reproducing the original monochrome (1 bit per pixel) image data (or an approximation of that data).&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-05-23)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$data&lt;/b&gt;: Data to decode.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Decoded data string.;;d55,420;;b1,5;;m0;;e0;;i0;;o;;k;;l $data;;p;;x;;n">
</treenode>
<treenode node="decodeFilterJPXDecode;PHP:Function Name;1359579117;f15;446;2;449;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    decodeFilterJPXDecode($data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    JPXDecode (NOT IMPLEMETED - RETURN AN EXCEPTION)&#10;Decompresses data encoded using the wavelet-based JPEG2000 standard, reproducing the original image data.&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-05-23)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$data&lt;/b&gt;: Data to decode.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Decoded data string.;;d53,446;;b1,5;;m0;;e0;;i0;;o;;k;;l $data;;p;;x;;n">
</treenode>
<treenode node="decodeFilterLZWDecode;PHP:Function Name;1359579117;f15;273;2;344;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    decodeFilterLZWDecode($data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    LZWDecode&#10;Decompresses data encoded using the LZW (Lempel-Ziv-Welch) adaptive compression method, reproducing the original text or binary data.&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-05-23)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$data&lt;/b&gt;: Data to decode.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Decoded data string.;;d53,273;;b1,5;;m0;;e0;;i0;;o;;k;;l $data;;p;;x;;n">
</treenode>
<treenode node="decodeFilterRunLengthDecode;PHP:Function Name;1359579117;f15;370;2;397;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    decodeFilterRunLengthDecode($data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    RunLengthDecode&#10;Decompresses data encoded using a byte-oriented run-length encoding algorithm.&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-05-23)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$data&lt;/b&gt;: Data to decode.;;d59,370;;b1,5;;m0;;e0;;i0;;o;;k;;l $data;;p;;x;;n">
</treenode>
<treenode node="decodeFilterStandard;PHP:Function Name;1359579117;f15;137;2;139;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    decodeFilterStandard($data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Standard&#10;Default decoding filter (leaves data unchanged).&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-05-23)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$data&lt;/b&gt;: Data to decode.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Decoded data string.;;d52,137;;b1,5;;m0;;e0;;i0;;o;;k;;l $data;;p;;x;;n">
</treenode>
<treenode node="getAvailableFilters;PHP:Function Name;1359579117;f15;66;2;68;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAvailableFilters()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get a list of available decoding filters.&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-05-23)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Array of available filter decoders.;;d46,66;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$available_filters;PHP:Var Name;1359579117;f16;56;34;56;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Define a list of available filter decoders.&#10;&lt;b&gt;private&lt;/b&gt;: static;;d-1,-1;;b3,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="TCPDF_FONTS;PHP:Class Name;2431045158;f0;47;1;2653;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TCPDF_FONTS&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;class&lt;/b&gt;: TCPDF_FONTS&#10;Font methods for TCPDF library.&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcpdf&#10;&lt;b&gt;version&lt;/b&gt;: 1.1.1&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni - info&#10;&lt;b&gt;tecnick&lt;/b&gt;: .com;;d18,47;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="UTF8ArrSubString;PHP:Function Name;2431045158;f15;1797;2;1809;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    UTF8ArrSubString($strarr, $start=&apos;&apos;, $end=&apos;&apos;, $unicode=true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Extract a slice of the $strarr array and return it as string.&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string[] &lt;b&gt;$strarr&lt;/b&gt;: The input array of characters.&#10;    int &lt;b&gt;$start&lt;/b&gt;: the starting element of $strarr.&#10;    int &lt;b&gt;$end&lt;/b&gt;: first element that will not be returned.&#10;    boolean &lt;b&gt;$unicode&lt;/b&gt;: True if we are in unicode mode, false otherwise.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Return part of a string;;d85,1797;;b1,5;;m0;;e0;;i0;;o;;k;;l $strarr;;p $start;;p $end;;p $unicode;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="UTF8ArrToLatin1;PHP:Function Name;2431045158;f15;1867;2;1882;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    UTF8ArrToLatin1($unicode)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Converts UTF-8 characters array to Latin1 string&lt;br&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.023 (2010-01-15)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$unicode&lt;/b&gt;: array containing UTF-8 unicode values;;d50,1867;;b1,5;;m0;;e0;;i0;;o;;k;;l $unicode;;p;;x;;n">
</treenode>
<treenode node="UTF8ArrToLatin1Arr;PHP:Function Name;2431045158;f15;1842;2;1857;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    UTF8ArrToLatin1Arr($unicode)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Converts UTF-8 characters array to array of Latin1 characters array&lt;br&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.023 (2010-01-15)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$unicode&lt;/b&gt;: array containing UTF-8 unicode values;;d53,1842;;b1,5;;m0;;e0;;i0;;o;;k;;l $unicode;;p;;x;;n">
</treenode>
<treenode node="UTF8ArrayToUniArray;PHP:Function Name;2431045158;f15;1781;2;1786;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    UTF8ArrayToUniArray($ta, $isunicode=true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert an array of UTF8 values to array of unicode characters&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.037 (2009-04-07)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$ta&lt;/b&gt;: The input array of UTF8 values.&#10;    boolean &lt;b&gt;$isunicode&lt;/b&gt;: True for Unicode mode, false otherwise.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Return array of unicode characters;;d66,1781;;b1,5;;m0;;e0;;i0;;o;;k;;l $ta;;p $isunicode;;p;;x;;x;;n">
</treenode>
<treenode node="UTF8StringToArray;PHP:Function Name;2431045158;f15;2000;2;2016;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    UTF8StringToArray($str, $isunicode, &amp;$currentfont)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Converts UTF-8 strings to codepoints array.&lt;br&gt;&#10;Invalid byte sequences will be replaced with 0xFFFD (replacement character)&lt;br&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: string to process.&#10;    boolean &lt;b&gt;$isunicode&lt;/b&gt;: True when the documetn is in Unicode mode, false otherwise.&#10;    array &lt;b&gt;$currentfont&lt;/b&gt;: Reference to current font array.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing codepoints (UTF-8 characters values);;d75,2000;;b1,5;;m0;;e0;;i0;;o;;k;;l $str;;p $isunicode;;p $currentfont;;p;;x;;x;;x;;n">
</treenode>
<treenode node="UTF8ToLatin1;PHP:Function Name;2431045158;f15;2027;2;2030;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    UTF8ToLatin1($str, $isunicode, &amp;$currentfont)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Converts UTF-8 strings to Latin1 when using the standard 14 core fonts.&lt;br&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 3.2.000 (2008-06-23)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: string to process.&#10;    boolean &lt;b&gt;$isunicode&lt;/b&gt;: True when the documetn is in Unicode mode, false otherwise.&#10;    array &lt;b&gt;$currentfont&lt;/b&gt;: Reference to current font array.;;d70,2027;;b1,5;;m0;;e0;;i0;;o;;k;;l $str;;p $isunicode;;p $currentfont;;p;;x;;x;;x;;n">
</treenode>
<treenode node="UTF8ToUTF16BE;PHP:Function Name;2431045158;f15;2043;2;2049;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    UTF8ToUTF16BE($str, $setbom, $isunicode, &amp;$currentfont)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Converts UTF-8 strings to UTF16-BE.&lt;br&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 1.53.0.TC005 (2005-01-05)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: string to process.&#10;    boolean &lt;b&gt;$setbom&lt;/b&gt;: if true set the Byte Order Mark (BOM = 0xFEFF)&#10;    boolean &lt;b&gt;$isunicode&lt;/b&gt;: True when the documetn is in Unicode mode, false otherwise.&#10;    array &lt;b&gt;$currentfont&lt;/b&gt;: Reference to current font array.;;d80,2043;;b1,5;;m0;;e0;;i0;;o;;k;;l $str;;p $setbom;;p $isunicode;;p $currentfont;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="UniArrSubString;PHP:Function Name;2431045158;f15;1820;2;1832;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    UniArrSubString($uniarr, $start=&apos;&apos;, $end=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Extract a slice of the $uniarr array and return it as string.&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.037 (2009-04-07)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string[] &lt;b&gt;$uniarr&lt;/b&gt;: The input array of characters.&#10;    int &lt;b&gt;$start&lt;/b&gt;: the starting element of $strarr.&#10;    int &lt;b&gt;$end&lt;/b&gt;: first element that will not be returned.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Return part of a string;;d69,1820;;b1,5;;m0;;e0;;i0;;o;;k;;l $uniarr;;p $start;;p $end;;p;;x;;x;;x;;n">
</treenode>
<treenode node="_getTTFtableChecksum;PHP:Function Name;2431045158;f15;931;2;942;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getTTFtableChecksum($table, $length)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returs the checksum of a TTF table.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.2.000 (2010-06-02)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$table&lt;/b&gt;: table to check&#10;    int &lt;b&gt;$length&lt;/b&gt;: length of table in bytes&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   checksum;;d62,931;;b1,5;;m0;;e0;;i0;;o;;k;;l $table;;p $length;;p;;x;;x;;n">
</treenode>
<treenode node="_getTrueTypeFontSubset;PHP:Function Name;2431045158;f15;953;2;1388;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getTrueTypeFontSubset($font, $subsetchars)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a subset of the TrueType font data without the unused glyphs.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.2.000 (2010-06-02)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$font&lt;/b&gt;: TrueType font data.&#10;    array &lt;b&gt;$subsetchars&lt;/b&gt;: Array of used characters (the glyphs to keep).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   A subset of TrueType font data without the unused glyphs.;;d68,953;;b1,5;;m0;;e0;;i0;;o;;k;;l $font;;p $subsetchars;;p;;x;;x;;n">
</treenode>
<treenode node="_getfontpath;PHP:Function Name;2431045158;f15;1524;2;1532;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getfontpath()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return fonts path&#10;&lt;b&gt;public&lt;/b&gt;: static;;d39,1524;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_putfontwidths;PHP:Function Name;2431045158;f15;1399;2;1493;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _putfontwidths($font, $cidoffset=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Outputs font widths&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.4.000 (2008-12-07)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$font&lt;/b&gt;: font data&#10;    int &lt;b&gt;$cidoffset&lt;/b&gt;: offset for CID values&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   PDF command string for font widths;;d60,1399;;b1,5;;m0;;e0;;i0;;o;;k;;l $font;;p $cidoffset;;p;;x;;x;;n">
</treenode>
<treenode node="addTTFfont;PHP:Function Name;2431045158;f15;71;2;920;;;;vpos;;v;;astring|false;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addTTFfont($fontfile, $fonttype=&apos;&apos;, $enc=&apos;&apos;, $flags=32, $outpath=&apos;&apos;, $platid=3, $encid=1, $addcbbox=false, $link=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert and add the selected TrueType or Type1 font to the fonts folder (that must be writeable).&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.123 (2010-09-30)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$fontfile&lt;/b&gt;: Font file (full path).&#10;    string &lt;b&gt;$fonttype&lt;/b&gt;: Font type. Leave empty for autodetect mode. Valid values are: TrueTypeUnicode, TrueType, Type1, CID0JP = CID-0 Japanese, CID0KR = CID-0 Korean, CID0CS = CID-0 Chinese Simplified, CID0CT = CID-0 Chinese Traditional.&#10;    string &lt;b&gt;$enc&lt;/b&gt;: Name of the encoding table to use. Leave empty for default mode. Omit this parameter for TrueType Unicode and symbolic fonts like Symbol or ZapfDingBats.&#10;    int &lt;b&gt;$flags&lt;/b&gt;: Unsigned 32-bit integer containing flags specifying various characteristics of the font (PDF32000:2008 - 9.8.2 Font Descriptor Flags): +1 for fixed font;s +4 for symbol or +32 for non-symbol;s +64 for italic. Fixed and Italic mode are generally autodetected so you have to set it to 32 = non-symbolic font (default) or 4 = symbolic font.&#10;    string &lt;b&gt;$outpath&lt;/b&gt;: Output path for generated font files (must be writeable by the web server). Leave empty for default font folder.&#10;    int &lt;b&gt;$platid&lt;/b&gt;: Platform ID for CMAP table to extract (when building a Unicode font for Windows this value should be 3, for Macintosh should be 1).&#10;    int &lt;b&gt;$encid&lt;/b&gt;: Encoding ID for CMAP table to extract (when building a Unicode font for Windows this value should be 1, for Macintosh should be 0). When Platform ID is 3, legal values for Encoding ID are: 0=Symbol, 1=Unicode, 2=ShiftJIS, 3=PRC, 4=Big5, 5=Wansung, 6=Johab, 7=Reserved, 8=Reserved, 9=Reserved, 10=UCS-4.&#10;    boolean &lt;b&gt;$addcbbox&lt;/b&gt;: If true includes the character bounding box information on the php font file.&#10;    boolean &lt;b&gt;$link&lt;/b&gt;: If true link to system font instead of copying the font data (not transportable) - Note: do not work with Type1 fonts.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   TCPDF font name or boolean false in case of error.;;d144,71;;b1,5;;m0;;e0;;i0;;o;;k;;l $fontfile;;p $fonttype;;p $enc;;p $flags;;p $outpath;;p $platid;;p $encid;;p $addcbbox;;p $link;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="arrUTF8ToUTF16BE;PHP:Function Name;2431045158;f15;1747;2;1771;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    arrUTF8ToUTF16BE($unicode, $setbom=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Converts array of UTF-8 characters to UTF16-BE string.&lt;br&gt;&#10;Based on: http://www.faqs.org/rfcs/rfc2781.html&#10;&lt;pre&gt;&#10;Encoding UTF-16:&#10;Encoding of a single character from an ISO 10646 character value to&#10;UTF-16 proceeds as follows. Let U be the character number, no greater&#10;than 0x10FFFF.&#10;1) If U &lt; 0x10000, encode U as a 16-bit unsigned integer and&#10;terminate.&#10;2) Let U&apos; = U - 0x10000. Because U is less than or equal to 0x10FFFF,&#10;U&apos; must be less than or equal to 0xFFFFF. That is, U&apos; can be&#10;represented in 20 bits.&#10;3) Initialize two 16-bit unsigned integers, W1 and W2, to 0xD800 and&#10;0xDC00, respectively. These integers each have 10 bits free to&#10;encode the character value, for a total of 20 bits.&#10;4) Assign the 10 high-order bits of the 20-bit U&apos; to the 10 low-order&#10;bits of W1 and the 10 low-order bits of U&apos; to the 10 low-order&#10;bits of W2. Terminate.&#10;Graphically, steps 2 through 4 look like:&#10;U&apos; = yyyyyyyyyyxxxxxxxxxx&#10;W1 = 110110yyyyyyyyyy&#10;W2 = 110111xxxxxxxxxx&#10;&lt;/pre&gt;&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-08)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$unicode&lt;/b&gt;: array containing UTF-8 unicode values&#10;    boolean &lt;b&gt;$setbom&lt;/b&gt;: if true set the Byte Order Mark (BOM = 0xFEFF);;d66,1747;;b1,5;;m0;;e0;;i0;;o;;k;;l $unicode;;p $setbom;;p;;x;;x;;n">
</treenode>
<treenode node="getFontFullPath;PHP:Function Name;2431045158;f15;1545;2;1556;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFontFullPath($file, $fontdir=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return font full path&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 6.0.025&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$file&lt;/b&gt;: Font file name.&#10;    string &lt;b&gt;$fontdir&lt;/b&gt;: Font directory (set to false fto search on default directories)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Font full path or empty string;;d63,1545;;b1,5;;m0;;e0;;i0;;o;;k;;l $file;;p $fontdir;;p;;x;;x;;n">
</treenode>
<treenode node="getFontRefSize;PHP:Function Name;2431045158;f15;1568;2;1608;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFontRefSize($size, $refsize=12)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get a reference font size.&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$size&lt;/b&gt;: String containing font size value.&#10;    float &lt;b&gt;$refsize&lt;/b&gt;: Reference font size in points.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   value in points;;d59,1568;;b1,5;;m0;;e0;;i0;;o;;k;;l $size;;p $refsize;;p;;x;;x;;n">
</treenode>
<treenode node="getUniord;PHP:Function Name;2431045158;f15;1931;2;1988;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getUniord($uch)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Converts UTF-8 character to integer value.&lt;br&gt;&#10;Invalid byte sequences will be replaced with 0xFFFD (replacement character)&lt;br&gt;&#10;Based on: http://www.faqs.org/rfcs/rfc3629.html&#10;&lt;pre&gt;&#10;Char. number range  |        UTF-8 octet sequence&#10;(hexadecimal)    |              (binary)&#10;--------------------+-----------------------------------------------&#10;0000 0000-0000 007F | 0xxxxxxx&#10;0000 0080-0000 07FF | 110xxxxx 10xxxxxx&#10;0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx&#10;0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx&#10;---------------------------------------------------------------------&#10;ABFN notation:&#10;---------------------------------------------------------------------&#10;UTF8-octets = *( UTF8-char )&#10;UTF8-char   = UTF8-1 / UTF8-2 / UTF8-3 / UTF8-4&#10;UTF8-1      = %x00-7F&#10;UTF8-2      = %xC2-DF UTF8-tail&#10;UTF8-3      = %xE0 %xA0-BF UTF8-tail / %xE1-EC 2( UTF8-tail ) /&#10;%xED %x80-9F UTF8-tail / %xEE-EF 2( UTF8-tail )&#10;UTF8-4      = %xF0 %x90-BF 2( UTF8-tail ) / %xF1-F3 3( UTF8-tail ) /&#10;%xF4 %x80-8F 2( UTF8-tail )&#10;UTF8-tail   = %x80-BF&#10;---------------------------------------------------------------------&#10;&lt;/pre&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$uch&lt;/b&gt;: character string to process.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Unicode value;;d40,1931;;b1,5;;m0;;e0;;i0;;o;;k;;l $uch;;p;;x;;n">
</treenode>
<treenode node="unichr;PHP:Function Name;2431045158;f15;1668;2;1687;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    unichr($c, $unicode=true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the unicode caracter specified by the value&#10;&lt;b&gt;since&lt;/b&gt;: 2.3.000 (2008-03-05)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$c&lt;/b&gt;: UTF-8 value&#10;    boolean &lt;b&gt;$unicode&lt;/b&gt;: True if we are in unicode mode, false otherwise.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Returns the specified character.;;d50,1668;;b1,5;;m0;;e0;;i0;;o;;k;;l $c;;p $unicode;;p;;x;;x;;n">
</treenode>
<treenode node="unichrASCII;PHP:Function Name;2431045158;f15;1705;2;1707;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    unichrASCII($c)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the unicode caracter specified by ASCII value&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$c&lt;/b&gt;: UTF-8 value&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Returns the specified character.;;d40,1705;;b1,5;;m0;;e0;;i0;;o;;k;;l $c;;p;;x;;n">
</treenode>
<treenode node="unichrUnicode;PHP:Function Name;2431045158;f15;1695;2;1697;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    unichrUnicode($c)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the unicode caracter specified by UTF-8 value&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$c&lt;/b&gt;: UTF-8 value&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Returns the specified character.;;d42,1695;;b1,5;;m0;;e0;;i0;;o;;k;;l $c;;p;;x;;n">
</treenode>
<treenode node="uniord;PHP:Function Name;2431045158;f15;1891;2;1896;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    uniord($uch)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Converts UTF-8 character to integer value.&lt;br&gt;&#10;Uses the getUniord() method if the value is not cached.&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$uch&lt;/b&gt;: character string to process.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Unicode value;;d37,1891;;b1,5;;m0;;e0;;i0;;o;;k;;l $uch;;p;;x;;n">
</treenode>
<treenode node="updateCIDtoGIDmap;PHP:Function Name;2431045158;f15;1508;2;1517;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    updateCIDtoGIDmap($map, $cid, $gid)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Update the CIDToGIDMap string with a new value.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.123 (2011-09-29)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$map&lt;/b&gt;: CIDToGIDMap.&#10;    int &lt;b&gt;$cid&lt;/b&gt;: CID value.&#10;    int &lt;b&gt;$gid&lt;/b&gt;: GID value.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   CIDToGIDMap.;;d60,1508;;b1,5;;m0;;e0;;i0;;o;;k;;l $map;;p $cid;;p $gid;;p;;x;;x;;x;;n">
</treenode>
<treenode node="utf8Bidi;PHP:Function Name;2431045158;f15;2096;2;2651;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    utf8Bidi($ta, $str, $forcertl, $isunicode, &amp;$currentfont)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Reverse the RLT substrings using the Bidirectional Algorithm (http://unicode.org/reports/tr9/).&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2.4.000 (2008-03-06)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$ta&lt;/b&gt;: array of characters composing the string.&#10;    string &lt;b&gt;$str&lt;/b&gt;: string to process&#10;    bool &lt;b&gt;$forcertl&lt;/b&gt;: if &apos;R&apos; forces RTL, if &apos;L&apos; forces LTR&#10;    boolean &lt;b&gt;$isunicode&lt;/b&gt;: True if the document is in Unicode mode, false otherwise.&#10;    array &lt;b&gt;$currentfont&lt;/b&gt;: Reference to current font array.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of unicode chars;;d82,2096;;b1,5;;m0;;e0;;i0;;o;;k;;l $ta;;p $str;;p $forcertl;;p $isunicode;;p $currentfont;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="utf8StrArrRev;PHP:Function Name;2431045158;f15;2080;2;2082;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    utf8StrArrRev($arr, $str, $setbom, $forcertl, $isunicode, &amp;$currentfont)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Reverse the RLT substrings array using the Bidirectional Algorithm (http://unicode.org/reports/tr9/).&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.000 (2010-03-27)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$arr&lt;/b&gt;: array of unicode values.&#10;    string &lt;b&gt;$str&lt;/b&gt;: string to manipulate (or empty value).&#10;    bool &lt;b&gt;$setbom&lt;/b&gt;: if true set the Byte Order Mark (BOM = 0xFEFF)&#10;    bool &lt;b&gt;$forcertl&lt;/b&gt;: if true forces RTL text direction&#10;    boolean &lt;b&gt;$isunicode&lt;/b&gt;: True if the document is in Unicode mode, false otherwise.&#10;    array &lt;b&gt;$currentfont&lt;/b&gt;: Reference to current font array.;;d97,2080;;b1,5;;m0;;e0;;i0;;o;;k;;l $arr;;p $str;;p $setbom;;p $forcertl;;p $isunicode;;p $currentfont;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="utf8StrRev;PHP:Function Name;2431045158;f15;2063;2;2065;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    utf8StrRev($str, $setbom, $forcertl, $isunicode, &amp;$currentfont)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Reverse the RLT substrings using the Bidirectional Algorithm (http://unicode.org/reports/tr9/).&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2.1.000 (2008-01-08)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: string to manipulate.&#10;    bool &lt;b&gt;$setbom&lt;/b&gt;: if true set the Byte Order Mark (BOM = 0xFEFF)&#10;    bool &lt;b&gt;$forcertl&lt;/b&gt;: if true forces RTL text direction&#10;    boolean &lt;b&gt;$isunicode&lt;/b&gt;: True if the document is in Unicode mode, false otherwise.&#10;    array &lt;b&gt;$currentfont&lt;/b&gt;: Reference to current font array.;;d88,2063;;b1,5;;m0;;e0;;i0;;o;;k;;l $str;;p $setbom;;p $forcertl;;p $isunicode;;p $currentfont;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="$cache_uniord;PHP:Var Name;2431045158;f18;53;31;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Static cache used for speed up uniord performances&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="TCPDF_FONT_DATA;PHP:Class Name;469393450;f0;47;1;18442;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TCPDF_FONT_DATA&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;class&lt;/b&gt;: TCPDF_FONT_DATA&#10;Unicode data and encoding maps for TCPDF.&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcpdf&#10;&lt;b&gt;version&lt;/b&gt;: 1.0.001&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni - info&#10;&lt;b&gt;tecnick&lt;/b&gt;: .com;;d22,47;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="$encmap;PHP:Var Name;469393450;f14;18366;21;18366;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of Encoding Maps.&#10;&lt;b&gt;public&lt;/b&gt;: static;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$uni_LRE;PHP:Var Name;469393450;f14;65;22;65;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Unicode code for Left-to-Right Embedding.&#10;&lt;b&gt;public&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$uni_LRM;PHP:Var Name;469393450;f14;53;22;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Unicode code for Left-to-Right Mark.&#10;&lt;b&gt;public&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$uni_LRO;PHP:Var Name;469393450;f14;83;22;83;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Unicode code for Left-to-Right Override.&#10;&lt;b&gt;public&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$uni_PDF;PHP:Var Name;469393450;f14;77;22;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Unicode code for Pop Directional Format.&#10;&lt;b&gt;public&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$uni_RE_PATTERN_ARABIC;PHP:Var Name;469393450;f14;113;36;113;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Pattern to test Arabic strings using regular expressions. Source: http://www.w3.org/International/questions/qa-forms-utf-8&#10;&lt;b&gt;public&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$uni_RE_PATTERN_RTL;PHP:Var Name;469393450;f14;95;33;95;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Pattern to test RTL (Righ-To-Left) strings using regular expressions.&#10;&lt;b&gt;public&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$uni_RLE;PHP:Var Name;469393450;f14;71;22;71;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Unicode code for Right-to-Left Embedding.&#10;&lt;b&gt;public&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$uni_RLM;PHP:Var Name;469393450;f14;59;22;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Unicode code for Right-to-Left Mark.&#10;&lt;b&gt;public&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$uni_RLO;PHP:Var Name;469393450;f14;89;22;89;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Unicode code for Right-to-Left Override.&#10;&lt;b&gt;public&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$uni_arabicsubst;PHP:Var Name;469393450;f14;18224;30;18224;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Arabic shape substitutions: char code =&gt; (isolated, final, initial, medial).&#10;&lt;b&gt;public&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$uni_diacritics;PHP:Var Name;469393450;f14;18320;29;18320;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of character substitutions for sequences of two diacritics symbols.&#10;Putting the combining mark and character in the same glyph allows us to avoid the two marks overlapping each other in an illegible manner.&#10;second NSM char code =&gt; substitution char&#10;&lt;b&gt;public&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$uni_identity_h;PHP:Var Name;469393450;f14;18440;29;18440;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ToUnicode map for Identity-H stream&#10;&lt;b&gt;public&lt;/b&gt;: static;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$uni_laa_array;PHP:Var Name;469393450;f14;18307;28;18307;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Arabic laa letter: (char code =&gt; isolated, final, initial, medial).&#10;&lt;b&gt;public&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$uni_mirror;PHP:Var Name;469393450;f14;17866;25;17866;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Mirror unicode characters. For information on bidi mirroring, see UAX #9: Bidirectional Algorithm, at http://www.unicode.org/unicode/reports/tr9/&#10;&lt;b&gt;public&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$uni_type;PHP:Var Name;469393450;f14;139;23;139;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of Unicode types.&#10;&lt;b&gt;public&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$uni_utf8tolatin;PHP:Var Name;469393450;f14;18332;30;18332;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of character substitutions from UTF-8 Unicode to Latin1.&#10;&lt;b&gt;public&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="TCPDF_IMAGES;PHP:Class Name;3857177634;f0;51;1;354;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TCPDF_IMAGES&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;class&lt;/b&gt;: TCPDF_IMAGES&#10;Static image methods used by the TCPDF class.&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcpdf&#10;&lt;b&gt;brief&lt;/b&gt;: PHP class for generating PDF documents without requiring external extensions.&#10;&lt;b&gt;version&lt;/b&gt;: 1.0.005&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni - info&#10;&lt;b&gt;tecnick&lt;/b&gt;: .com;;d19,51;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="_parsejpeg;PHP:Function Name;3857177634;f15;160;2;231;;;;vpos;;v;;aarray|false;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _parsejpeg($file)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Extract info from a JPEG file without using the GD library.&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$file&lt;/b&gt;: image file to parse&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   structure containing the image data;;d42,160;;b1,5;;m0;;e0;;i0;;o;;k;;l $file;;p;;x;;n">
</treenode>
<treenode node="_parsepng;PHP:Function Name;3857177634;f15;239;2;352;;;;vpos;;v;;aarray|false;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _parsepng($file)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Extract info from a PNG file without using the GD library.&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$file&lt;/b&gt;: image file to parse&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   structure containing the image data;;d41,239;;b1,5;;m0;;e0;;i0;;o;;k;;l $file;;p;;x;;n">
</treenode>
<treenode node="_toJPEG;PHP:Function Name;3857177634;f15;145;2;152;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _toJPEG($image, $quality, $tempfile)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert the loaded image to a JPEG and then return a structure for the PDF creator.&#10;This function requires GD library and write access to the directory defined on K_PATH_CACHE constant.&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    resource &lt;b&gt;$image&lt;/b&gt;: Image object.&#10;    int &lt;b&gt;$quality&lt;/b&gt;: JPEG quality.&#10;    string &lt;b&gt;$tempfile&lt;/b&gt;: Temporary file name. return array|false image JPEG image object.;;d61,145;;b1,5;;m0;;e0;;i0;;o;;k;;l $image;;p $quality;;p $tempfile;;p;;x;;x;;x;;n">
</treenode>
<treenode node="_toPNG;PHP:Function Name;3857177634;f15;122;2;134;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _toPNG($image, $tempfile)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert the loaded image to a PNG and then return a structure for the PDF creator.&#10;This function requires GD library and write access to the directory defined on K_PATH_CACHE constant.&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.016 (2010-04-20)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    resource &lt;b&gt;$image&lt;/b&gt;: Image object.&#10;    string &lt;b&gt;$tempfile&lt;/b&gt;: Temporary file name. return image PNG image object.;;d50,122;;b1,5;;m0;;e0;;i0;;o;;k;;l $image;;p $tempfile;;p;;x;;x;;n">
</treenode>
<treenode node="getImageFileType;PHP:Function Name;3857177634;f15;72;2;87;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getImageFileType($imgfile, $iminfo=array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the image type given the file name or array returned by getimagesize() function.&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.017 (2009-11-27)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$imgfile&lt;/b&gt;: image file name&#10;    array &lt;b&gt;$iminfo&lt;/b&gt;: array of image information returned by getimagesize() function.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   image type;;d68,72;;b1,5;;m0;;e0;;i0;;o;;k;;l $imgfile;;p $iminfo;;p;;x;;x;;n">
</treenode>
<treenode node="setGDImageTransparency;PHP:Function Name;3857177634;f15;97;2;111;;;;vpos;;v;;aresource;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setGDImageTransparency($new_image, $image)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the transparency for the given GD image.&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.016 (2010-04-20)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    resource &lt;b&gt;$new_image&lt;/b&gt;: GD image object&#10;    resource &lt;b&gt;$image&lt;/b&gt;: GD image object.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   GD image object $new_image;;d67,97;;b1,5;;m0;;e0;;i0;;o;;k;;l $new_image;;p $image;;p;;x;;x;;n">
</treenode>
<treenode node="$svginheritprop;PHP:Var Name;3857177634;f15;60;30;60;;;;vposstring;;v;;a;;r;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="TCPDF_IMPORT;PHP:Class Name;1941563555;f0;58;1;99;;;;vpos;;v;;aTCPDF;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TCPDF_IMPORT extends TCPDF&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;class&lt;/b&gt;: TCPDF_IMPORT&#10;!!! THIS CLASS IS UNDER DEVELOPMENT !!!&#10;PHP class extension of the TCPDF (http://www.tcpdf.org) library to import existing PDF documents.&lt;br&gt;&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcpdf&#10;&lt;b&gt;brief&lt;/b&gt;: PHP class extension of the TCPDF library to import existing PDF documents.&#10;&lt;b&gt;version&lt;/b&gt;: 1.0.001&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni - info&#10;&lt;b&gt;tecnick&lt;/b&gt;: .com;;d33,58;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="importPDF;PHP:Function Name;1941563555;f8;67;2;97;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    importPDF($filename)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Import an existing PDF document&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-05-24)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$filename&lt;/b&gt;: Filename of the PDF document to import.;;d38,67;;b1,0;;m0;;e0;;i0;;o;;k;;l $filename;;p;;x;;n">
</treenode>
</treenode>
<treenode node="TCPDF_PARSER;PHP:Class Name;927821961;f0;53;1;810;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TCPDF_PARSER&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;class&lt;/b&gt;: TCPDF_PARSER&#10;This is a PHP class for parsing PDF documents.&lt;br&gt;&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcpdf&#10;&lt;b&gt;brief&lt;/b&gt;: This is a PHP class for parsing PDF documents..&#10;&lt;b&gt;version&lt;/b&gt;: 1.0.15&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni - info&#10;&lt;b&gt;tecnick&lt;/b&gt;: .com;;d19,53;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="Error;PHP:Function Name;927821961;f8;802;2;808;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Error($msg)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Throw an exception or print an error message and die if the K_TCPDF_PARSER_THROW_EXCEPTION_ERROR constant is set to true.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-05-23)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$msg&lt;/b&gt;: The error message;;d29,802;;b1,0;;m0;;e0;;i0;;o;;k;;l $msg;;p;;x;;n">
</treenode>
<treenode node="__construct;PHP:Function Name;927821961;f8;101;2;128;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($data, $cfg=array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Parse a PDF document an return an array of objects.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-05-24)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$data&lt;/b&gt;: PDF data to parse.&#10;    array &lt;b&gt;$cfg&lt;/b&gt;: Array of configuration parameters: &apos;die_for_errors&apos; : if true termitate the program execution in case of error, otherwise thows an exception;s &apos;ignore_filter_decoding_errors&apos; : if true ignore filter decoding errors;s &apos;ignore_missing_filter_decoders&apos; : if true ignore missing filter decoding errors.;;d50,101;;b1,0;;m0;;e0;;i0;;o;;k;;l $data;;p $cfg;;p;;x;;x;;n">
</treenode>
<treenode node="decodeStream;PHP:Function Name;927821961;f11;742;2;794;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    decodeStream($sdic, $stream)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Decode the specified stream.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-06-22)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$sdic&lt;/b&gt;: Stream&apos;s dictionary array.&#10;    string &lt;b&gt;$stream&lt;/b&gt;: Stream to decode.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing decoded stream data and remaining filters.;;d49,742;;b2,0;;m0;;e0;;i0;;o;;k;;l $sdic;;p $stream;;p;;x;;x;;n">
</treenode>
<treenode node="decodeXref;PHP:Function Name;927821961;f11;210;2;272;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    decodeXref($startxref, $xref=array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Decode the Cross-Reference section&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-06-20)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$startxref&lt;/b&gt;: Offset at which the xref section starts (position of the &apos;xref&apos; keyword).&#10;    array &lt;b&gt;$xref&lt;/b&gt;: Previous xref array (if any).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing xref and trailer data.;;d58,210;;b2,0;;m0;;e0;;i0;;o;;k;;l $startxref;;p $xref;;p;;x;;x;;n">
</treenode>
<treenode node="decodeXrefStream;PHP:Function Name;927821961;f11;282;2;487;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    decodeXrefStream($startxref, $xref=array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Decode the Cross-Reference Stream section&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.003 (2013-03-16)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$startxref&lt;/b&gt;: Offset at which the xref section starts.&#10;    array &lt;b&gt;$xref&lt;/b&gt;: Previous xref array (if any).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing xref and trailer data.;;d64,282;;b2,0;;m0;;e0;;i0;;o;;k;;l $startxref;;p $xref;;p;;x;;x;;n">
</treenode>
<treenode node="getIndirectObject;PHP:Function Name;927821961;f11;676;2;710;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getIndirectObject($obj_ref, $offset=0, $decoding=true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get content of indirect object.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-05-24)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$obj_ref&lt;/b&gt;: Object number and generation number separated by underscore character.&#10;    int &lt;b&gt;$offset&lt;/b&gt;: Object offset.&#10;    boolean &lt;b&gt;$decoding&lt;/b&gt;: If true decode streams.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing object data.;;d75,676;;b2,0;;m0;;e0;;i0;;o;;k;;l $obj_ref;;p $offset;;p $decoding;;p;;x;;x;;x;;n">
</treenode>
<treenode node="getObjectVal;PHP:Function Name;927821961;f11;719;2;732;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getObjectVal($obj)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the content of object, resolving indect object reference if necessary.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-06-26)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$obj&lt;/b&gt;: Object value.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing object data.;;d39,719;;b2,0;;m0;;e0;;i0;;o;;k;;l $obj;;p;;x;;n">
</treenode>
<treenode node="getParsedData;PHP:Function Name;927821961;f8;156;2;158;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getParsedData()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return an array of parsed PDF document objects.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-06-26)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Array of parsed PDF document objects.;;d33,156;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getRawObject;PHP:Function Name;927821961;f11;496;2;665;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRawObject($offset=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get object type, raw value and offset to next object&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-06-20)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$offset&lt;/b&gt;: Object offset.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing object type, raw value and offset to next object;;d44,496;;b2,0;;m0;;e0;;i0;;o;;k;;l $offset;;p;;x;;n">
</treenode>
<treenode node="getXrefData;PHP:Function Name;927821961;f11;168;2;200;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getXrefData($offset=0, $xref=array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get Cross-Reference (xref) table and trailer data from PDF document data.&#10;&lt;b&gt;protected&lt;/b&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 1.0.000 (2011-05-24)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$offset&lt;/b&gt;: xref offset (if know).&#10;    array &lt;b&gt;$xref&lt;/b&gt;: previous xref array (if any).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing xref and trailer data.;;d58,168;;b2,0;;m0;;e0;;i0;;o;;k;;l $offset;;p $xref;;p;;x;;x;;n">
</treenode>
<treenode node="setConfig;PHP:Function Name;927821961;f11;138;2;148;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setConfig($cfg)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the configuration parameters.&#10;&lt;b&gt;public&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$cfg&lt;/b&gt;: Array of configuration parameters: &apos;die_for_errors&apos; : if true termitate the program execution in case of error, otherwise thows an exception;s &apos;ignore_filter_decoding_errors&apos; : if true ignore filter decoding errors;s &apos;ignore_missing_filter_decoders&apos; : if true ignore missing filter decoding errors.;;d36,138;;b2,0;;m0;;e0;;i0;;o;;k;;l $cfg;;p;;x;;n">
</treenode>
<treenode node="$FilterDecoders;PHP:Var Name;927821961;f9;77;24;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Class object for decoding filters.&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$cfg;PHP:Var Name;927821961;f9;83;13;83;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of configuration parameters.&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$objects;PHP:Var Name;927821961;f11;71;19;71;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of PDF objects.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$pdfdata;PHP:Var Name;927821961;f9;59;17;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Raw content of the PDF document.&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$xref;PHP:Var Name;927821961;f11;65;16;65;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    XREF data.&#10;&lt;b&gt;protected&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="TCPDF_STATIC;PHP:Class Name;100541886;f0;51;1;2655;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TCPDF_STATIC&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;class&lt;/b&gt;: TCPDF_STATIC&#10;Static methods used by the TCPDF class.&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcpdf&#10;&lt;b&gt;brief&lt;/b&gt;: PHP class for generating PDF documents without requiring external extensions.&#10;&lt;b&gt;version&lt;/b&gt;: 1.1.5&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni - info&#10;&lt;b&gt;tecnick&lt;/b&gt;: .com;;d19,51;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="CURLOPT_DEFAULT;PHP:PHP Word;100541886;f19;113;35;113;;;;vposarray;;v;;a;;r[&#10;        CURLOPT_CONNECTTIMEOUT =&gt; 5;;d-1,-1;;b2,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CURLOPT_FIXED;PHP:PHP Word;100541886;f19;128;33;128;;;;vposarray;;v;;a;;r[&#10;        CURLOPT_FAILONERROR =&gt; true;;d-1,-1;;b2,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CURLOPT_MAXREDIRS;PHP:PHP Word;100541886;f0;115;25;115;;;;vpos;;v;;a;;r;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CURLOPT_PROTOCOLS;PHP:PHP Word;100541886;f0;116;25;116;;;;vpos;;v;;a;;r;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CURLOPT_RETURNTRANSFER;PHP:PHP Word;100541886;f0;130;30;130;;;;vpos;;v;;a;;r;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CURLOPT_SSL_VERIFYHOST;PHP:PHP Word;100541886;f0;117;30;117;;;;vpos;;v;;a;;r;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CURLOPT_SSL_VERIFYPEER;PHP:PHP Word;100541886;f0;118;30;118;;;;vpos;;v;;a;;r;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CURLOPT_TIMEOUT;PHP:PHP Word;100541886;f0;119;23;119;;;;vpos;;v;;a;;r;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CURLOPT_USERAGENT;PHP:PHP Word;100541886;f0;120;25;120;;;;vpos;;v;;a;;r;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_AES;PHP:Function Name;100541886;f15;441;2;458;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _AES($key, $text)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the input text encrypted using AES algorithm and the specified key.&#10;This method requires openssl or mcrypt. Text is padded to 16bytes blocks&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.005 (2010-05-11)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$key&lt;/b&gt;: encryption key&#10;    string &lt;b&gt;$text&lt;/b&gt;: input text to be encrypted&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   encrypted text;;d42,441;;b1,5;;m0;;e0;;i0;;o;;k;;l $key;;p $text;;p;;x;;x;;n">
</treenode>
<treenode node="_AESnopad;PHP:Function Name;100541886;f15;470;2;483;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _AESnopad($key, $text)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the input text encrypted using AES algorithm and the specified key.&#10;This method requires openssl or mcrypt. Text is not padded&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: TODO&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$key&lt;/b&gt;: encryption key&#10;    string &lt;b&gt;$text&lt;/b&gt;: input text to be encrypted&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   encrypted text;;d47,470;;b1,5;;m0;;e0;;i0;;o;;k;;l $key;;p $text;;p;;x;;x;;n">
</treenode>
<treenode node="_RC4;PHP:Function Name;100541886;f15;497;2;531;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _RC4($key, $text, &amp;$last_enc_key, &amp;$last_enc_key_c)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the input text encrypted using RC4 algorithm and the specified key.&#10;RC4 is the standard encryption algorithm used in PDF format&#10;&lt;b&gt;since&lt;/b&gt;: 2.0.000 (2008-01-02)&#10;&lt;b&gt;author&lt;/b&gt;: Klemen Vodopivec, Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$key&lt;/b&gt;: Encryption key.&#10;    string &lt;b&gt;$text&lt;/b&gt;: Input text to be encrypted.&#10;    string &lt;b&gt;$last_enc_key&lt;/b&gt;: Reference to last RC4 key encrypted.&#10;    string &lt;b&gt;$last_enc_key_c&lt;/b&gt;: Reference to last RC4 computed key.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   encrypted text;;d76,497;;b1,5;;m0;;e0;;i0;;o;;k;;l $key;;p $text;;p $last_enc_key;;p $last_enc_key_c;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="_escape;PHP:Function Name;100541886;f15;299;2;302;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _escape($s)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add &quot;\&quot; before &quot;\&quot;, &quot;(&quot; and &quot;)&quot;&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$s&lt;/b&gt;: string to escape.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   escaped string.;;d36,299;;b1,5;;m0;;e0;;i0;;o;;k;;l $s;;p;;x;;n">
</treenode>
<treenode node="_escapeXML;PHP:Function Name;100541886;f15;311;2;315;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _escapeXML($str)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Escape some special characters (&amp;lt;s &amp;gt;s &amp;amp;s) for XML output.&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.121 (2011-09-28)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: Input string to convert.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   converted string;;d41,311;;b1,5;;m0;;e0;;i0;;o;;k;;l $str;;p;;x;;n">
</treenode>
<treenode node="_freadint;PHP:Function Name;100541886;f15;2138;2;2141;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _freadint($f)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Read a 4-byte (32 bit) integer from file.&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    resource &lt;b&gt;$f&lt;/b&gt;: file resource.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   4-byte integer;;d38,2138;;b1,5;;m0;;e0;;i0;;o;;k;;l $f;;p;;x;;n">
</treenode>
<treenode node="_getBYTE;PHP:Function Name;100541886;f15;2106;2;2109;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getBYTE($str, $offset)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get BYTE from string (8-bit unsigned integer).&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.2.000 (2010-06-02)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: String from where to extract value.&#10;    int &lt;b&gt;$offset&lt;/b&gt;: Point from where to read the data.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   8 bit value;;d48,2106;;b1,5;;m0;;e0;;i0;;o;;k;;l $str;;p $offset;;p;;x;;x;;n">
</treenode>
<treenode node="_getFIXED;PHP:Function Name;100541886;f15;2088;2;2095;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getFIXED($str, $offset)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get FIXED from string (32-bit signed fixed-point number (16.16).&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.123 (2011-09-30)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: string from where to extract value&#10;    int &lt;b&gt;$offset&lt;/b&gt;: point from where to read the data&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   16 bit value;;d49,2088;;b1,5;;m0;;e0;;i0;;o;;k;;l $str;;p $offset;;p;;x;;x;;n">
</treenode>
<treenode node="_getFWORD;PHP:Function Name;100541886;f15;2057;2;2063;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getFWORD($str, $offset)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get FWORD from string (Big Endian 16-bit signed integer).&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.123 (2011-09-30)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: String from where to extract value.&#10;    int &lt;b&gt;$offset&lt;/b&gt;: Point from where to read the data.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   16 bit value;;d49,2057;;b1,5;;m0;;e0;;i0;;o;;k;;l $str;;p $offset;;p;;x;;x;;n">
</treenode>
<treenode node="_getSHORT;PHP:Function Name;100541886;f15;2043;2;2046;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getSHORT($str, $offset)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get SHORT from string (Big Endian 16-bit signed integer).&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.2.000 (2010-06-02)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: String from where to extract value.&#10;    int &lt;b&gt;$offset&lt;/b&gt;: Point from where to read the data.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   16 bit value;;d49,2043;;b1,5;;m0;;e0;;i0;;o;;k;;l $str;;p $offset;;p;;x;;x;;n">
</treenode>
<treenode node="_getUFWORD;PHP:Function Name;100541886;f15;2074;2;2077;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getUFWORD($str, $offset)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get UFWORD from string (Big Endian 16-bit unsigned integer).&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.123 (2011-09-30)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: string from where to extract value&#10;    int &lt;b&gt;$offset&lt;/b&gt;: point from where to read the data&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   16 bit value;;d50,2074;;b1,5;;m0;;e0;;i0;;o;;k;;l $str;;p $offset;;p;;x;;x;;n">
</treenode>
<treenode node="_getULONG;PHP:Function Name;100541886;f15;2015;2;2018;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getULONG($str, $offset)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get ULONG from string (Big Endian 32-bit unsigned integer).&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.2.000 (2010-06-02)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: string from where to extract value&#10;    int &lt;b&gt;$offset&lt;/b&gt;: point from where to read the data&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   32 bit value;;d49,2015;;b1,5;;m0;;e0;;i0;;o;;k;;l $str;;p $offset;;p;;x;;x;;n">
</treenode>
<treenode node="_getUSHORT;PHP:Function Name;100541886;f15;2029;2;2032;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _getUSHORT($str, $offset)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get USHORT from string (Big Endian 16-bit unsigned integer).&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.2.000 (2010-06-02)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: string from where to extract value&#10;    int &lt;b&gt;$offset&lt;/b&gt;: point from where to read the data&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   16 bit value;;d50,2029;;b1,5;;m0;;e0;;i0;;o;;k;;l $str;;p $offset;;p;;x;;x;;n">
</treenode>
<treenode node="_md5_16;PHP:Function Name;100541886;f15;427;2;429;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _md5_16($str)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Encrypts a string using MD5 and returns it&apos;s value as a binary string.&#10;&lt;b&gt;since&lt;/b&gt;: 2.0.000 (2008-01-02)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: input string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   MD5 encrypted binary string;;d38,427;;b1,5;;m0;;e0;;i0;;o;;k;;l $str;;p;;x;;n">
</treenode>
<treenode node="convertHexStringToString;PHP:Function Name;100541886;f15;578;2;590;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    convertHexStringToString($bs)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert hexadecimal string to string&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.005 (2010-05-12)&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$bs&lt;/b&gt;: byte-string to convert;;d54,578;;b1,5;;m0;;e0;;i0;;o;;k;;l $bs;;p;;x;;n">
</treenode>
<treenode node="convertStringToHexString;PHP:Function Name;100541886;f15;600;2;607;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    convertStringToHexString($s)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert string to hexadecimal string (byte string)&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.010 (2010-05-17)&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$s&lt;/b&gt;: string to convert&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   byte string;;d53,600;;b1,5;;m0;;e0;;i0;;o;;k;;l $s;;p;;x;;n">
</treenode>
<treenode node="empty_string;PHP:Function Name;100541886;f15;277;2;279;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    empty_string($str)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Determine whether a string is empty.&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.044 (2009-04-16)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: string to be checked&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if string is empty;;d43,277;;b1,5;;m0;;e0;;i0;;o;;k;;l $str;;p;;x;;n">
</treenode>
<treenode node="encodeNameObject;PHP:Function Name;100541886;f15;634;2;646;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    encodeNameObject($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Encode a name object.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.097 (2011-06-23)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: Name object to encode.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Encoded name object.;;d48,634;;b1,5;;m0;;e0;;i0;;o;;k;;l $name;;p;;x;;n">
</treenode>
<treenode node="encodeUrlQuery;PHP:Function Name;100541886;f15;1877;2;1888;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    encodeUrlQuery($url)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Encode query params in URL&#10;&lt;b&gt;since&lt;/b&gt;: 6.3.3 (2019-11-01)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;;;d45,1877;;b1,5;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
<treenode node="extractCSSproperties;PHP:Function Name;100541886;f15;1048;2;1129;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    extractCSSproperties($cssdata)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Extracts the CSS properties from a CSS string.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.1.000 (2010-05-25)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$cssdata&lt;/b&gt;: string containing CSS definitions.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An array where the keys are the CSS selectors and the values are the CSS properties.;;d55,1048;;b1,5;;m0;;e0;;i0;;o;;k;;l $cssdata;;p;;x;;n">
</treenode>
<treenode node="fileGetContents;PHP:Function Name;100541886;f15;1917;2;2004;;;;vpos;;v;;astring|false;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fileGetContents($file)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Reads entire file into a string.&#10;The file can be also an URL.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 6.0.025&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$file&lt;/b&gt;: Name of the file or URL to read.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The function returns the read data or FALSE on failure.;;d47,1917;;b1,5;;m0;;e0;;i0;;o;;k;;l $file;;p;;x;;n">
</treenode>
<treenode node="file_exists;PHP:Function Name;100541886;f15;1898;2;1906;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    file_exists($filename)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Wrapper for file_exists.&#10;Checks whether a file or directory exists.&#10;Only allows some protocols and local files.&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$filename&lt;/b&gt;: Path to the file or directory.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Returns TRUE if the file or directory specified by filename exists;s FALSE otherwise.;;d47,1898;;b1,5;;m0;;e0;;i0;;o;;k;;l $filename;;p;;x;;n">
</treenode>
<treenode node="fixHTMLCode;PHP:Function Name;100541886;f15;1144;2;1199;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixHTMLCode($html, $default_css, $tagvs, $tidy_options, &amp;$tagvspaces)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Cleanup HTML code (requires HTML Tidy library).&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.017 (2010-11-16)&#10;&lt;b&gt;see&lt;/b&gt;: setHtmlVSpace()&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$html&lt;/b&gt;: htmlcode to fix&#10;    string &lt;b&gt;$default_css&lt;/b&gt;: CSS commands to add&#10;    array|null &lt;b&gt;$tagvs&lt;/b&gt;: parameters for setHtmlVSpace method&#10;    array|null &lt;b&gt;$tidy_options&lt;/b&gt;: options for tidy_parse_string function&#10;    array &lt;b&gt;$tagvspaces&lt;/b&gt;: Array of vertical spaces for tags.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   XHTML code cleaned up;;d94,1144;;b1,5;;m0;;e0;;i0;;o;;k;;l $html;;p $default_css;;p $tagvs;;p $tidy_options;;p $tagvspaces;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="fopenLocal;PHP:Function Name;100541886;f15;1832;2;1839;;;;vpos;;v;;aresource|false;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fopenLocal($filename, $mode)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Wrapper to use fopen only with local files&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$filename&lt;/b&gt;: Name of the file to open&#10;    string &lt;b&gt;$mode&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Returns a file pointer resource on success, or FALSE on error.;;d53,1832;;b1,5;;m0;;e0;;i0;;o;;k;;l $filename;;p $mode;;p;;x;;x;;n">
</treenode>
<treenode node="formatPageNumber;PHP:Function Name;100541886;f15;1023;2;1025;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    formatPageNumber($num)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Format the page numbers.&#10;This method can be overridden for custom formats.&#10;&lt;b&gt;since&lt;/b&gt;: 4.2.005 (2008-11-06)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$num&lt;/b&gt;: page number;;d47,1023;;b1,5;;m0;;e0;;i0;;o;;k;;l $num;;p;;x;;n">
</treenode>
<treenode node="formatTOCPageNumber;PHP:Function Name;100541886;f15;1036;2;1038;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    formatTOCPageNumber($num)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Format the page numbers on the Table Of Content.&#10;This method can be overridden for custom formats.&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.001 (2009-01-04)&#10;&lt;b&gt;see&lt;/b&gt;: addTOC(), addHTMLTOC()&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$num&lt;/b&gt;: page number;;d50,1036;;b1,5;;m0;;e0;;i0;;o;;k;;l $num;;p;;x;;n">
</treenode>
<treenode node="getAnnotOptFromJSProp;PHP:Function Name;100541886;f15;658;2;1013;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAnnotOptFromJSProp($prop, &amp;$spot_colors, $rtl=false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert JavaScript form fields properties array to Annotation Properties array.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.000 (2009-09-06)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$prop&lt;/b&gt;: javascript field properties. Possible values are described on official Javascript for Acrobat API reference.&#10;    array &lt;b&gt;$spot_colors&lt;/b&gt;: Reference to spot colors array.&#10;    boolean &lt;b&gt;$rtl&lt;/b&gt;: True if in Right-To-Left text direction mode, false otherwise.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of annotation properties;;d80,658;;b1,5;;m0;;e0;;i0;;o;;k;;l $prop;;p $spot_colors;;p $rtl;;p;;x;;x;;x;;n">
</treenode>
<treenode node="getBorderMode;PHP:Function Name;100541886;f15;205;2;268;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBorderMode($brd, $position=&apos;start&apos;, $opencell=true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the border mode accounting for multicell position (opens bottom side of multicell crossing pages)&#10;&lt;b&gt;since&lt;/b&gt;: 4.4.002 (2008-12-09)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|array|int &lt;b&gt;$brd&lt;/b&gt;: Indicates if borders must be drawn around the cell block. The value can be a number:&lt;ul&gt;&lt;li&gt;0: no border (default)&lt;/li&gt;&lt;li&gt;1: frame&lt;/li&gt;&lt;/ul&gt;or a string containing some or all of the following characters (in any order):&lt;ul&gt;&lt;li&gt;L: left&lt;/li&gt;&lt;li&gt;T: top&lt;/li&gt;&lt;li&gt;R: right&lt;/li&gt;&lt;li&gt;B: bottom&lt;/li&gt;&lt;/ul&gt; or an array of line styles for each border group: array(&apos;LTRB&apos; =&gt; array(&apos;width&apos; =&gt; 2, &apos;cap&apos; =&gt; &apos;butt&apos;, &apos;join&apos; =&gt; &apos;miter&apos;, &apos;dash&apos; =&gt; 0, &apos;color&apos; =&gt; array(0, 0, 0)))&#10;    string &lt;b&gt;$position&lt;/b&gt;: multicell position: &apos;start&apos;, &apos;middle&apos;, &apos;end&apos;&#10;    boolean &lt;b&gt;$opencell&lt;/b&gt;: True when the cell is left open at the page bottom, false otherwise.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   border mode array;;d79,205;;b1,5;;m0;;e0;;i0;;o;;k;;l $brd;;p $position;;p $opencell;;p;;x;;x;;x;;n">
</treenode>
<treenode node="getCSSdataArray;PHP:Function Name;100541886;f15;1370;2;1406;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCSSdataArray($dom, $key, $css)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the styles array that apply for the selected HTML tag.&#10;&lt;b&gt;since&lt;/b&gt;: 5.1.000 (2010-05-25)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$dom&lt;/b&gt;: array of HTML tags and properties&#10;    int &lt;b&gt;$key&lt;/b&gt;: key of the current HTML tag&#10;    array &lt;b&gt;$css&lt;/b&gt;: array of CSS properties&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing CSS properties;;d58,1370;;b1,5;;m0;;e0;;i0;;o;;k;;l $dom;;p $key;;p $css;;p;;x;;x;;x;;n">
</treenode>
<treenode node="getEncPermissionsString;PHP:Function Name;100541886;f15;617;2;624;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getEncPermissionsString($protection)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert encryption P value to a string of bytes, low-order byte first.&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.005 (2010-05-12)&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$protection&lt;/b&gt;: 32bit encryption permission value (P value);;d61,617;;b1,5;;m0;;e0;;i0;;o;;k;;l $protection;;p;;x;;n">
</treenode>
<treenode node="getFormattedDate;PHP:Function Name;100541886;f15;389;2;391;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormattedDate($time)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a formatted date-time.&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.152 (2012-03-23)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$time&lt;/b&gt;: Time in seconds.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   escaped date string.;;d48,389;;b1,5;;m0;;e0;;i0;;o;;k;;l $time;;p;;x;;n">
</treenode>
<treenode node="getHyphenPatternsFromTEX;PHP:Function Name;100541886;f15;1531;2;1554;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getHyphenPatternsFromTEX($file)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an array of hyphenation patterns.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.9.012 (2010-04-12)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$file&lt;/b&gt;: TEX file containing hypenation patterns. TEX patterns can be downloaded from http://www.ctan.org/tex-archive/language/hyph-utf8/tex/generic/hyph-utf8/patterns/&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of hyphenation patterns;;d56,1531;;b1,5;;m0;;e0;;i0;;o;;k;;l $file;;p;;x;;n">
</treenode>
<treenode node="getObjFilename;PHP:Function Name;100541886;f15;289;2;291;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getObjFilename($type=&apos;tmp&apos;, $file_id=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a temporary filename for caching object on filesystem.&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.000 (2008-12-31)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$type&lt;/b&gt;: Type of file (name of the subdir on the tcpdf cache folder).&#10;    string &lt;b&gt;$file_id&lt;/b&gt;: TCPDF file_id.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   filename.;;d65,289;;b1,5;;m0;;e0;;i0;;o;;k;;l $type;;p $file_id;;p;;x;;x;;n">
</treenode>
<treenode node="getPageLayoutMode;PHP:Function Name;100541886;f15;2578;2;2613;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPageLayoutMode($layout=&apos;SinglePage&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the canonical page layout mode.&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$layout&lt;/b&gt;: The page layout. Possible values are:&lt;ul&gt;&lt;li&gt;SinglePage Display one page at a time&lt;/li&gt;&lt;li&gt;OneColumn Display the pages in one column&lt;/li&gt;&lt;li&gt;TwoColumnLeft Display the pages in two columns, with odd-numbered pages on the left&lt;/li&gt;&lt;li&gt;TwoColumnRight Display the pages in two columns, with odd-numbered pages on the right&lt;/li&gt;&lt;li&gt;TwoPageLeft (PDF 1.5) Display the pages two at a time, with odd-numbered pages on the left&lt;/li&gt;&lt;li&gt;TwoPageRight (PDF 1.5) Display the pages two at a time, with odd-numbered pages on the right&lt;/li&gt;&lt;/ul&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Canonical page layout name.;;d64,2578;;b1,5;;m0;;e0;;i0;;o;;k;;l $layout;;p;;x;;n">
</treenode>
<treenode node="getPageMode;PHP:Function Name;100541886;f15;2621;2;2652;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPageMode($mode=&apos;UseNone&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the canonical page layout mode.&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$mode&lt;/b&gt;: A name object specifying how the document should be displayed when opened:&lt;ul&gt;&lt;li&gt;UseNone Neither document outline nor thumbnail images visible&lt;/li&gt;&lt;li&gt;UseOutlines Document outline visible&lt;/li&gt;&lt;li&gt;UseThumbs Thumbnail images visible&lt;/li&gt;&lt;li&gt;FullScreen Full-screen mode, with no menu bar, window controls, or any other window visible&lt;/li&gt;&lt;li&gt;UseOC (PDF 1.5) Optional content group panel visible&lt;/li&gt;&lt;li&gt;UseAttachments (PDF 1.6) Attachments panel visible&lt;/li&gt;&lt;/ul&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Canonical page mode name.;;d53,2621;;b1,5;;m0;;e0;;i0;;o;;k;;l $mode;;p;;x;;n">
</treenode>
<treenode node="getPageSizeFromFormat;PHP:Function Name;100541886;f15;2509;2;2514;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPageSizeFromFormat($format)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get page dimensions from format name.&#10;&lt;b&gt;see&lt;/b&gt;: self::$page_format&lt;ul&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.010 (2010-05-17)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$format&lt;/b&gt;: The format name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing page width and height in points;;d55,2509;;b1,5;;m0;;e0;;i0;;o;;k;;l $format;;p;;x;;n">
</treenode>
<treenode node="getPathPaintOperator;PHP:Function Name;100541886;f15;1578;2;1646;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPathPaintOperator($style, $default=&apos;S&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the Path-Painting Operators.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-04-30)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$style&lt;/b&gt;: Style of rendering. Possible values are: &lt;ul&gt; &lt;li&gt;S or D: Stroke the path.&lt;/li&gt; &lt;li&gt;s or d: Close and stroke the path.&lt;/li&gt; &lt;li&gt;f or F: Fill the path, using the nonzero winding number rule to determine the region to fill.&lt;/li&gt; &lt;li&gt;f* or F*: Fill the path, using the even-odd rule to determine the region to fill.&lt;/li&gt; &lt;li&gt;B or FD or DF: Fill and then stroke the path, using the nonzero winding number rule to determine the region to fill.&lt;/li&gt; &lt;li&gt;B* or F*D or DF*: Fill and then stroke the path, using the even-odd rule to determine the region to fill.&lt;/li&gt; &lt;li&gt;b or fd or df: Close, fill, and then stroke the path, using the nonzero winding number rule to determine the region to fill.&lt;/li&gt; &lt;li&gt;b or f*d or df*: Close, fill, and then stroke the path, using the even-odd rule to determine the region to fill.&lt;/li&gt; &lt;li&gt;CNZ: Clipping mode using the even-odd rule to determine which regions lie inside the clipping path.&lt;/li&gt; &lt;li&gt;CEO: Clipping mode using the nonzero winding number rule to determine which regions lie inside the clipping path&lt;/li&gt; &lt;li&gt;n: End the path object without filling or stroking it.&lt;/li&gt; &lt;/ul&gt;&#10;    string &lt;b&gt;$default&lt;/b&gt;: default style;;d67,1578;;b1,5;;m0;;e0;;i0;;o;;k;;l $style;;p $default;;p;;x;;x;;n">
</treenode>
<treenode node="getRandomSeed;PHP:Function Name;100541886;f15;401;2;418;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRandomSeed($seed=&apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a string containing random data to be used as a seed for encryption methods.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.006 (2010-10-19)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$seed&lt;/b&gt;: starting seed value&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing random data;;d48,401;;b1,5;;m0;;e0;;i0;;o;;k;;l $seed;;p;;x;;n">
</treenode>
<treenode node="getSVGTransformMatrix;PHP:Function Name;100541886;f15;1676;2;1761;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSVGTransformMatrix($attribute)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the tranformation matrix from SVG transform attribute&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-05-02)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$attribute&lt;/b&gt;: transformation&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of transformations;;d58,1676;;b1,5;;m0;;e0;;i0;;o;;k;;l $attribute;;p;;x;;n">
</treenode>
<treenode node="getTCPDFProducer;PHP:Function Name;100541886;f15;151;2;153;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTCPDFProducer()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the current TCPDF producer.&#10;&lt;b&gt;since&lt;/b&gt;: 6.0.000 (2013-03-16)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   TCPDF producer string;;d43,151;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getTCPDFVersion;PHP:Function Name;100541886;f15;141;2;143;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTCPDFVersion()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the current TCPDF version.&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.012 (2010-11-10)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   TCPDF version string;;d42,141;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getTagStyleFromCSSarray;PHP:Function Name;100541886;f15;1415;2;1437;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTagStyleFromCSSarray($css)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Compact CSS data array into single string.&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.070 (2011-04-19)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$css&lt;/b&gt;: array of CSS properties&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing merged CSS properties;;d54,1415;;b1,5;;m0;;e0;;i0;;o;;k;;l $css;;p;;x;;n">
</treenode>
<treenode node="getTimestamp;PHP:Function Name;100541886;f15;374;2;380;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTimestamp($date)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns timestamp in seconds from formatted date-time.&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.152 (2012-03-23)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$date&lt;/b&gt;: Formatted date-time.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   seconds.;;d44,374;;b1,5;;m0;;e0;;i0;;o;;k;;l $date;;p;;x;;n">
</treenode>
<treenode node="getTransformationMatrixProduct;PHP:Function Name;100541886;f15;1657;2;1666;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTransformationMatrixProduct($ta, $tb)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the product of two SVG tranformation matrices&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-05-02)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$ta&lt;/b&gt;: first SVG tranformation matrix&#10;    array &lt;b&gt;$tb&lt;/b&gt;: second SVG tranformation matrix&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   transformation array;;d65,1657;;b1,5;;m0;;e0;;i0;;o;;k;;l $ta;;p $tb;;p;;x;;x;;n">
</treenode>
<treenode node="getUserPermissionCode;PHP:Function Name;100541886;f15;541;2;568;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getUserPermissionCode($permissions, $mode=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the permission code used on encryption (P value).&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.005 (2010-05-12)&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$permissions&lt;/b&gt;: the set of permissions (specify the ones you want to block).&#10;    int &lt;b&gt;$mode&lt;/b&gt;: encryption strength: 0 = RC4 40 bit;s 1 = RC4 128 bit;s 2 = AES 128 bit;s 3 = AES 256 bit.;;d69,541;;b1,5;;m0;;e0;;i0;;o;;k;;l $permissions;;p $mode;;p;;x;;x;;n">
</treenode>
<treenode node="getVectorsAngle;PHP:Function Name;100541886;f15;1773;2;1785;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getVectorsAngle($x1, $y1, $x2, $y2)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the angle in radiants between two vectors&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.000 (2010-05-04)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$x1&lt;/b&gt;: X coordinate of first vector point&#10;    int &lt;b&gt;$y1&lt;/b&gt;: Y coordinate of first vector point&#10;    int &lt;b&gt;$x2&lt;/b&gt;: X coordinate of second vector point&#10;    int &lt;b&gt;$y2&lt;/b&gt;: Y coordinate of second vector point;;d60,1773;;b1,5;;m0;;e0;;i0;;o;;k;;l $x1;;p $y1;;p $x2;;p $y2;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="intToRoman;PHP:Function Name;100541886;f15;1446;2;1505;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    intToRoman($number)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the Roman representation of an integer number&#10;&lt;b&gt;since&lt;/b&gt;: 4.4.004 (2008-12-10)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$number&lt;/b&gt;: number to convert&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   roman representation of the specified number;;d44,1446;;b1,5;;m0;;e0;;i0;;o;;k;;l $number;;p;;x;;n">
</treenode>
<treenode node="isValidCSSSelectorForTag;PHP:Function Name;100541886;f15;1210;2;1359;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isValidCSSSelectorForTag($dom, $key, $selector)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the CSS selector is valid for the selected HTML tag&#10;&lt;b&gt;since&lt;/b&gt;: 5.1.000 (2010-05-25)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$dom&lt;/b&gt;: array of HTML tags and properties&#10;    int &lt;b&gt;$key&lt;/b&gt;: key of the current HTML tag&#10;    string &lt;b&gt;$selector&lt;/b&gt;: CSS selector string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   if the selector is valid, false otherwise;;d72,1210;;b1,5;;m0;;e0;;i0;;o;;k;;l $dom;;p $key;;p $selector;;p;;x;;x;;x;;n">
</treenode>
<treenode node="isValidURL;PHP:Function Name;100541886;f15;162;2;168;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isValidURL($url)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if the URL exist.&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.204 (2013-01-28)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: URL to check.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the URl exist, false otherwise.;;d41,162;;b1,5;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
<treenode node="objclone;PHP:Function Name;100541886;f15;324;2;330;;;;vpos;;v;;aobject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    objclone($object)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a copy of a class object&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.029 (2009-03-19)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    object &lt;b&gt;$object&lt;/b&gt;: class object to be cloned&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   cloned object;;d42,324;;b1,5;;m0;;e0;;i0;;o;;k;;l $object;;p;;x;;n">
</treenode>
<treenode node="pregSplit;PHP:Function Name;100541886;f15;1800;2;1823;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    pregSplit($pattern, $modifiers, $subject, $limit=NULL, $flags=NULL)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Split string by a regular expression.&#10;This is a wrapper for the preg_split function to avoid the bug: https://bugs.php.net/bug.php?id=45850&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 6.0.023&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$pattern&lt;/b&gt;: The regular expression pattern to search for without the modifiers, as a string.&#10;    string &lt;b&gt;$modifiers&lt;/b&gt;: The modifiers part of the pattern,&#10;    string &lt;b&gt;$subject&lt;/b&gt;: The input string.&#10;    int &lt;b&gt;$limit&lt;/b&gt;: If specified, then only substrings up to limit are returned with the rest of the string being placed in the last substring. A limit of -1, 0 or NULL means &quot;no limit&quot; and, as is standard across PHP, you can use NULL to skip to the flags parameter.&#10;    int &lt;b&gt;$flags&lt;/b&gt;: The flags as specified on the preg_split PHP function.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Returns an array containing substrings of subject split along boundaries matched by pattern.modifier;;d92,1800;;b1,5;;m0;;e0;;i0;;o;;k;;l $pattern;;p $modifiers;;p $subject;;p $limit;;p $flags;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="removeSHY;PHP:Function Name;100541886;f15;187;2;193;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeSHY($txt=&apos;&apos;, $unicode=true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Removes SHY characters from text.&#10;Unicode Data:&lt;ul&gt;&#10;&lt;li&gt;Name : SOFT HYPHEN, commonly abbreviated as SHY&lt;/li&gt;&#10;&lt;li&gt;HTML Entity (decimal): &quot;&amp;amp;s#173;s&quot;&lt;/li&gt;&#10;&lt;li&gt;HTML Entity (hex): &quot;&amp;amp;s#xad;s&quot;&lt;/li&gt;&#10;&lt;li&gt;HTML Entity (named): &quot;&amp;amp;sshy;s&quot;&lt;/li&gt;&#10;&lt;li&gt;How to type in Microsoft Windows: [Alt +00AD] or [Alt 0173]&lt;/li&gt;&#10;&lt;li&gt;UTF-8 (hex): 0xC2 0xAD (c2ad)&lt;/li&gt;&#10;&lt;li&gt;UTF-8 character: chr(194).chr(173)&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&lt;b&gt;since&lt;/b&gt;: (4.5.019) 2009-02-28&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$txt&lt;/b&gt;: input string&#10;    boolean &lt;b&gt;$unicode&lt;/b&gt;: True if we are in unicode mode, false otherwise.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   without SHY characters.;;d58,187;;b1,5;;m0;;e0;;i0;;o;;k;;l $txt;;p $unicode;;p;;x;;x;;n">
</treenode>
<treenode node="replacePageNumAliases;PHP:Function Name;100541886;f15;355;2;365;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    replacePageNumAliases($page, $replace, $diff=0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Replace page number aliases with number.&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$page&lt;/b&gt;: Page content.&#10;    array &lt;b&gt;$replace&lt;/b&gt;: Array of replacements (array keys are replacement strings, values are alias arrays).&#10;    int &lt;b&gt;$diff&lt;/b&gt;: If passed, this will be set to the total char number difference between alias and replacements.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   replaced page content and updated $diff parameter as array.;;d72,355;;b1,5;;m0;;e0;;i0;;o;;k;;l $page;;p $replace;;p $diff;;p;;x;;x;;x;;n">
</treenode>
<treenode node="revstrpos;PHP:Function Name;100541886;f15;1516;2;1521;;;;vpos;;v;;aint|false;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    revstrpos($haystack, $needle, $offset = 0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Find position of last occurrence of a substring in a string&#10;&lt;b&gt;since&lt;/b&gt;: 4.8.038 (2010-03-13)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$haystack&lt;/b&gt;: The string to search in.&#10;    string &lt;b&gt;$needle&lt;/b&gt;: substring to search.&#10;    int &lt;b&gt;$offset&lt;/b&gt;: May be specified to begin searching an arbitrary number of characters into the string.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Returns the position where the needle exists. Returns FALSE if the needle was not found.;;d67,1516;;b1,5;;m0;;e0;;i0;;o;;k;;l $haystack;;p $needle;;p $offset;;p;;x;;x;;x;;n">
</treenode>
<treenode node="rfread;PHP:Function Name;100541886;f15;2120;2;2130;;;;vpos;;v;;astring|false;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    rfread($handle, $length)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Binary-safe and URL-safe file read.&#10;Reads up to length bytes from the file pointer referenced by handle. Reading stops as soon as one of the following conditions is met: length bytes have been read;s EOF (end of file) is reached.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 4.5.027 (2009-03-16)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    resource &lt;b&gt;$handle&lt;/b&gt;&#10;    int &lt;b&gt;$length&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Returns the read string or FALSE in case of error.;;d49,2120;;b1,5;;m0;;e0;;i0;;o;;k;;l $handle;;p $length;;p;;x;;x;;n">
</treenode>
<treenode node="sendOutputData;PHP:Function Name;100541886;f15;339;2;345;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    sendOutputData($data, $length)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output input data and compress it if possible.&#10;&lt;b&gt;since&lt;/b&gt;: 5.9.086&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$data&lt;/b&gt;: Data to output.&#10;    int &lt;b&gt;$length&lt;/b&gt;: Data length in bytes.;;d55,339;;b1,5;;m0;;e0;;i0;;o;;k;;l $data;;p $length;;p;;x;;x;;n">
</treenode>
<treenode node="setPageBoxes;PHP:Function Name;100541886;f15;2531;2;2547;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPageBoxes($page, $type, $llx, $lly, $urx, $ury, $points, $k, $pagedim=array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set page boundaries.&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.010 (2010-05-17)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$page&lt;/b&gt;: page number&#10;    string &lt;b&gt;$type&lt;/b&gt;: valid values are: &lt;ul&gt;&lt;li&gt;&apos;MediaBox&apos; : the boundaries of the physical medium on which the page shall be displayed or printed;s&lt;/li&gt;&lt;li&gt;&apos;CropBox&apos; : the visible region of default user space;s&lt;/li&gt;&lt;li&gt;&apos;BleedBox&apos; : the region to which the contents of the page shall be clipped when output in a production environment;s&lt;/li&gt;&lt;li&gt;&apos;TrimBox&apos; : the intended dimensions of the finished page after trimming;s&lt;/li&gt;&lt;li&gt;&apos;ArtBox&apos; : the page&apos;s meaningful content (including potential white space).&lt;/li&gt;&lt;/ul&gt;&#10;    float &lt;b&gt;$llx&lt;/b&gt;: lower-left x coordinate in user units.&#10;    float &lt;b&gt;$lly&lt;/b&gt;: lower-left y coordinate in user units.&#10;    float &lt;b&gt;$urx&lt;/b&gt;: upper-right x coordinate in user units.&#10;    float &lt;b&gt;$ury&lt;/b&gt;: upper-right y coordinate in user units.&#10;    boolean &lt;b&gt;$points&lt;/b&gt;: If true uses user units as unit of measure, otherwise uses PDF points.&#10;    float &lt;b&gt;$k&lt;/b&gt;: Scale factor (number of points in user unit).&#10;    array &lt;b&gt;$pagedim&lt;/b&gt;: Array of page dimensions.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   pagedim array of page dimensions.;;d106,2531;;b1,5;;m0;;e0;;i0;;o;;k;;l $page;;p $type;;p $llx;;p $lly;;p $urx;;p $ury;;p $points;;p $k;;p $pagedim;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="swapPageBoxCoordinates;PHP:Function Name;100541886;f15;2557;2;2570;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    swapPageBoxCoordinates($page, $pagedim)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Swap X and Y coordinates of page boxes (change page boxes orientation).&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.010 (2010-05-17)&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$page&lt;/b&gt;: page number&#10;    array &lt;b&gt;$pagedim&lt;/b&gt;: Array of page dimensions.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   pagedim array of page dimensions.;;d64,2557;;b1,5;;m0;;e0;;i0;;o;;k;;l $page;;p $pagedim;;p;;x;;x;;n">
</treenode>
<treenode node="url_exists;PHP:Function Name;100541886;f15;1848;2;1867;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    url_exists($url)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if the URL exist.&#10;&lt;b&gt;public&lt;/b&gt;: static&#10;&lt;b&gt;since&lt;/b&gt;: 6.2.25&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: URL to check.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Returns TRUE if the URL exists;s FALSE otherwise.;;d41,1848;;b1,5;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
<treenode node="$alias_group_num_page;PHP:Var Name;100541886;f15;81;36;81;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    String alias for group page number.&#10;&lt;b&gt;public&lt;/b&gt;: static;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$alias_group_tot_pages;PHP:Var Name;100541886;f15;75;37;75;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    String alias for total number of pages in a single group.&#10;&lt;b&gt;public&lt;/b&gt;: static;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$alias_num_page;PHP:Var Name;100541886;f15;69;30;69;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    String alias for page number.&#10;&lt;b&gt;public&lt;/b&gt;: static;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$alias_right_shift;PHP:Var Name;100541886;f15;87;33;87;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    String alias for right shift compensation used to correctly align page numbers on the right.&#10;&lt;b&gt;public&lt;/b&gt;: static;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$alias_tot_pages;PHP:Var Name;100541886;f15;63;31;63;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    String alias for total number of pages.&#10;&lt;b&gt;public&lt;/b&gt;: static;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$byterange_string;PHP:Var Name;100541886;f15;100;32;100;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ByteRange placemark used during digital signature process.&#10;&lt;b&gt;since&lt;/b&gt;: 4.6.028 (2009-08-25)&#10;&lt;b&gt;public&lt;/b&gt;: static;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$enc_padding;PHP:Var Name;100541886;f15;93;27;93;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Encryption padding string.&#10;&lt;b&gt;public&lt;/b&gt;: static;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$page_formats;PHP:Var Name;100541886;f15;2150;28;2150;;;;vposarray;;v;;a;;r;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$pageboxes;PHP:Var Name;100541886;f15;106;25;106;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array page boxes names&#10;&lt;b&gt;public&lt;/b&gt;: static;;d-1,-1;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$tcpdf_version;PHP:Var Name;100541886;f16;57;30;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current TCPDF version.&#10;&lt;b&gt;private&lt;/b&gt;: static;;d-1,-1;;b3,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="TMXResourceBundle;PHP:Class Name;130269008;f0;56;1;269;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TMXResourceBundle&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;class&lt;/b&gt;: TMXResourceBundle&#10;This PHP Class reads resource text data directly from a TMX (XML) file.&#10;First, the XMLTMXResourceBundle class instantiates itself with two parameters:&#10;a TMX file name and a target language name. Then, using an XML parser, it&#10;reads all of a translation unit&apos;s properties for the key information and&#10;specified language data and populates the resource array with them (key -&gt; value).&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tmxphpbridge&#10;&lt;b&gt;brief&lt;/b&gt;: TMX-PHP Bridge Class&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni [www.tecnick.com]&#10;&lt;b&gt;version&lt;/b&gt;: 1.1.005;;d0,57;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;130269008;f11;102;5;154;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(&#10;        $tmxfile,&#10;        $language, /**&#10;     * String filename for cache&#10;     * @private&#10;     */&#10;        private $cachefile = &apos;&apos;&#10;    )&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Class constructor.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$tmxfile&lt;/b&gt;: (string) TMX (XML) file name&#10;     &lt;b&gt;$language&lt;/b&gt;: (string) ISO language identifier (a two- or three-letter code)&#10;     &lt;b&gt;$cachefile&lt;/b&gt;: (string) set filename for cache (leave blank to exclude cache);;d6,109;;b1,0;;m0;;e0;;i0;;o;;k;;l $tmxfile;;p $language;;p $cachefile;;p;;x;;x;;x;;n">
</treenode>
<treenode node="__destruct;PHP:Function Name;130269008;f11;159;5;162;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __destruct()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Class destructor;s resets $resource array.;;d4,160;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="endElementHandler;PHP:Function Name;130269008;f12;208;5;238;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    endElementHandler($parser, $name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the end element handler function for the XML parser parser.end_element_handler.&#10;&lt;b&gt;private&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$parser&lt;/b&gt;: (resource) The first parameter, parser, is a reference to the XML parser calling the handler.&#10;     &lt;b&gt;$name&lt;/b&gt;: (string) The second parameter, name, contains the name of the element for which this handler is called. If case-folding is in effect for this parser, the element name will be in uppercase letters.;;d4,209;;b3,0;;m0;;e0;;i0;;o;;k;;l $parser;;p $name;;p;;x;;x;;n">
</treenode>
<treenode node="getResource;PHP:Function Name;130269008;f11;265;5;268;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getResource()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the resource array containing the translated word/sentences.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   .;;d4,266;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="segContentHandler;PHP:Function Name;130269008;f12;246;5;259;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    segContentHandler($parser, $data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the character data handler function for the XML parser parser.handler.&#10;&lt;b&gt;private&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$parser&lt;/b&gt;: (resource) The first parameter, parser, is a reference to the XML parser calling the handler.&#10;     &lt;b&gt;$data&lt;/b&gt;: (string) The second parameter, data, contains the character data as a string.;;d4,247;;b3,0;;m0;;e0;;i0;;o;;k;;l $parser;;p $data;;p;;x;;x;;n">
</treenode>
<treenode node="startElementHandler;PHP:Function Name;130269008;f12;171;5;200;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    startElementHandler($parser, $name, $attribs)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the start element handler function for the XML parser parser.start_element_handler.&#10;&lt;b&gt;private&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$parser&lt;/b&gt;: (resource) The first parameter, parser, is a reference to the XML parser calling the handler.&#10;     &lt;b&gt;$name&lt;/b&gt;: (string) The second parameter, name, contains the name of the element for which this handler is called. If case-folding is in effect for this parser, the element name will be in uppercase letters.&#10;     &lt;b&gt;$attribs&lt;/b&gt;: (array) The third parameter, attribs, contains an associative array with the element&apos;s attributes (if any). The keys of this array are the attribute names, the values are the attribute values. Attribute names are case-folded on the same criteria as element names. Attribute values are not case-folded. The original order of the attributes can be retrieved by walking through attribs the normal way, using each(). The first key in the array was the first attribute, and so on.;;d4,172;;b3,0;;m0;;e0;;i0;;o;;k;;l $parser;;p $name;;p $attribs;;p;;x;;x;;x;;n">
</treenode>
<treenode node="$current_data;PHP:Var Name;130269008;f19;76;32;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    String Current data value.&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$current_key;PHP:Var Name;130269008;f12;70;24;70;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    String Current tu -&gt; tuid value.&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$current_language;PHP:Var Name;130269008;f19;82;36;82;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    String Current tuv -&gt; xml:lang value.&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$language;PHP:Var Name;130269008;f19;94;28;94;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    String ISO language identifier (a two- or three-letter code)&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$parser;PHP:Var Name;130269008;f11;58;18;58;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$resource;PHP:Var Name;130269008;f18;64;27;64;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array used to contain key-translation couples.&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$segdata;PHP:Var Name;130269008;f17;88;25;88;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Boolean value true when we are inside a seg element&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="XMLQuestionImporter;PHP:Class Name;580504581;f0;36;1;561;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class XMLQuestionImporter&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;class&lt;/b&gt;: XMLQuestionImporter&#10;This PHP Class imports question data directly from an XML file.&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcexam.admin&#10;&lt;b&gt;version&lt;/b&gt;: 1.1.000;;d0,37;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;580504581;f11;96;5;125;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(&#10;        /**&#10;         * XML file.&#10;         * @private&#10;         */&#10;        private $xmlfile&#10;    )&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Class constructor.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$xmlfile&lt;/b&gt;: (string) xml (XML) file name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   or die for parsing error;;d6,102;;b1,0;;m0;;e0;;i0;;o;;k;;l $xmlfile;;p;;x;;n">
</treenode>
<treenode node="__destruct;PHP:Function Name;580504581;f11;128;5;132;;;;vpos;;v;;a;;r;;d4,129;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="addAnswer;PHP:Function Name;580504581;f12;488;5;560;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addAnswer()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add a new answer if not exist.&#10;&lt;b&gt;private&lt;/b&gt;;;d4,489;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="addModule;PHP:Function Name;580504581;f12;275;5;319;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addModule()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add a new module if not exist.&#10;&lt;b&gt;private&lt;/b&gt;;;d4,276;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="addQuestion;PHP:Function Name;580504581;f12;380;5;482;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addQuestion()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add a new question if not exist.&#10;&lt;b&gt;private&lt;/b&gt;;;d4,381;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="addSubject;PHP:Function Name;580504581;f12;325;5;374;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addSubject()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add a new subject if not exist.&#10;&lt;b&gt;private&lt;/b&gt;;;d4,326;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="endElementHandler;PHP:Function Name;580504581;f12;212;5;255;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    endElementHandler($parser, $name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the end element handler function for the XML parser parser.end_element_handler.&#10;&lt;b&gt;private&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$parser&lt;/b&gt;: (resource) The first parameter, parser, is a reference to the XML parser calling the handler.&#10;     &lt;b&gt;$name&lt;/b&gt;: (string) The second parameter, name, contains the name of the element for which this handler is called. If case-folding is in effect for this parser, the element name will be in uppercase letters.;;d4,213;;b3,0;;m0;;e0;;i0;;o;;k;;l $parser;;p $name;;p;;x;;x;;n">
</treenode>
<treenode node="segContentHandler;PHP:Function Name;580504581;f12;263;5;269;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    segContentHandler($parser, $data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the character data handler function for the XML parser parser.handler.&#10;&lt;b&gt;private&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$parser&lt;/b&gt;: (resource) The first parameter, parser, is a reference to the XML parser calling the handler.&#10;     &lt;b&gt;$data&lt;/b&gt;: (string) The second parameter, data, contains the character data as a string.;;d4,264;;b3,0;;m0;;e0;;i0;;o;;k;;l $parser;;p $data;;p;;x;;x;;n">
</treenode>
<treenode node="startElementHandler;PHP:Function Name;580504581;f12;141;5;204;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    startElementHandler($parser, $name, $attribs)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the start element handler function for the XML parser parser.start_element_handler.&#10;&lt;b&gt;private&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$parser&lt;/b&gt;: (resource) The first parameter, parser, is a reference to the XML parser calling the handler.&#10;     &lt;b&gt;$name&lt;/b&gt;: (string) The second parameter, name, contains the name of the element for which this handler is called. If case-folding is in effect for this parser, the element name will be in uppercase letters.&#10;     &lt;b&gt;$attribs&lt;/b&gt;: (array) The third parameter, attribs, contains an associative array with the element&apos;s attributes (if any). The keys of this array are the attribute names, the values are the attribute values. Attribute names are case-folded on the same criteria as element names. Attribute values are not case-folded. The original order of the attributes can be retrieved by walking through attribs the normal way, using each(). The first key in the array was the first attribute, and so on.;;d4,142;;b3,0;;m0;;e0;;i0;;o;;k;;l $parser;;p $name;;p $attribs;;p;;x;;x;;x;;n">
</treenode>
<treenode node="$boolval;PHP:Var Name;580504581;f18;68;26;68;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Boolean values.&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$current_data;PHP:Var Name;580504581;f19;62;32;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current data value.&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$current_element;PHP:Var Name;580504581;f19;56;35;56;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current data element.&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$level;PHP:Var Name;580504581;f19;44;25;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Current level: &apos;module&apos;, &apos;subject&apos;, &apos;question&apos;, &apos;answer&apos;.&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$level_data;PHP:Var Name;580504581;f18;50;29;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array to store current level data.&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$parser;PHP:Var Name;580504581;f11;38;18;38;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$qtype;PHP:Var Name;580504581;f18;77;24;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Type of questions.&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$questionhash;PHP:Var Name;580504581;f18;89;31;89;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Store hash values of question descriptions.&#10;This is used to avoid the 255 chars limitation for string indexes on MySQL&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="XMLUserImporter;PHP:Class Name;2343868215;f0;133;1;486;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class XMLUserImporter&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;class&lt;/b&gt;: XMLUserImporter&#10;This PHP Class imports users and groups data directly from a XML file.&#10;&lt;b&gt;package&lt;/b&gt;: com.tecnick.tcexam.admin&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni [www.tecnick.com]&#10;&lt;b&gt;version&lt;/b&gt;: 1.0.000;;d0,134;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="__construct;PHP:Function Name;2343868215;f11;171;5;199;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(&#10;        /**&#10;         * String XML file&#10;         * @private&#10;         */&#10;        private $xmlfile&#10;    )&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Class constructor.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$xmlfile&lt;/b&gt;: (string) XML file name;;d6,177;;b1,0;;m0;;e0;;i0;;o;;k;;l $xmlfile;;p;;x;;n">
</treenode>
<treenode node="__destruct;PHP:Function Name;2343868215;f11;202;5;206;;;;vpos;;v;;a;;r;;d4,203;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="endElementHandler;PHP:Function Name;2343868215;f12;260;5;471;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    endElementHandler($parser, $name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the end element handler function for the XML parser parser.end_element_handler.&#10;&lt;b&gt;private&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$parser&lt;/b&gt;: (resource) The first parameter, parser, is a reference to the XML parser calling the handler.&#10;     &lt;b&gt;$name&lt;/b&gt;: (string) The second parameter, name, contains the name of the element for which this handler is called. If case-folding is in effect for this parser, the element name will be in uppercase letters.;;d4,261;;b3,0;;m0;;e0;;i0;;o;;k;;l $parser;;p $name;;p;;x;;x;;n">
</treenode>
<treenode node="segContentHandler;PHP:Function Name;2343868215;f12;479;5;485;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    segContentHandler($parser, $data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the character data handler function for the XML parser parser.handler.&#10;&lt;b&gt;private&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$parser&lt;/b&gt;: (resource) The first parameter, parser, is a reference to the XML parser calling the handler.&#10;     &lt;b&gt;$data&lt;/b&gt;: (string) The second parameter, data, contains the character data as a string.;;d4,480;;b3,0;;m0;;e0;;i0;;o;;k;;l $parser;;p $data;;p;;x;;x;;n">
</treenode>
<treenode node="startElementHandler;PHP:Function Name;2343868215;f12;215;5;252;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    startElementHandler($parser, $name, $attribs)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the start element handler function for the XML parser parser.start_element_handler.&#10;&lt;b&gt;private&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$parser&lt;/b&gt;: (resource) The first parameter, parser, is a reference to the XML parser calling the handler.&#10;     &lt;b&gt;$name&lt;/b&gt;: (string) The second parameter, name, contains the name of the element for which this handler is called. If case-folding is in effect for this parser, the element name will be in uppercase letters.&#10;     &lt;b&gt;$attribs&lt;/b&gt;: (array) The third parameter, attribs, contains an associative array with the element&apos;s attributes (if any). The keys of this array are the attribute names, the values are the attribute values. Attribute names are case-folded on the same criteria as element names. Attribute values are not case-folded. The original order of the attributes can be retrieved by walking through attribs the normal way, using each(). The first key in the array was the first attribute, and so on.;;d4,216;;b3,0;;m0;;e0;;i0;;o;;k;;l $parser;;p $name;;p $attribs;;p;;x;;x;;x;;n">
</treenode>
<treenode node="$current_data;PHP:Var Name;2343868215;f12;147;25;147;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    String Current data value.&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$current_element;PHP:Var Name;2343868215;f19;141;35;141;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    String Current data element.&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$group_data;PHP:Var Name;2343868215;f12;159;23;159;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array for storing user&apos;s group data.&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$parser;PHP:Var Name;2343868215;f11;135;18;135;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$user_data;PHP:Var Name;2343868215;f12;153;22;153;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array Array for storing user data.&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$user_id;PHP:Var Name;2343868215;f16;165;24;165;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Int ID of last inserted user (counter)&#10;&lt;b&gt;private&lt;/b&gt;;;d-1,-1;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="phpCAS;PHP:Class Name;3200056416;f0;288;1;1799;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class phpCAS&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The phpCAS class is a simple container for the phpCAS library. It provides CAS&#10;authentication for web applications written in PHP.&#10;&lt;b&gt;ingroup&lt;/b&gt;: public&#10;&lt;b&gt;class&lt;/b&gt;: phpCAS&#10;&lt;b&gt;category&lt;/b&gt;: Authentication&#10;&lt;b&gt;package&lt;/b&gt;: PhpCAS&#10;&lt;b&gt;author&lt;/b&gt;: Pascal Aubry &lt;pascal.aubry&#10;&lt;b&gt;univ&lt;/b&gt;: -rennes1.fr&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Olivier Berger &lt;olivier.berger&#10;&lt;b&gt;it&lt;/b&gt;: -sudparis.eu&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Brett Bieber &lt;brett.bieber&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Joachim Fritschi &lt;jfritschi&#10;&lt;b&gt;freenet&lt;/b&gt;: .de&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Adam Franco &lt;afranco&#10;&lt;b&gt;middlebury&lt;/b&gt;: .edu&gt;&#10;&lt;b&gt;license&lt;/b&gt;: http://www.apache.org/licenses/LICENSE-2.0  Apache License 2.0&#10;&lt;b&gt;link&lt;/b&gt;: https://wiki.jasig.org/display/CASC/phpCAS;;d0,289;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="_validateClientExists;PHP:Function Name;3200056416;f12;1773;5;1778;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _validateClientExists()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if a client already exists&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceBeforeClientException;;d4,1774;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_validateProxyExists;PHP:Function Name;3200056416;f12;1785;5;1790;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    _validateProxyExists()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks of a proxy client aready exists&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_OutOfSequenceBeforeProxyException;;d4,1786;;b3,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="addRebroadcastHeader;PHP:Function Name;3200056416;f18;1754;5;1766;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addRebroadcastHeader($header)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to add header parameters when rebroadcasting&#10;pgtIou/pgtId or logoutRequest.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$header&lt;/b&gt;: Header to send when rebroadcasting.;;d4,1755;;b1,5;;m0;;e0;;i0;;o;;k;;l $header;;p;;x;;n">
</treenode>
<treenode node="addRebroadcastNode;PHP:Function Name;3200056416;f18;1733;5;1746;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addRebroadcastNode($rebroadcastNodeUrl)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add a pgtIou/pgtId and logoutRequest rebroadcast node.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$rebroadcastNodeUrl&lt;/b&gt;: The rebroadcast node URL. Can be hostname or IP.;;d4,1734;;b1,5;;m0;;e0;;i0;;o;;k;;l $rebroadcastNodeUrl;;p;;x;;n">
</treenode>
<treenode node="allowProxyChain;PHP:Function Name;3200056416;f18;1692;5;1705;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    allowProxyChain(CAS_ProxyChain_Interface $proxy_chain)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    If you want your service to be proxied you have to enable it (default&#10;disabled) and define an accepable list of proxies that are allowed to&#10;proxy your service.&#10;Add each allowed proxy definition object. For the normal CAS_ProxyChain&#10;class, the constructor takes an array of proxies to match. The list is in&#10;reverse just as seen from the service. Proxies have to be defined in reverse&#10;from the service to the user. If a user hits service A and gets proxied via&#10;B to service C the list of acceptable on C would be array(B,A). The definition&#10;of an individual proxy can be either a string or a regexp (preg_match is used)&#10;that will be matched against the proxy list supplied by the cas server&#10;when validating the proxy tickets. The strings are compared starting from&#10;the beginning and must fully match with the proxies in the list.&#10;Example:&#10;phpCAS::allowProxyChain(new CAS_ProxyChain(array(&#10;&apos;https://app.example.com/&apos;&#10;)));s&#10;phpCAS::allowProxyChain(new CAS_ProxyChain(array(&#10;&apos;/^https:\/\/app[0-9]\.example\.com\/rest\//&apos;,&#10;&apos;http://client.example.com/&apos;&#10;)));s&#10;For quick testing or in certain production screnarios you might want to&#10;allow allow any other valid service to proxy your service. To do so, add&#10;the &quot;Any&quot; chain:&#10;phpcas::allowProxyChain(new CAS_ProxyChain_Any);s&#10;THIS SETTING IS HOWEVER NOT RECOMMENDED FOR PRODUCTION AND HAS SECURITY&#10;IMPLICATIONS: YOU ARE ALLOWING ANY SERVICE TO ACT ON BEHALF OF A USER&#10;ON THIS SERVICE.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    CAS_ProxyChain_Interface &lt;b&gt;$proxy_chain&lt;/b&gt;: A proxy-chain that will be matched against the proxies requesting access;;d4,1693;;b1,5;;m0;;e0;;i0;;o;;k;;l $proxy_chain;;pCAS_ProxyChain_Interface;;x;;n">
</treenode>
<treenode node="checkAuthentication;PHP:Function Name;3200056416;f18;1061;5;1073;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    checkAuthentication()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is called to check if the user is already authenticated&#10;locally or has a global cas session. A already existing cas session is&#10;determined by a cas gateway call.(cas login call without any interactive&#10;prompt)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   when the user is authenticated, false when a previous gateway login failed or the function will not return if the user is redirected to the cas server for a gateway login attempt;;d4,1062;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="client;PHP:Function Name;3200056416;f18;346;5;382;;;;vpos;;v;;aa;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    client(&#10;        $server_version,&#10;        $server_hostname,&#10;        $server_port,&#10;        $server_uri,&#10;        $changeSessionID = true&#10;    )&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    phpCAS client initializer.&#10;&lt;b&gt;note&lt;/b&gt;: Only one of the phpCAS::client() and phpCAS::proxy functions should be&#10;called, only once, and before all other methods (except phpCAS::getVersion()&#10;and phpCAS::setDebug()).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$server_version&lt;/b&gt;: the version of the CAS server&#10;    string &lt;b&gt;$server_hostname&lt;/b&gt;: the hostname of the CAS server&#10;    string &lt;b&gt;$server_port&lt;/b&gt;: the port the CAS server is running on&#10;    string &lt;b&gt;$server_uri&lt;/b&gt;: the URI the CAS server is responding on&#10;    bool &lt;b&gt;$changeSessionID&lt;/b&gt;: Allow phpCAS to change the session_id (Single Sign Out/handleLogoutRequests is based on that change)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   newly created CAS_Client object;;d6,352;;b1,5;;m0;;e0;;i0;;o;;k;;l $server_version;;p $server_hostname;;p $server_port;;p $server_uri;;p $changeSessionID;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="error;PHP:Function Name;3200056416;f18;554;5;582;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    error($msg)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used by interface methods to print an error and where the&#10;function was originally called from.&#10;&lt;b&gt;private&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$msg&lt;/b&gt;: the message to print;;d4,555;;b1,5;;m0;;e0;;i0;;o;;k;;l $msg;;p;;x;;n">
</treenode>
<treenode node="forceAuthentication;PHP:Function Name;3200056416;f18;1082;5;1100;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    forceAuthentication()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is called to force authentication if the user was not already&#10;authenticated. If the user is not authenticated, halt by redirecting to&#10;the CAS server.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Authentication;;d4,1083;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAttribute;PHP:Function Name;3200056416;f18;1240;5;1249;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAttribute($key)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer an attribute for the authenticated user.&#10;&lt;b&gt;warning&lt;/b&gt;: should only be called after phpCAS::forceAuthentication()&#10;or phpCAS::checkAuthentication().&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$key&lt;/b&gt;: attribute name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   string for a single value or an array if multiple values exist.;;d4,1241;;b1,5;;m0;;e0;;i0;;o;;k;;l $key;;p;;x;;n">
</treenode>
<treenode node="getAttributes;PHP:Function Name;3200056416;f18;1181;5;1190;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAttributes()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer attributes about the authenticated user.&#10;&lt;b&gt;warning&lt;/b&gt;: should only be called after phpCAS::forceAuthentication()&#10;or phpCAS::checkAuthentication().;;d4,1182;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getProxiedService;PHP:Function Name;3200056416;f18;862;5;875;;;;vpos;;v;;aCAS_ProxiedService;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getProxiedService($type)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer a proxy-authenticated service handler.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException If the service type is unknown.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$type&lt;/b&gt;: The service type. One of PHPCAS_PROXIED_SERVICE_HTTP_GET;s PHPCAS_PROXIED_SERVICE_HTTP_POST;s PHPCAS_PROXIED_SERVICE_IMAP;;d4,863;;b1,5;;m0;;e0;;i0;;o;;k;;l $type;;p;;x;;n">
</treenode>
<treenode node="getProxies;PHP:Function Name;3200056416;f18;1716;5;1721;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getProxies()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer an array of proxies that are sitting in front of this application.&#10;This method will only return a non-empty array if we have received and&#10;validated a Proxy Ticket.&#10;&lt;b&gt;access&lt;/b&gt;: public&#10;&lt;b&gt;since&lt;/b&gt;: 6/25/09;;d4,1717;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getServerLoginURL;PHP:Function Name;3200056416;f18;1270;5;1275;;;;vpos;;v;;athe;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getServerLoginURL()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns the URL to be used to login.&#10;or phpCAS::isAuthenticated().&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   login name of the authenticated user;;d4,1271;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getServerLogoutURL;PHP:Function Name;3200056416;f18;1371;5;1376;;;;vpos;;v;;athe;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getServerLogoutURL()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns the URL to be used to login.&#10;or phpCAS::isAuthenticated().&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   login name of the authenticated user;;d4,1372;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getServiceURL;PHP:Function Name;3200056416;f18;1564;5;1568;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getServiceURL()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the URL that is set as the CAS service parameter.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Service Url;;d4,1565;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getUser;PHP:Function Name;3200056416;f18;1162;5;1171;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getUser()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns the CAS user&apos;s login name.&#10;&lt;b&gt;warning&lt;/b&gt;: should only be called after phpCAS::forceAuthentication()&#10;or phpCAS::checkAuthentication().&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the login name of the authenticated user;;d4,1163;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getVerbose;PHP:Function Name;3200056416;f18;510;5;513;;;;vpos;;v;;aboot;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getVerbose()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Show is verbose mode is on&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   verbose;;d4,511;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getVersion;PHP:Function Name;3200056416;f18;714;5;717;;;;vpos;;v;;athe;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getVersion()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method returns the phpCAS version.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   phpCAS version.;;d4,715;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="handleLogoutRequests;PHP:Function Name;3200056416;f18;1257;5;1262;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    handleLogoutRequests($check_client = true, $allowed_clients = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Handle logout requests.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$check_client&lt;/b&gt;: additional safety check&#10;    array &lt;b&gt;$allowed_clients&lt;/b&gt;: array of allowed clients;;d4,1258;;b1,5;;m0;;e0;;i0;;o;;k;;l $check_client;;p $allowed_clients;;p;;x;;x;;n">
</treenode>
<treenode node="hasAttribute;PHP:Function Name;3200056416;f18;1220;5;1229;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasAttribute($key)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer true if an attribute exists for the authenticated user.&#10;&lt;b&gt;warning&lt;/b&gt;: should only be called after phpCAS::forceAuthentication()&#10;or phpCAS::checkAuthentication().&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$key&lt;/b&gt;: attribute name;;d4,1221;;b1,5;;m0;;e0;;i0;;o;;k;;l $key;;p;;x;;n">
</treenode>
<treenode node="hasAttributes;PHP:Function Name;3200056416;f18;1200;5;1209;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasAttributes()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer true if there are attributes for the authenticated user.&#10;&lt;b&gt;warning&lt;/b&gt;: should only be called after phpCAS::forceAuthentication()&#10;or phpCAS::checkAuthentication().;;d4,1201;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="initializeProxiedService;PHP:Function Name;3200056416;f18;888;5;897;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    initializeProxiedService(CAS_ProxiedService $proxiedService)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Initialize a proxied-service handler with the proxy-ticket it should use.&#10;&lt;b&gt;throws&lt;/b&gt;: CAS_ProxyTicketException If there is a proxy-ticket failure.&#10;The code of the Exception will be one of:&#10;PHPCAS_SERVICE_PT_NO_SERVER_RESPONSE&#10;PHPCAS_SERVICE_PT_BAD_SERVER_RESPONSE&#10;PHPCAS_SERVICE_PT_FAILURE&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    CAS_ProxiedService &lt;b&gt;$proxiedService&lt;/b&gt;: Proxied Service Handler;;d4,889;;b1,5;;m0;;e0;;i0;;o;;k;;l $proxiedService;;pCAS_ProxiedService;;x;;n">
</treenode>
<treenode node="isAuthenticated;PHP:Function Name;3200056416;f18;1126;5;1139;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isAuthenticated()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is called to check if the user is authenticated (previously or by&#10;tickets given in the URL).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   when the user is authenticated.;;d4,1127;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="isInitialized;PHP:Function Name;3200056416;f18;442;5;445;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isInitialized()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Answer whether or not the client or proxy has been initialized;;d4,443;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="isSessionAuthenticated;PHP:Function Name;3200056416;f18;1148;5;1153;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isSessionAuthenticated()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks whether authenticated based on $_SESSION. Useful to avoid&#10;server calls.&#10;&lt;b&gt;since&lt;/b&gt;: 0.4.22 by Brendan Arnold&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if authenticated, false otherwise.;;d4,1149;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="log;PHP:Function Name;3200056416;f18;522;5;544;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    log($str)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Logs a string in debug mode.&#10;&lt;b&gt;private&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: the string to write;;d4,523;;b1,5;;m0;;e0;;i0;;o;;k;;l $str;;p;;x;;n">
</treenode>
<treenode node="logout;PHP:Function Name;3200056416;f18;1405;5;1432;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    logout($params = &quot;&quot;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to logout from CAS.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$params&lt;/b&gt;: an array that contains the optional url and service parameters that will be passed to the CAS server;;d4,1406;;b1,5;;m0;;e0;;i0;;o;;k;;l $params;;p;;x;;n">
</treenode>
<treenode node="logoutWithRedirectService;PHP:Function Name;3200056416;f18;1440;5;1454;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    logoutWithRedirectService($service)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to logout from CAS. Halts by redirecting to the CAS&#10;server.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$service&lt;/b&gt;: a URL that will be transmitted to the CAS server;;d4,1441;;b1,5;;m0;;e0;;i0;;o;;k;;l $service;;p;;x;;n">
</treenode>
<treenode node="logoutWithRedirectServiceAndUrl;PHP:Function Name;3200056416;f18;1494;5;1516;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    logoutWithRedirectServiceAndUrl($service, $url)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to logout from CAS. Halts by redirecting to the CAS&#10;server.&#10;&lt;b&gt;deprecated&lt;/b&gt;: The url parameter has been removed from the CAS server as of&#10;version 3.3.5.1&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$service&lt;/b&gt;: a URL that will be transmitted to the CAS server&#10;    string &lt;b&gt;$url&lt;/b&gt;: a URL that will be transmitted to the CAS server;;d4,1495;;b1,5;;m0;;e0;;i0;;o;;k;;l $service;;p $url;;p;;x;;x;;n">
</treenode>
<treenode node="logoutWithUrl;PHP:Function Name;3200056416;f18;1465;5;1482;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    logoutWithUrl($url)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to logout from CAS. Halts by redirecting to the CAS&#10;server.&#10;&lt;b&gt;deprecated&lt;/b&gt;: The url parameter has been removed from the CAS server as of&#10;version 3.3.5.1&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: a URL that will be transmitted to the CAS server;;d4,1466;;b1,5;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
<treenode node="proxy;PHP:Function Name;3200056416;f18;399;5;435;;;;vpos;;v;;aa;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    proxy(&#10;        $server_version,&#10;        $server_hostname,&#10;        $server_port,&#10;        $server_uri,&#10;        $changeSessionID = true&#10;    )&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    phpCAS proxy initializer.&#10;&lt;b&gt;note&lt;/b&gt;: Only one of the phpCAS::client() and phpCAS::proxy functions should be&#10;called, only once, and before all other methods (except phpCAS::getVersion()&#10;and phpCAS::setDebug()).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$server_version&lt;/b&gt;: the version of the CAS server&#10;    string &lt;b&gt;$server_hostname&lt;/b&gt;: the hostname of the CAS server&#10;    string &lt;b&gt;$server_port&lt;/b&gt;: the port the CAS server is running on&#10;    string &lt;b&gt;$server_uri&lt;/b&gt;: the URI the CAS server is responding on&#10;    bool &lt;b&gt;$changeSessionID&lt;/b&gt;: Allow phpCAS to change the session_id (Single Sign Out/handleLogoutRequests is based on that change)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   newly created CAS_Client object;;d6,405;;b1,5;;m0;;e0;;i0;;o;;k;;l $server_version;;p $server_hostname;;p $server_port;;p $server_uri;;p $changeSessionID;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="renewAuthentication;PHP:Function Name;3200056416;f18;1106;5;1118;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    renewAuthentication()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is called to renew the authentication.;;d4,1107;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="retrievePT;PHP:Function Name;3200056416;f18;1579;5;1588;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    retrievePT($target_service, &amp;$err_code, &amp;$err_msg)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Retrieve a Proxy Ticket from the CAS server.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$target_service&lt;/b&gt;: Url string of service to proxy&#10;    string: &amp;$err_code      error code&#10;    string: &amp;$err_msg       error message&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Proxy Ticket;;d4,1580;;b1,5;;m0;;e0;;i0;;o;;k;;l $target_service;;p;;p;;p;;x;;x;;x;;n">
</treenode>
<treenode node="serviceMail;PHP:Function Name;3200056416;f18;948;5;961;;;;vpos;;v;;aobject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    serviceMail($url, $service, $flags, &amp;$err_code, &amp;$err_msg, &amp;$pt)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to access an IMAP/POP3/NNTP service.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: a string giving the URL of the service, including the mailing box for IMAP URLs, as accepted by imap_open().&#10;    string &lt;b&gt;$service&lt;/b&gt;: a string giving for CAS retrieve Proxy ticket&#10;    string &lt;b&gt;$flags&lt;/b&gt;: options given to imap_open().&#10;    string: &amp;$err_code an error code Possible values are PHPCAS_SERVICE_OK (on success), PHPCAS_SERVICE_PT_NO_SERVER_RESPONSE, PHPCAS_SERVICE_PT_BAD_SERVER_RESPONSE, PHPCAS_SERVICE_PT_FAILURE, PHPCAS_SERVICE_NOT_AVAILABLE.&#10;    string: &amp;$err_msg  an error message on failure&#10;    string: &amp;$pt       the Proxy Ticket (PT) retrieved from the CAS server to access the URL on success, false on error).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   IMAP stream on success, false otherwise (in this later case, $err_code gives the reason why it failed and $err_msg contains an error message).;;d4,949;;b1,5;;m0;;e0;;i0;;o;;k;;l $url;;p $service;;p $flags;;p;;p;;p;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="serviceWeb;PHP:Function Name;3200056416;f18;914;5;927;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    serviceWeb($url, &amp;$err_code, &amp;$output)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to access an HTTP[S] service.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: the service to access.&#10;    string: &amp;$err_code an error code Possible values are PHPCAS_SERVICE_OK (on success), PHPCAS_SERVICE_PT_NO_SERVER_RESPONSE, PHPCAS_SERVICE_PT_BAD_SERVER_RESPONSE, PHPCAS_SERVICE_PT_FAILURE, PHPCAS_SERVICE_NOT_AVAILABLE.&#10;    string: &amp;$output   the output of the service (also used to give an error message on failure).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true on success, false otherwise (in this later case, $err_code gives the reason why it failed and $output contains an error message).;;d4,915;;b1,5;;m0;;e0;;i0;;o;;k;;l $url;;p;;p;;p;;x;;x;;x;;n">
</treenode>
<treenode node="setCacheTimesForAuthRecheck;PHP:Function Name;3200056416;f18;981;5;990;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCacheTimesForAuthRecheck($n)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the times authentication will be cached before really accessing the&#10;CAS server in gateway mode:&#10;- -1: check only once, and then never again (until you pree login)&#10;- 0: always check&#10;- n: check every &quot;n&quot; time&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$n&lt;/b&gt;: an integer.;;d4,982;;b1,5;;m0;;e0;;i0;;o;;k;;l $n;;p;;x;;n">
</treenode>
<treenode node="setCasAttributeParserCallback;PHP:Function Name;3200056416;f18;1001;5;1006;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCasAttributeParserCallback($function, array $additionalArgs = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set a callback function to be run when receiving CAS attributes&#10;The callback function will be passed an $success_elements&#10;payload of the response (\DOMElement) as its first parameter.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$function&lt;/b&gt;: Callback function&#10;    array &lt;b&gt;$additionalArgs&lt;/b&gt;: optional array of arguments;;d4,1002;;b1,5;;m0;;e0;;i0;;o;;k;;l $function;;p $additionalArgs;;p;;x;;x;;n">
</treenode>
<treenode node="setCasClient;PHP:Function Name;3200056416;f18;1795;5;1798;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCasClient(\CAS_Client $client)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    For testing purposes, use this method to set the client to a test double;;d4,1796;;b1,5;;m0;;e0;;i0;;o;;k;;lclient;;pCAS_Client;;x;;n">
</treenode>
<treenode node="setCasServerCACert;PHP:Function Name;3200056416;f18;1597;5;1609;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCasServerCACert($cert, $validate_cn = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the certificate of the CAS server CA and if the CN should be properly&#10;verified.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$cert&lt;/b&gt;: CA certificate file name&#10;    bool &lt;b&gt;$validate_cn&lt;/b&gt;: Validate CN in certificate (default true);;d4,1598;;b1,5;;m0;;e0;;i0;;o;;k;;l $cert;;p $validate_cn;;p;;x;;x;;n">
</treenode>
<treenode node="setDebug;PHP:Function Name;3200056416;f18;463;5;491;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDebug($filename = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set/unset debug mode&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$filename&lt;/b&gt;: the name of the file used for logging, or false to stop debugging.;;d4,464;;b1,5;;m0;;e0;;i0;;o;;k;;l $filename;;p;;x;;n">
</treenode>
<treenode node="setExtraCurlOption;PHP:Function Name;3200056416;f18;1649;5;1656;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setExtraCurlOption($key, $value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Change CURL options.&#10;CURL is used to connect through HTTPS to CAS server&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$key&lt;/b&gt;: the option key&#10;    string &lt;b&gt;$value&lt;/b&gt;: the value to set;;d4,1650;;b1,5;;m0;;e0;;i0;;o;;k;;l $key;;p $value;;p;;x;;x;;n">
</treenode>
<treenode node="setFixedCallbackURL;PHP:Function Name;3200056416;f18;1525;5;1537;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFixedCallbackURL($url = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the fixed URL that will be used by the CAS server to transmit the&#10;PGT. When this method is not called, a phpCAS script uses its own URL&#10;for the callback.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: the URL;;d4,1526;;b1,5;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
<treenode node="setFixedServiceURL;PHP:Function Name;3200056416;f18;1545;5;1557;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFixedServiceURL($url)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the fixed URL that will be set as the CAS service parameter. When this&#10;method is not called, a phpCAS script uses its own URL.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: the URL;;d4,1546;;b1,5;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
<treenode node="setHTMLFooter;PHP:Function Name;3200056416;f18;749;5;758;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setHTMLFooter($footer)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method sets the HTML footer used for all outputs.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$footer&lt;/b&gt;: the HTML footer.;;d4,750;;b1,5;;m0;;e0;;i0;;o;;k;;l $footer;;p;;x;;n">
</treenode>
<treenode node="setHTMLHeader;PHP:Function Name;3200056416;f18;733;5;742;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setHTMLHeader($header)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method sets the HTML header used for all outputs.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$header&lt;/b&gt;: the HTML header.;;d4,734;;b1,5;;m0;;e0;;i0;;o;;k;;l $header;;p;;x;;n">
</treenode>
<treenode node="setLang;PHP:Function Name;3200056416;f18;689;5;698;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setLang($lang)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to set the language used by phpCAS.&#10;&lt;b&gt;sa&lt;/b&gt;: PHPCAS_LANG_FRENCH, PHPCAS_LANG_ENGLISH&#10;&lt;b&gt;note&lt;/b&gt;: Can be called only once.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$lang&lt;/b&gt;: string representing the language.;;d4,690;;b1,5;;m0;;e0;;i0;;o;;k;;l $lang;;p;;x;;n">
</treenode>
<treenode node="setNoCasServerValidation;PHP:Function Name;3200056416;f18;1614;5;1622;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setNoCasServerValidation()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set no SSL validation for the CAS server.;;d4,1615;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="setNoClearTicketsFromUrl;PHP:Function Name;3200056416;f18;1631;5;1638;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setNoClearTicketsFromUrl()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Disable the removal of a CAS-Ticket from the URL when authenticating&#10;DISABLING POSES A SECURITY RISK:&#10;We normally remove the ticket by an additional redirect as a security&#10;precaution to prevent a ticket in the HTTP_REFERRER or be carried over in&#10;the URL parameter;;d4,1632;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="setPGTStorage;PHP:Function Name;3200056416;f18;775;5;787;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPGTStorage($storage)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method can be used to set a custom PGT storage object.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    CAS_PGTStorage &lt;b&gt;$storage&lt;/b&gt;: a PGT storage object that inherits from the CAS_PGTStorage class;;d4,776;;b1,5;;m0;;e0;;i0;;o;;k;;l $storage;;p;;x;;n">
</treenode>
<treenode node="setPGTStorageDb;PHP:Function Name;3200056416;f18;804;5;821;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPGTStorageDb(&#10;        $dsn_or_pdo,&#10;        $username = &apos;&apos;,&#10;        $password = &apos;&apos;,&#10;        $table = &apos;&apos;,&#10;        $driver_options = null&#10;    )&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to tell phpCAS to store the response of the&#10;CAS server to PGT requests in a database.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$dsn_or_pdo&lt;/b&gt;: a dsn string to use for creating a PDO object or a PDO object&#10;    string &lt;b&gt;$username&lt;/b&gt;: the username to use when connecting to the database&#10;    string &lt;b&gt;$password&lt;/b&gt;: the password to use when connecting to the database&#10;    string &lt;b&gt;$table&lt;/b&gt;: the table to use for storing and retrieving PGT&apos;s&#10;    string &lt;b&gt;$driver_options&lt;/b&gt;: any driver options to use when connecting to the database;;d6,810;;b1,5;;m0;;e0;;i0;;o;;k;;l $dsn_or_pdo;;p $username;;p $password;;p $table;;p $driver_options;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="setPGTStorageFile;PHP:Function Name;3200056416;f18;829;5;841;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPGTStorageFile($path = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to tell phpCAS to store the response of the&#10;CAS server to PGT requests onto the filesystem.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$path&lt;/b&gt;: the path where the PGT&apos;s should be stored;;d4,830;;b1,5;;m0;;e0;;i0;;o;;k;;l $path;;p;;x;;n">
</treenode>
<treenode node="setPostAuthenticateCallback;PHP:Function Name;3200056416;f18;1025;5;1030;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPostAuthenticateCallback($function, array $additionalArgs = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set a callback function to be run when a user authenticates.&#10;The callback function will be passed a $logoutTicket as its first&#10;parameter, followed by any $additionalArgs you pass. The $logoutTicket&#10;parameter is an opaque string that can be used to map the session-id to&#10;logout request in order to support single-signout in applications that&#10;manage their own sessions (rather than letting phpCAS start the session).&#10;phpCAS::forceAuthentication() will always exit and forward client unless&#10;they are already authenticated. To perform an action at the moment the user&#10;logs in (such as registering an account, performing logging, etc), register&#10;a callback function here.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$function&lt;/b&gt;: Callback function&#10;    array &lt;b&gt;$additionalArgs&lt;/b&gt;: optional array of arguments;;d4,1026;;b1,5;;m0;;e0;;i0;;o;;k;;l $function;;p $additionalArgs;;p;;x;;x;;n">
</treenode>
<treenode node="setServerLoginURL;PHP:Function Name;3200056416;f18;1284;5;1296;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setServerLoginURL($url = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the login URL of the CAS server.&#10;&lt;b&gt;since&lt;/b&gt;: 0.4.21 by Wyman Chan&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: the login URL;;d4,1285;;b1,5;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
<treenode node="setServerLogoutURL;PHP:Function Name;3200056416;f18;1385;5;1397;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setServerLogoutURL($url = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the logout URL of the CAS server.&#10;&lt;b&gt;since&lt;/b&gt;: 0.4.21 by Wyman Chan&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: the logout URL;;d4,1386;;b1,5;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
<treenode node="setServerProxyValidateURL;PHP:Function Name;3200056416;f18;1332;5;1344;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setServerProxyValidateURL($url = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the proxyValidate URL of the CAS server.&#10;Used for all CAS versions of proxy URL validations&#10;Examples:&#10;CAS 1.0 http://www.exemple.com/&#10;CAS 2.0 http://www.exemple.com/proxyValidate&#10;CAS 3.0 http://www.exemple.com/p3/proxyValidate&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: the proxyValidate URL;;d4,1333;;b1,5;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
<treenode node="setServerSamlValidateURL;PHP:Function Name;3200056416;f18;1351;5;1363;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setServerSamlValidateURL($url = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the samlValidate URL of the CAS server.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: the samlValidate URL;;d4,1352;;b1,5;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
<treenode node="setServerServiceValidateURL;PHP:Function Name;3200056416;f18;1308;5;1320;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setServerServiceValidateURL($url = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the serviceValidate URL of the CAS server.&#10;Used for all CAS versions of URL validations.&#10;Examples:&#10;CAS 1.0 http://www.exemple.com/validate&#10;CAS 2.0 http://www.exemple.com/validateURL&#10;CAS 3.0 http://www.exemple.com/p3/serviceValidate&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$url&lt;/b&gt;: the serviceValidate URL;;d4,1309;;b1,5;;m0;;e0;;i0;;o;;k;;l $url;;p;;x;;n">
</treenode>
<treenode node="setSingleSignoutCallback;PHP:Function Name;3200056416;f18;1044;5;1049;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setSingleSignoutCallback($function, array $additionalArgs = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set a callback function to be run when a single-signout request is&#10;received. The callback function will be passed a $logoutTicket as its&#10;first parameter, followed by any $additionalArgs you pass. The&#10;$logoutTicket parameter is an opaque string that can be used to map a&#10;session-id to the logout request in order to support single-signout in&#10;applications that manage their own sessions (rather than letting phpCAS&#10;start and destroy the session).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$function&lt;/b&gt;: Callback function&#10;    array &lt;b&gt;$additionalArgs&lt;/b&gt;: optional array of arguments;;d4,1045;;b1,5;;m0;;e0;;i0;;o;;k;;l $function;;p $additionalArgs;;p;;x;;x;;n">
</treenode>
<treenode node="setVerbose;PHP:Function Name;3200056416;f18;500;5;503;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setVerbose($verbose)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Enable verbose errors messages in the website output&#10;This is a security relevant since internal status info may leak an may&#10;help an attacker. Default is therefore false&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$verbose&lt;/b&gt;: enable verbose output;;d4,501;;b1,5;;m0;;e0;;i0;;o;;k;;l $verbose;;p;;x;;n">
</treenode>
<treenode node="trace;PHP:Function Name;3200056416;f18;589;5;593;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    trace($str)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to log something in debug mode.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: string to log;;d4,590;;b1,5;;m0;;e0;;i0;;o;;k;;l $str;;p;;x;;n">
</treenode>
<treenode node="traceBegin;PHP:Function Name;3200056416;f18;599;5;633;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    traceBegin()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to indicate the start of the execution of a function&#10;in debug mode.;;d4,600;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="traceEnd;PHP:Function Name;3200056416;f18;641;5;658;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    traceEnd($res = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to indicate the end of the execution of a function in&#10;debug mode.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$res&lt;/b&gt;: the result of the function;;d4,642;;b1,5;;m0;;e0;;i0;;o;;k;;l $res;;p;;x;;n">
</treenode>
<treenode node="traceExit;PHP:Function Name;3200056416;f18;663;5;670;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    traceExit()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used to indicate the end of the execution of the program;;d4,664;;b1,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_PHPCAS_CLIENT;PHP:Var Name;3200056416;f32;295;47;295;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This variable is used by the interface class phpCAS.&#10;&lt;b&gt;hideinitializer&lt;/b&gt;;;d-1,-1;;b3,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_PHPCAS_DEBUG;PHP:Var Name;3200056416;f26;310;40;310;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This variable is used to store phpCAS debug mode.&#10;&lt;b&gt;hideinitializer&lt;/b&gt;;;d-1,-1;;b3,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_PHPCAS_INIT_CALL;PHP:Var Name;3200056416;f26;303;44;303;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This variable is used to store where the initializer is called from&#10;(to print a comprehensive error in case of multiple calls).&#10;&lt;b&gt;hideinitializer&lt;/b&gt;;;d-1,-1;;b3,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="$_PHPCAS_VERBOSE;PHP:Var Name;3200056416;f24;319;40;319;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This variable is used to enable verbose mode&#10;This pevents debug info to be show to the user. Since it&apos;s a security&#10;feature the default is false&#10;&lt;b&gt;hideinitializer&lt;/b&gt;;;d-1,-1;;b3,5;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="CAS_autoload;PHP:Function Name;3948789741;f0;23;1;78;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    CAS_autoload($class)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Autoload a class&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$class&lt;/b&gt;: Classname to load;;d0,24;;b0,0;;m0;;e0;;i0;;o;;k;;l $class;;p;;x;;n">
</treenode>
<treenode node="F_TSVQuestionImporter;PHP:Function Name;1480242768;f0;154;1;480;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_TSVQuestionImporter($tsvfile)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Import questions from TSV file (tab delimited text).&#10;The format of TSV is the same obtained by exporting data from TCExam interface.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$tsvfile&lt;/b&gt;: (string) TSV (tab delimited text) file name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   TRUE in case of success, FALSE otherwise;;d0,155;;b0,0;;m0;;e0;;i0;;o;;k;;l $tsvfile;;p;;x;;n">
</treenode>
<treenode node="F_addLogAnswers;PHP:Function Name;1489315705;f0;871;1;896;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_addLogAnswers($testlog_id, $answers_ids)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add specified answers on tce_tests_logs_answer table.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$testlog_id&lt;/b&gt;: (int) testlog ID&#10;     &lt;b&gt;$answers_ids&lt;/b&gt;: (array) array of answer IDs to add&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true in case of success, false otherwise;;d0,872;;b0,0;;m0;;e0;;i0;;o;;k;;l $testlog_id;;p $answers_ids;;p;;x;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;873;42;873;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_addQuestionAnswers;PHP:Function Name;1489315705;f0;1343;1;1429;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_addQuestionAnswers($testlog_id, $question_id, $question_type, $num_answers, $firsttest, $testdata)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add answers to selected question.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$testlog_id&lt;/b&gt;: (int) testlog ID.&#10;     &lt;b&gt;$question_id&lt;/b&gt;: (int) question ID.&#10;     &lt;b&gt;$question_type&lt;/b&gt;: (int) type of question.&#10;     &lt;b&gt;$num_answers&lt;/b&gt;: (int) number of alternative answers to display.&#10;     &lt;b&gt;$firsttest&lt;/b&gt;: (int) ID of first test testuser_id.&#10;     &lt;b&gt;$testdata&lt;/b&gt;: (array) array of test data.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   TRUE in case of success, FALSE otherwise.;;d0,1344;;b0,0;;m0;;e0;;i0;;o;;k;;l $testlog_id;;p $question_id;;p $question_type;;p $num_answers;;p $firsttest;;p $testdata;;p;;x;;x;;x;;x;;x;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;1345;42;1345;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_altLogin;PHP:Function Name;806538576;f0;37;1;240;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_altLogin()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Try various external Login Systems.&#10;(SSL, HTTP-BASIC, CAS, SHIBBOLETH, RADIUS, LDAP, CUSTOM)&#10;&lt;b&gt;since&lt;/b&gt;: 2012-06-05&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of user&apos;s data for successful login, false otherwise;;d0,38;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="../../shared/cas/CAS.php;PHP:PHP Include;806538576;f22;91;46;91;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/config/tce_cas.php;PHP:PHP Include;806538576;f18;89;49;89;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/config/tce_httpbasic.php;PHP:PHP Include;806538576;f18;68;55;68;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/config/tce_ldap.php;PHP:PHP Include;806538576;f22;171;54;171;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/config/tce_radius.php;PHP:PHP Include;806538576;f22;141;56;141;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/config/tce_shibboleth.php;PHP:PHP Include;806538576;f18;116;56;116;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/config/tce_ssl.php;PHP:PHP Include;806538576;f18;45;49;45;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/radius/radius.class.php;PHP:PHP Include;806538576;f26;143;62;143;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../config/tce_config.php;PHP:PHP Include;806538576;f18;40;42;40;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_are_files_writable;PHP:Function Name;3055214671;f0;387;1;403;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_are_files_writable($files)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if the files are writable by the current user.&#10;NOTE: only works on linux-like OSs.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$files&lt;/b&gt;: flies to check&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true in case of success, false otherwise;;d38,387;;b0,0;;m0;;e0;;i0;;o;;k;;l $files;;p;;x;;n">
</treenode>
<treenode node="F_checkTestStatus;PHP:Function Name;1489315705;f0;373;1;459;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_checkTestStatus($user_id, $test_id, $duration)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check and returns specific test status for the specified user.&lt;br&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$user_id&lt;/b&gt;: (int) user ID&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID&#10;     &lt;b&gt;$duration&lt;/b&gt;: (int) test duration in seconds&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of (test_status_code, testuser_id). test_status_code: &lt;ul&gt;&lt;li&gt;0 = the test generation process is started but not completed;s&lt;/li&gt;&lt;li&gt;1 = the test has been successfully created;s&lt;/li&gt;&lt;li&gt;2 = all questions have been displayed to the user;s&lt;/li&gt;&lt;li&gt;3 = all questions have been answered;s&lt;/li&gt;&lt;li&gt;4 = test locked (for timeout);s&lt;/li&gt;&lt;li&gt;5 or more = old version of repeated test;s&lt;/li&gt;&lt;/ul&gt;;;d0,374;;b0,0;;m0;;e0;;i0;;o;;k;;l $user_id;;p $test_id;;p $duration;;p;;x;;x;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;375;42;375;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_check_fields_format;PHP:Function Name;1957715841;f0;122;1;152;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_check_fields_format($formfields)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check fields format using regular expression comparisons.&lt;br&gt;&#10;Returns a string containing a list of wrong fields (comma separated).&#10;NOTE:&#10;to check a field create a new hidden field with the same name starting with &apos;x_&apos;&#10;An example powerful regular expression for email check is:&#10;^([a-zA-Z0-9_\.\-]+)&#10;@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$formfields&lt;/b&gt;: (string) input array containing form fields&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing a list of wrongfields (if any);;d0,123;;b0,0;;m0;;e0;;i0;;o;;k;;l $formfields;;p;;x;;n">
</treenode>
<treenode node="F_check_form_fields;PHP:Function Name;1957715841;f0;159;1;179;;;;vpos;;v;;afalse;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_check_form_fields()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check Form Fields.&#10;see: F_check_required_fields, F_check_fields_format&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   in case of error, true otherwise;;d0,160;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1957715841;f18;161;42;161;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_check_required_fields;PHP:Function Name;1957715841;f0;79;1;108;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_check_required_fields($formfields)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check Required Form Fields.&lt;br&gt;&#10;Returns a string containing a list of missing fields (comma separated).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$formfields&lt;/b&gt;: (string) input array containing form fields&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing a list of missing fields (if any);;d0,80;;b0,0;;m0;;e0;;i0;;o;;k;;l $formfields;;p;;x;;n">
</treenode>
<treenode node="F_check_unique;PHP:Function Name;993074321;f0;114;1;138;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_check_unique($table, $where, $fieldname = false, $fieldid = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if specified fields are unique on table.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$table&lt;/b&gt;: (string) table name&#10;     &lt;b&gt;$where&lt;/b&gt;: (string) SQL where clause&#10;     &lt;b&gt;$fieldname&lt;/b&gt;: (mixed) name of table column to check&#10;     &lt;b&gt;$fieldid&lt;/b&gt;: (mixed) ID of table row to check&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if unique, false otherwise;;d0,115;;b0,0;;m0;;e0;;i0;;o;;k;;l $table;;p $where;;p $fieldname;;p $fieldid;;p;;x;;x;;x;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;993074321;f18;116;42;116;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_close_button;PHP:Function Name;1957715841;f0;202;1;214;;;;vpos;;v;;aXHTML;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_close_button($onclick = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns XHTML code string to display a window close button&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$onclick&lt;/b&gt;: (string) additional javascript code to execute before closing the window.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   code string;;d0,203;;b0,0;;m0;;e0;;i0;;o;;k;;l $onclick;;p;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1957715841;f18;204;42;204;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_compact_string;PHP:Function Name;993074321;f0;168;1;182;;;;vpos;;v;;aconverted;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_compact_string($string, $dquotes = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Remove the following characters:&#10;&lt;ul&gt;&#10;&lt;li&gt;&quot;\t&quot; (ASCII 9 (0x09)), a tab.&lt;/li&gt;&#10;&lt;li&gt;&quot;\n&quot; (ASCII 10 (0x0A)), a new line (line feed)&lt;/li&gt;&#10;&lt;li&gt;&quot;\r&quot; (ASCII 13 (0x0D)), a carriage return&lt;/li&gt;&#10;&lt;li&gt;&quot;\0&quot; (ASCII 0 (0x00)), the NUL-byte&lt;/li&gt;&#10;&lt;li&gt;&quot;\x0B&quot; (ASCII 11 (0x0B)), a vertical tab&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$string&lt;/b&gt;: (string) input string to convert&#10;     &lt;b&gt;$dquotes&lt;/b&gt;: (boolean) If true add slash in fron of double quotes;s&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   string;;d0,169;;b0,0;;m0;;e0;;i0;;o;;k;;l $string;;p $dquotes;;p;;x;;x;;n">
</treenode>
<treenode node="F_countUserTest;PHP:Function Name;1489315705;f0;361;1;364;;;;vpos;;v;;aretried;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_countUserTest($user_id, $test_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Count the number times of retries.&lt;br&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$user_id&lt;/b&gt;: (int) user ID&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   times;;d0,362;;b0,0;;m0;;e0;;i0;;o;;k;;l $user_id;;p $test_id;;p;;x;;x;;n">
</treenode>
<treenode node="F_count_executed_tests;PHP:Function Name;1489315705;f0;1017;1;1035;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_count_executed_tests($startdate, $enddate)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the number of executed tests on the specified time interval.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$startdate&lt;/b&gt;: (string) Star date-time interval.&#10;     &lt;b&gt;$enddate&lt;/b&gt;: (string) End  date-time interval.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   number of executed tests.;;d0,1018;;b0,0;;m0;;e0;;i0;;o;;k;;l $startdate;;p $enddate;;p;;x;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;1019;42;1019;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_count_rows;PHP:Function Name;993074321;f0;36;1;51;;;;vpos;;v;;anumber;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_count_rows($dbtable, $where = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Count rows of the given table.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$dbtable&lt;/b&gt;: (string) database table name&#10;     &lt;b&gt;$where&lt;/b&gt;: (string) optional where SQL clause (including the WHERE keyword).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of rows;;d0,37;;b0,0;;m0;;e0;;i0;;o;;k;;l $dbtable;;p $where;;p;;x;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;993074321;f18;39;42;39;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_createMediaDir;PHP:Function Name;2992992028;f0;124;1;140;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_createMediaDir($dirname)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Create a new media directory inside the cache&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$dirname&lt;/b&gt;: (string) the directory name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   in case of success, false otherwise;;d0,125;;b0,0;;m0;;e0;;i0;;o;;k;;l $dirname;;p;;x;;n">
</treenode>
<treenode node="F_createTest;PHP:Function Name;1489315705;f0;1057;1;1331;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_createTest($test_id, $user_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Create user&apos;s test and returns TRUE on success.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID.&#10;     &lt;b&gt;$user_id&lt;/b&gt;: (int) user ID.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   TRUE in case of success, FALSE otherwise.;;d0,1058;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p $user_id;;p;;x;;x;;n">
<treenode node="../../shared/code/tce_functions_tcecode.php;PHP:PHP Include;1489315705;f18;1060;61;1060;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;1059;42;1059;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_create_database;PHP:Function Name;3055214671;f0;166;1;236;;;;vpos;;v;;adatabase;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_create_database($dbtype, $host, $port, $user, $password, $database, $table_prefix, $drop, $create)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Create new database. Existing database will be dropped.&#10;Oracle databases must be created manually (create the tcexam user and set the database name equal to user name)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$host&lt;/b&gt;: Database server path. It can also include a port number. e.g. &quot;hostname:port&quot; or a path to a local socket e.g. &quot;:/path/to/socket&quot; for the localhost. Note: Whenever you specify &quot;localhost&quot; or &quot;localhost:port&quot; as server, the MySQL client library will override this and try to connect to a local socket (named pipe on Windows). If you want to use TCP/IP, use &quot;127.0.0.1&quot; instead of &quot;localhost&quot;. If the MySQL client library tries to connect to the wrong local socket, you should set the correct path as mysql.default_host in your PHP configuration and leave the server field blank.&#10;    string &lt;b&gt;$dbtype&lt;/b&gt;: database type (&apos;MYSQL&apos; or &apos;POSTGREQL&apos;)&#10;    string &lt;b&gt;$host&lt;/b&gt;: database host&#10;    string &lt;b&gt;$port&lt;/b&gt;: database port&#10;    string &lt;b&gt;$user&lt;/b&gt;: Name of the user that owns the server process.&#10;    string &lt;b&gt;$password&lt;/b&gt;: Password of the user that owns the server process.&#10;    string &lt;b&gt;$database&lt;/b&gt;: Database name.&#10;    string &lt;b&gt;$table_prefix&lt;/b&gt;: prefix for tables&#10;    boolean &lt;b&gt;$drop&lt;/b&gt;: if true drop existing database&#10;    boolean &lt;b&gt;$create&lt;/b&gt;: if true creates new database&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   link identifier on success, FALSE otherwise.;;d110,166;;b0,0;;m0;;e0;;i0;;o;;k;;ldbtype;;phost;;pport;;puser;;ppassword;;pdatabase;;ptable_prefix;;pdrop;;pcreate;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_db_affected_rows;PHP:Function Name;911383484;f0;123;1;126;;316882688;f0;115;1;118;;2219727088;f0;150;1;153;;2706550189;f0;119;1;122;;;;vpos;;v;;aNumber;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_db_affected_rows($link_identifier, $result)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns number of rows (tuples) affected by the last INSERT, UPDATE or DELETE query associated with link_identifier.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$link_identifier&lt;/b&gt;: (resource) database link identifier.&#10;     &lt;b&gt;$result&lt;/b&gt;: (resource) result resource to the query result [UNUSED].&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of rows.;;d0,120;;b0,0;;m0;;e0;;i0;;o;;k;;l $link_identifier;;p $result;;p;;x;;x;;n">
</treenode>
<treenode node="F_db_close;PHP:Function Name;911383484;f0;64;1;67;;316882688;f0;59;1;62;;2219727088;f0;65;1;68;;2706550189;f0;60;1;63;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_db_close($link_identifier)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Closes the non-persistent connection to a database associated with the given connection resource.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$link_identifier&lt;/b&gt;: (resource) database link identifier.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   TRUE on success or FALSE on failure;;d0,61;;b0,0;;m0;;e0;;i0;;o;;k;;l $link_identifier;;p;;x;;n">
</treenode>
<treenode node="F_db_connect;PHP:Function Name;911383484;f0;43;1;57;;316882688;f0;44;1;52;;2219727088;f0;44;1;58;;2706550189;f0;43;1;53;;;;vpos;;v;;aMySQL;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_db_connect($host = &apos;localhost&apos;, $port = &apos;3306&apos;, $username = &apos;root&apos;, $password = &apos;&apos;, $database = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Open a connection to a MySQL Server and select a database.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$host&lt;/b&gt;: (string) database server host name.&#10;     &lt;b&gt;$port&lt;/b&gt;: (string) database connection port&#10;     &lt;b&gt;$username&lt;/b&gt;: (string) Name of the user that owns the server process.&#10;     &lt;b&gt;$password&lt;/b&gt;: (string) Password of the user that owns the server process.&#10;     &lt;b&gt;$database&lt;/b&gt;: (string) Database name.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   link identifier on success, or FALSE on failure.;;d0,44;;b0,0;;m0;;e0;;i0;;o;;k;;l $host;;p $port;;p $username;;p $password;;p $database;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_db_datetime_diff_seconds;PHP:Function Name;911383484;f0;166;1;169;;316882688;f0;150;1;153;;2219727088;f0;188;1;191;;2706550189;f0;150;1;153;;;;vpos;;v;;aSQL;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_db_datetime_diff_seconds($start_date_field, $end_date_field)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the SQL string to calculate the difference in seconds between to datetime fields.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   query string;;d0,151;;b0,0;;m0;;e0;;i0;;o;;k;;lstart_date_field;;pend_date_field;;p;;x;;x;;n">
</treenode>
<treenode node="F_db_error;PHP:Function Name;911383484;f0;73;1;80;;316882688;f0;68;1;71;;2219727088;f0;74;1;78;;2706550189;f0;69;1;76;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_db_error($link_identifier = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the text of the error message from previous database operation&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   error message.;;d0,70;;b0,0;;m0;;e0;;i0;;o;;k;;llink_identifier;;p;;x;;n">
</treenode>
<treenode node="F_db_fetch_array;PHP:Function Name;911383484;f0;101;1;104;;316882688;f0;93;1;96;;2219727088;f0;116;1;125;;2706550189;f0;97;1;100;;;;vpos;;v;;aReturns;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_db_fetch_array($result)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fetch a result row as an associative and numeric array.&#10;Note: This function sets NULL fields to PHP NULL value.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$result&lt;/b&gt;: (resource) result resource to the query result.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   an array that corresponds to the fetched row, or FALSE if there are no more rows.;;d0,98;;b0,0;;m0;;e0;;i0;;o;;k;;l $result;;p;;x;;n">
</treenode>
<treenode node="F_db_fetch_assoc;PHP:Function Name;911383484;f0;112;1;115;;316882688;f0;104;1;107;;2219727088;f0;133;1;142;;2706550189;f0;108;1;111;;;;vpos;;v;;aReturns;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_db_fetch_assoc($result)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fetch a result row as an associative array.&#10;Note: This function sets NULL fields to PHP NULL value.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$result&lt;/b&gt;: (resource) result resource to the query result.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   an array that corresponds to the fetched row, or FALSE if there are no more rows.;;d0,109;;b0,0;;m0;;e0;;i0;;o;;k;;l $result;;p;;x;;n">
</treenode>
<treenode node="F_db_getUTCoffset;PHP:Function Name;993074321;f0;521;1;526;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_db_getUTCoffset($timezone)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the UTC time offset yo be used with CONVERT_TZ function&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$timezone&lt;/b&gt;: (string) current user timezone&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   UTC time offset (+HH:mm);;d0,522;;b0,0;;m0;;e0;;i0;;o;;k;;l $timezone;;p;;x;;n">
</treenode>
<treenode node="F_db_insert_id;PHP:Function Name;911383484;f0;145;1;160;;316882688;f0;137;1;144;;2219727088;f0;174;1;182;;2706550189;f0;141;1;144;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_db_insert_id($link_identifier, $tablename = &apos;&apos;, $fieldname = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the auto generated id used in the last query.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$link_identifier&lt;/b&gt;: (resource) database link identifier.&#10;     &lt;b&gt;$tablename&lt;/b&gt;: (string) Table name. (unused here but required for other DAL).&#10;     &lt;b&gt;$fieldname&lt;/b&gt;: (string) Field name (column name). (unused here but required for other DAL).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   ID generated from the last INSERT operation.;;d0,142;;b0,0;;m0;;e0;;i0;;o;;k;;l $link_identifier;;p $tablename;;p $fieldname;;p;;x;;x;;x;;n">
</treenode>
<treenode node="F_db_num_rows;PHP:Function Name;911383484;f0;133;1;136;;316882688;f0;125;1;128;;2219727088;f0;160;1;165;;2706550189;f0;129;1;132;;;;vpos;;v;;aNumber;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_db_num_rows($result)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get number of rows in result.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$result&lt;/b&gt;: (resource) result resource to the query result.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of affected rows.;;d0,130;;b0,0;;m0;;e0;;i0;;o;;k;;l $result;;p;;x;;n">
</treenode>
<treenode node="F_db_query;PHP:Function Name;911383484;f0;88;1;93;;316882688;f0;80;1;85;;2219727088;f0;87;1;108;;2706550189;f0;84;1;89;;;;vpos;;v;;afalse;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_db_query($query, $link_identifier)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sends a query to the currently active database on the server that&apos;s associated with the specified link identifier.&lt;br&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$query&lt;/b&gt;: (string) The query tosend. The query string should not end with a semicolon.&#10;     &lt;b&gt;$link_identifier&lt;/b&gt;: (resource) database link identifier.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   in case of error, TRUE or resource-identifier in case of success.;;d0,85;;b0,0;;m0;;e0;;i0;;o;;k;;l $query;;p $link_identifier;;p;;x;;x;;n">
</treenode>
<treenode node="F_decodeBase32;PHP:Function Name;791254060;f0;52;1;74;;;;vpos;;v;;aDecoded;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_decodeBase32($code)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Decode a Base32 encoded string.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$code&lt;/b&gt;: (string) Base32 code to be decoded.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   key.;;d0,53;;b0,0;;m0;;e0;;i0;;o;;k;;l $code;;p;;x;;n">
</treenode>
<treenode node="F_decodeOMRPage;PHP:Function Name;243164721;f0;86;1;210;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_decodeOMRPage($image)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Decode a single OMR Page and return data array.&#10;This function requires ImageMagick library and zbarimg (http://zbar.sourceforge.net/).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$image&lt;/b&gt;: (string) image file to be decoded (scanned OMR page at 200 DPI with full color range).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of answers data or false in case of error.;;d0,87;;b0,0;;m0;;e0;;i0;;o;;k;;l $image;;p;;x;;n">
</treenode>
<treenode node="F_decodeOMRTestData;PHP:Function Name;243164721;f0;49;1;60;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_decodeOMRTestData($str)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Decode OMR test data string (read from QR-Code) as array.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$str&lt;/b&gt;: (string) string to be decoded.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   with test data (0 =&gt; test_id, n =&gt; array(0 =&gt; question_n_ID, 1 =&gt; array(answers_IDs)), or false in case of error.;;d0,50;;b0,0;;m0;;e0;;i0;;o;;k;;l $str;;p;;x;;n">
</treenode>
<treenode node="F_decodeOMRTestDataQRCode;PHP:Function Name;243164721;f0;68;1;78;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_decodeOMRTestDataQRCode($image)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Read QR-Code from OMR page and return Test data.&#10;This function uses the external application zbarimg (http://zbar.sourceforge.net/).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$image&lt;/b&gt;: (string) image file to be decoded (scanned OMR page).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   with test data or false in case o error;;d0,69;;b0,0;;m0;;e0;;i0;;o;;k;;l $image;;p;;x;;n">
</treenode>
<treenode node="F_decode_form_fields;PHP:Function Name;1957715841;f0;68;1;71;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_decode_form_fields()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an array containing form fields.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing form fields;;d0,69;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="F_decode_tcecode;PHP:Function Name;992194008;f0;38;1;198;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_decode_tcecode($text_to_decode)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns XHTML code from text marked-up with TCExam Code Tags&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$text_to_decode&lt;/b&gt;: (string) text to convert&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   XHTML code;;d0,39;;b0,0;;m0;;e0;;i0;;o;;k;;l $text_to_decode;;p;;x;;n">
</treenode>
<treenode node="F_deleteMediaDir;PHP:Function Name;2992992028;f0;148;1;165;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_deleteMediaDir($dirname)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Delete the specified media directory&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$dirname&lt;/b&gt;: (string) the directory name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   in case of success, false otherwise;;d0,149;;b0,0;;m0;;e0;;i0;;o;;k;;l $dirname;;p;;x;;n">
</treenode>
<treenode node="F_deleteMediaFile;PHP:Function Name;2992992028;f0;36;1;63;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_deleteMediaFile($filename)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Delete the selected media file&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$filename&lt;/b&gt;: (string) the file name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   in case of success, false otherwise;;d0,37;;b0,0;;m0;;e0;;i0;;o;;k;;l $filename;;p;;x;;n">
</treenode>
<treenode node="F_display_db_error;PHP:Function Name;1674183291;f0;95;1;101;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_display_db_error($exit = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Print the database error message.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$exit&lt;/b&gt;: (bool) if true output a message and terminate the current script [default = true].;;d0,96;;b0,0;;m0;;e0;;i0;;o;;k;;l $exit;;p;;x;;n">
</treenode>
<treenode node="F_empty_to_null;PHP:Function Name;993074321;f0;59;1;68;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_empty_to_null($str)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Prepare field value for SQL query.&lt;br&gt;&#10;Returns the quoted string if not empty, NULL otherwise.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$str&lt;/b&gt;: (string) string to check.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   $str quoted if not empty, NULL otherwise;;d0,60;;b0,0;;m0;;e0;;i0;;o;;k;;l $str;;p;;x;;n">
<treenode node="../../shared/code/tce_db_dal.php;PHP:PHP Include;993074321;f18;62;50;62;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_encodeOMRTestData;PHP:Function Name;243164721;f0;36;1;42;;;;vpos;;v;;aencoded;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_encodeOMRTestData($data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Encode OMR test data array as a string to be printed on QR-Code.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$data&lt;/b&gt;: (array) array to be encoded&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   string.;;d0,37;;b0,0;;m0;;e0;;i0;;o;;k;;l $data;;p;;x;;n">
</treenode>
<treenode node="F_error_handler;PHP:Function Name;1674183291;f0;110;1;124;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_error_handler($errno, $errstr, $errfile, $errline)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Custom PHP error handler function.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$errno&lt;/b&gt;: (int) The first parameter, errno, contains the level of the error raised, as an integer.&#10;     &lt;b&gt;$errstr&lt;/b&gt;: (string) The second parameter, errstr, contains the error message, as a string.&#10;     &lt;b&gt;$errfile&lt;/b&gt;: (string) The third parameter is optional, errfile, which contains the filename that the error was raised in, as a string.&#10;     &lt;b&gt;$errline&lt;/b&gt;: (int) The fourth parameter is optional, errline, which contains the line number the error was raised at, as an integer.;;d0,111;;b0,0;;m0;;e0;;i0;;o;;k;;l $errno;;p $errstr;;p $errfile;;p $errline;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_escape_sql;PHP:Function Name;911383484;f0;179;1;187;;316882688;f0;163;1;171;;2219727088;f0;201;1;209;;2706550189;f0;163;1;171;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_escape_sql($link_identifier, $str, $stripslashes = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Escape a string for insertion into a SQL text field (avoiding SQL injection).&#10;&lt;b&gt;since&lt;/b&gt;: 5.0.005 2007-12-05&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$link_identifier&lt;/b&gt;: (resource) database link identifier.&#10;     &lt;b&gt;$str&lt;/b&gt;: (string) The string that is to be escaped.&#10;     &lt;b&gt;$stripslashes&lt;/b&gt;: (boolean) if true strip slashes from string&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Returns the escaped string, or FALSE on error.;;d0,164;;b0,0;;m0;;e0;;i0;;o;;k;;l $link_identifier;;p $str;;p $stripslashes;;p;;x;;x;;x;;n">
</treenode>
<treenode node="F_executeTest;PHP:Function Name;1489315705;f0;698;1;744;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_executeTest($test_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the current user is authorized to execute the selected test.&lt;br&gt;&#10;Generates the test if it&apos;s not already generated.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   if user is authorized, false otherwise.;;d0,699;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;700;42;700;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_execute_sql_queries;PHP:Function Name;3055214671;f0;105;1;149;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_execute_sql_queries($db, $sql_file, $search, $replace, $progress_log)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Parses an SQL file and execute queries.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$db&lt;/b&gt;: database connector&#10;    string &lt;b&gt;$sql_file&lt;/b&gt;: file to parse&#10;    string &lt;b&gt;$search&lt;/b&gt;: string to replace&#10;    string &lt;b&gt;$replace&lt;/b&gt;: replace string&#10;    string &lt;b&gt;$progress_log&lt;/b&gt;: log file name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true in case of success, false otherwise.;;d81,105;;b0,0;;m0;;e0;;i0;;o;;k;;l $db;;p $sql_file;;p $search;;p $replace;;p $progress_log;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_file_exists;PHP:Function Name;1674183291;f0;162;1;173;;;;vpos;;v;;aReturns;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_file_exists($filename)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Wrapper for file_exists.&#10;Checks whether a file or directory exists.&#10;Only allows some protocols and local files.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    filename: (string) Path to the file or directory.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   TRUE if the file or directory specified by filename exists;s FALSE otherwise.;;d0,163;;b0,0;;m0;;e0;;i0;;o;;k;;l;;p;;x;;n">
</treenode>
<treenode node="F_formatFileSize;PHP:Function Name;2992992028;f0;213;1;226;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_formatFileSize($size)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return a formatted file size&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$size&lt;/b&gt;: (int) size in bytes&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   formatted size;;d0,214;;b0,0;;m0;;e0;;i0;;o;;k;;l $size;;p;;x;;n">
</treenode>
<treenode node="F_formatFloat;PHP:Function Name;993074321;f0;453;1;456;;;;vpos;;v;;aformatted;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_formatFloat($num)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Format a percentage number.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$num&lt;/b&gt;: (float) number to be formatted&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   string;;d0,454;;b0,0;;m0;;e0;;i0;;o;;k;;l $num;;p;;x;;n">
</treenode>
<treenode node="F_formatPdfPercentage;PHP:Function Name;993074321;f0;479;1;486;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_formatPdfPercentage($num, $ratio = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    format a percentage number&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$num&lt;/b&gt;: (float) number to be formatted&#10;     &lt;b&gt;$ratio&lt;/b&gt;: (boolean) Set to true if the number is a ratio between 0 and 1, false if is a percentage number between 0 an 100.;;d0,480;;b0,0;;m0;;e0;;i0;;o;;k;;l $num;;p $ratio;;p;;x;;x;;n">
</treenode>
<treenode node="F_formatPercentage;PHP:Function Name;993074321;f0;464;1;471;;;;vpos;;v;;aformatted;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_formatPercentage($num, $ratio = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Format a percentage number.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$num&lt;/b&gt;: (float) Number to be formatted.&#10;     &lt;b&gt;$ratio&lt;/b&gt;: (boolean) Set to true if the number is a ratio between 0 and 1, false if is a percentage number between 0 an 100.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   string;;d0,465;;b0,0;;m0;;e0;;i0;;o;;k;;l $num;;p $ratio;;p;;x;;x;;n">
</treenode>
<treenode node="F_formatXMLPercentage;PHP:Function Name;993074321;f0;495;1;502;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_formatXMLPercentage($num, $ratio = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    format a percentage number for XML&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$num&lt;/b&gt;: (float) number to be formatted&#10;     &lt;b&gt;$ratio&lt;/b&gt;: (boolean) Set to true if the number is a ratio between 0 and 1, false if is a percentage number between 0 an 100.;;d0,496;;b0,0;;m0;;e0;;i0;;o;;k;;l $num;;p $ratio;;p;;x;;x;;n">
</treenode>
<treenode node="F_getAllUsersTestStat;PHP:Function Name;2183298751;f0;1114;1;1316;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getAllUsersTestStat($test_id, $group_id = 0, $user_id = 0, $startdate = 0, $enddate = 0, $full_order_field = &apos;total_score&apos;, $pubmode = false, $stats = 2)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns users statistic array for the selected test.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID.&#10;     &lt;b&gt;$group_id&lt;/b&gt;: (int) group ID - if greater than zero, filter stats for the specified user group.&#10;     &lt;b&gt;$user_id&lt;/b&gt;: (int) user ID - if greater than zero, filter stats for the specified user.&#10;     &lt;b&gt;$startdate&lt;/b&gt;: (string) start date ID - if greater than zero, filter stats for the specified starting date&#10;     &lt;b&gt;$enddate&lt;/b&gt;: (string) end date ID - if greater than zero, filter stats for the specified ending date&#10;     &lt;b&gt;$full_order_field&lt;/b&gt;: (string) Ordering fields for SQL query.&#10;     &lt;b&gt;$pubmode&lt;/b&gt;: (boolean) If true filter the results for the public interface.&#10;     &lt;b&gt;$stats&lt;/b&gt;: (int) 2 = full stats;s 1 = user stats;s 0 = disabled stats;s return $data array containing test statistics.;;d0,1115;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p $group_id;;p $user_id;;p $startdate;;p $enddate;;p $full_order_field;;p $pubmode;;p $stats;;p;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_getAnswerIdFromPosition;PHP:Function Name;1489315705;f0;1679;1;1699;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getAnswerIdFromPosition($testlog_id, $answpos)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the answer ID from position&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$testlog_id&lt;/b&gt;: (int) Test Log ID&#10;     &lt;b&gt;$answpos&lt;/b&gt;: (array) Answer positions (order in wich they are displayed)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   answer ID;;d0,1680;;b0,0;;m0;;e0;;i0;;o;;k;;l $testlog_id;;p $answpos;;p;;x;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;1681;42;1681;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_getArrayStatistics;PHP:Function Name;1234730906;f0;37;1;103;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getArrayStatistics($data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return an array containing descriptive statistics for the bidimensional input array.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2008-12-25&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$data&lt;/b&gt;: (array) input data as bidimesional array. The first dimension is a set of data, the second contains data.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   of statistical results. The keys of the input data are peserved.;;d0,38;;b0,0;;m0;;e0;;i0;;o;;k;;l $data;;p;;x;;n">
</treenode>
<treenode node="F_getAuthorizedDirs;PHP:Function Name;2992992028;f0;477;1;487;;;;vpos;;v;;aa;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getAuthorizedDirs()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a regular expression to match authorised directories.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   regular expression to match authorised directories.;;d0,478;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="F_getAuthorizedUsers;PHP:Function Name;454821484;f0;238;1;259;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getAuthorizedUsers($user_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a comma separated string of ID of the users that belong to the same groups.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2006-03-11&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$user_id&lt;/b&gt;: (int) user ID;;d0,239;;b0,0;;m0;;e0;;i0;;o;;k;;l $user_id;;p;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;454821484;f18;241;42;241;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_getBoolean;PHP:Function Name;993074321;f0;93;1;104;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getBoolean($str)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns boolean value from string or integer.&lt;br&gt;&#10;This function is needed to get the right boolean value from boolean field returned by PostgreSQL query.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$str&lt;/b&gt;: (string) string to check.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   value.;;d0,94;;b0,0;;m0;;e0;;i0;;o;;k;;l $str;;p;;x;;n">
</treenode>
<treenode node="F_getCSRFToken;PHP:Function Name;1592309833;f0;289;1;292;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getCSRFToken()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Generate CSRF token;;d0,290;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="F_getCSRFTokenField;PHP:Function Name;1957715841;f0;235;1;238;;;;vpos;;v;;aXHTML;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getCSRFTokenField()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns XHTML code string to display the CSRF token field.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   code string;;d0,236;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="F_getDirFiles;PHP:Function Name;2992992028;f0;268;1;297;;;;vpos;;v;;aan;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getDirFiles($dir, $rootdir = K_PATH_CACHE, $authdirs = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get an associative array of directories and folder inside the specified dir.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$dir&lt;/b&gt;: (string) the starting directory path&#10;     &lt;b&gt;$rootdir&lt;/b&gt;: (string) the user root dir.&#10;     &lt;b&gt;$authdirs&lt;/b&gt;: (string) regular expression containing the authorized dirs.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   associative array containing sorted &apos;dirs&apos; and &apos;files&apos;;;d0,269;;b0,0;;m0;;e0;;i0;;o;;k;;l $dir;;p $rootdir;;p $authdirs;;p;;x;;xK_PATH_CACHE;;x;;n">
</treenode>
<treenode node="F_getDirTable;PHP:Function Name;2992992028;f0;344;1;399;;;;vpos;;v;;ahtml;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getDirTable($dir, $selected = &apos;&apos;, $params = &apos;&apos;, $rootdir = K_PATH_CACHE, $authdirs = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get an html table containing files and subdirs&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$dir&lt;/b&gt;: (string) the starting directory path&#10;     &lt;b&gt;$selected&lt;/b&gt;: (string) the selected file&#10;     &lt;b&gt;$params&lt;/b&gt;: (string) additional parameters to add on links&#10;     &lt;b&gt;$rootdir&lt;/b&gt;: (string) the user root dir.&#10;     &lt;b&gt;$authdirs&lt;/b&gt;: (string) regular expression containing the authorized dirs.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   table;;d0,345;;b0,0;;m0;;e0;;i0;;o;;k;;l $dir;;p $selected;;p $params;;p $rootdir;;p $authdirs;;p;;x;;x;;x;;xK_PATH_CACHE;;x;;n">
</treenode>
<treenode node="F_getDirVisualTable;PHP:Function Name;2992992028;f0;411;1;471;;;;vpos;;v;;ahtml;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getDirVisualTable($dir, $selected = &apos;&apos;, $params = &apos;&apos;, $rootdir = K_PATH_CACHE, $authdirs = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get an html visual list of files and subdirs&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$dir&lt;/b&gt;: (string) the starting directory path&#10;     &lt;b&gt;$selected&lt;/b&gt;: (string) the selected file&#10;     &lt;b&gt;$params&lt;/b&gt;: (string) additional parameters to add on links&#10;     &lt;b&gt;$rootdir&lt;/b&gt;: (string) the user root dir.&#10;     &lt;b&gt;$authdirs&lt;/b&gt;: (string) regular expression containing the authorized dirs.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   table;;d0,412;;b0,0;;m0;;e0;;i0;;o;;k;;l $dir;;p $selected;;p $params;;p $rootdir;;p $authdirs;;p;;x;;x;;x;;xK_PATH_CACHE;;x;;n">
</treenode>
<treenode node="F_getFileInfo;PHP:Function Name;2992992028;f0;173;1;205;;;;vpos;;v;;aassociative;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getFileInfo($file)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get file information&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$file&lt;/b&gt;: (string) the file name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   array containing file info or false in case of error;;d0,174;;b0,0;;m0;;e0;;i0;;o;;k;;l $file;;p;;x;;n">
</treenode>
<treenode node="F_getFirstTestUser;PHP:Function Name;1489315705;f0;903;1;924;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getFirstTestUser($test_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the ID of the tce_tests_users table corresponding to a complete test of $test_id type.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   testuser ID;;d0,904;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;905;42;905;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_getMediaDirPathLink;PHP:Function Name;2992992028;f0;235;1;258;;;;vpos;;v;;aan;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getMediaDirPathLink($dirpath, $viewmode = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get an html string containing active path of the specified directory with links to subdirectories.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$dirpath&lt;/b&gt;: (string) the directory path&#10;     &lt;b&gt;$viewmode&lt;/b&gt;: (boolean) true=table, false=visual&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   html string;;d0,236;;b0,0;;m0;;e0;;i0;;o;;k;;l $dirpath;;p $viewmode;;p;;x;;x;;n">
</treenode>
<treenode node="F_getNumOmittedQuestions;PHP:Function Name;1489315705;f0;2189;1;2205;;;;vpos;;v;;ainteger;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getNumOmittedQuestions($test_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the number of omitted questions (unanswered + undisplayed).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   number;;d0,2190;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;2191;42;2191;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_getOTP;PHP:Function Name;791254060;f0;82;1;104;;;;vpos;;v;;aOTP;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getOTP($otpkey, $mtime = 0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get a One Time Password for the specified secret key.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$otpkey&lt;/b&gt;: (string) One Time Password secret key.&#10;     &lt;b&gt;$mtime&lt;/b&gt;: (int) Reference time in microseconds.;;d0,83;;b0,0;;m0;;e0;;i0;;o;;k;;l $otpkey;;p $mtime;;p;;x;;x;;n">
</treenode>
<treenode node="F_getRandomOTPkey;PHP:Function Name;791254060;f0;34;1;45;;;;vpos;;v;;aBase32;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getRandomOTPkey()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return a random One Time Password Secret Key (Base32 encoded).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   encoded key.;;d0,35;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="F_getRawTestStat;PHP:Function Name;2183298751;f0;135;1;520;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getRawTestStat($test_id, $group_id = 0, $user_id = 0, $startdate = 0, $enddate = 0, $testuser_id = 0, $data = [], $pubmode = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns raw statistic array for the selected test.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID.&#10;     &lt;b&gt;$group_id&lt;/b&gt;: (int) group ID - if greater than zero, filter stats for the specified user group.&#10;     &lt;b&gt;$user_id&lt;/b&gt;: (int) user ID - if greater than zero, filter stats for the specified user.&#10;     &lt;b&gt;$startdate&lt;/b&gt;: (int) start date ID - if greater than zero, filter stats for the specified starting date&#10;     &lt;b&gt;$enddate&lt;/b&gt;: (int) end date ID - if greater than zero, filter stats for the specified ending date&#10;     &lt;b&gt;$testuser_id&lt;/b&gt;: (int) test-user ID - if greater than zero, filter stats for the specified test-user.&#10;     &lt;b&gt;$data&lt;/b&gt;: (array) Array of existing data to be merged with the current one.&#10;     &lt;b&gt;$pubmode&lt;/b&gt;: (boolean) If true filter the results for the public interface. return $data array containing test statistics.;;d0,136;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p $group_id;;p $user_id;;p $startdate;;p $enddate;;p $testuser_id;;p $data;;p $pubmode;;p;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_getSSLCertificateHash;PHP:Function Name;454821484;f0;355;1;382;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getSSLCertificateHash($cert, $pkcs12 = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the hash code of the specified SSL certificate&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2013-07-01&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$cert&lt;/b&gt;: String containing the certificate data.&#10;    boolean &lt;b&gt;$pkcs12&lt;/b&gt;: Set this variable to true if the certificate is in PKCS12 format.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing the hash code and the validity end date in unix epoch.;;d0,356;;b0,0;;m0;;e0;;i0;;o;;k;;l $cert;;p $pkcs12;;p;;x;;x;;n">
</treenode>
<treenode node="F_getSSLClientHash;PHP:Function Name;454821484;f0;390;1;408;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getSSLClientHash()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the hash code for the client certificate&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2013-07-01&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing the hash code.;;d0,391;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="F_getSVGGraph;PHP:Function Name;4085924270;f0;141;1;155;;;;vpos;;v;;aconverted;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getSVGGraph($p, $w = &apos;&apos;, $h = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Replace angular parenthesis with html equivalents (html entities).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$p&lt;/b&gt;: (string) String containing point data.&#10;     &lt;b&gt;$w&lt;/b&gt;: (int) Graph width.&#10;     &lt;b&gt;$h&lt;/b&gt;: (int) Graph height.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   string;;d0,142;;b0,0;;m0;;e0;;i0;;o;;k;;l $p;;p $w;;p $h;;p;;x;;x;;x;;n">
</treenode>
<treenode node="F_getSVGGraphCode;PHP:Function Name;4085924270;f0;39;1;132;;;;vpos;;v;;aconverted;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getSVGGraphCode($p, $w = &apos;&apos;, $h = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Replace angular parenthesis with html equivalents (html entities).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$p&lt;/b&gt;: (string) String containing point data.&#10;     &lt;b&gt;$w&lt;/b&gt;: (int) Graph width.&#10;     &lt;b&gt;$h&lt;/b&gt;: (int) Graph height.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   string;;d0,40;;b0,0;;m0;;e0;;i0;;o;;k;;l $p;;p $w;;p $h;;p;;x;;x;;x;;n">
</treenode>
<treenode node="F_getTestData;PHP:Function Name;1489315705;f0;560;1;577;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getTestData($test_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the test data.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing test data.;;d0,561;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;562;42;562;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_getTestDuration;PHP:Function Name;1489315705;f0;632;1;638;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getTestDuration($test_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the test duration time in seconds.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   test duration time in seconds;;d0,633;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;634;42;634;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_getTestGroups;PHP:Function Name;1489315705;f0;2316;1;2333;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getTestGroups($test_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get a comma separated list of valid group IDs for the selected test.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) ID of the selected test&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing a comma separated list fo group IDs.;;d0,2317;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;2318;42;2318;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_getTestIDReports;PHP:Function Name;2183298751;f0;1354;1;1357;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getTestIDReports($test_id, $user_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a comma separated string of test IDs with test_results_to_users enabled&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) Test ID.;;d0,1355;;b0,0;;m0;;e0;;i0;;o;;k;;ltest_id;;puser_id;;p;;x;;x;;n">
</treenode>
<treenode node="F_getTestIDResults;PHP:Function Name;2183298751;f0;1344;1;1347;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getTestIDResults($test_id, $user_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a comma separated string of test IDs with test_results_to_users enabled&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) Test ID.;;d0,1345;;b0,0;;m0;;e0;;i0;;o;;k;;ltest_id;;puser_id;;p;;x;;x;;n">
</treenode>
<treenode node="F_getTestIDs;PHP:Function Name;2183298751;f0;1364;1;1381;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getTestIDs($test_id, $user_id, $filter = &apos;test_results_to_users&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a comma separated string of test IDs with test_results_to_users enabled&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) Test ID.;;d0,1365;;b0,0;;m0;;e0;;i0;;o;;k;;ltest_id;;puser_id;;pfilter;;p;;x;;x;;x;;n">
</treenode>
<treenode node="F_getTestName;PHP:Function Name;1489315705;f0;620;1;625;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getTestName($test_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the test name.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   test name or empty string in case of error.;;d0,621;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p;;x;;n">
</treenode>
<treenode node="F_getTestPassword;PHP:Function Name;1489315705;f0;608;1;613;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getTestPassword($test_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the test password.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   test password or empty string in case of error.;;d0,609;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p;;x;;n">
</treenode>
<treenode node="F_getTestSSLCerts;PHP:Function Name;1489315705;f0;2340;1;2357;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getTestSSLCerts($test_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get a comma separated list of valid SSL certificates IDs for the selected test.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) ID of the selected test&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing a comma separated list SSL certificates IDs.;;d0,2341;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;2342;42;2342;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_getTestStartTime;PHP:Function Name;1489315705;f0;645;1;664;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getTestStartTime($testuser_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the user&apos;s test start time in seconds since UNIX epoch (1970-01-01 00:00:00).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$testuser_id&lt;/b&gt;: (int) user&apos;s test ID&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   start time in seconds;;d0,646;;b0,0;;m0;;e0;;i0;;o;;k;;l $testuser_id;;p;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;647;42;647;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_getTestStat;PHP:Function Name;2183298751;f0;113;1;121;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getTestStat($test_id, $group_id = 0, $user_id = 0, $startdate = 0, $enddate = 0, $testuser_id = 0, $pubmode = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns statistic array for the selected test.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID.&#10;     &lt;b&gt;$group_id&lt;/b&gt;: (int) group ID - if greater than zero, filter stats for the specified user group.&#10;     &lt;b&gt;$user_id&lt;/b&gt;: (int) user ID - if greater than zero, filter stats for the specified user.&#10;     &lt;b&gt;$startdate&lt;/b&gt;: (int) start date ID - if greater than zero, filter stats for the specified starting date&#10;     &lt;b&gt;$enddate&lt;/b&gt;: (int) end date ID - if greater than zero, filter stats for the specified ending date&#10;     &lt;b&gt;$testuser_id&lt;/b&gt;: (int) test-user ID - if greater than zero, filter stats for the specified test-user.&#10;     &lt;b&gt;$pubmode&lt;/b&gt;: (boolean) If true filter the results for the public interface. return $data array containing test statistics.;;d0,114;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p $group_id;;p $user_id;;p $startdate;;p $enddate;;p $testuser_id;;p $pubmode;;p;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_getUIDfromRegnum;PHP:Function Name;3456378455;f0;624;1;638;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getUIDfromRegnum($regnum)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the user ID from registration number.&#10;(int) User ID or 0 in case of error.&#10;&lt;b&gt;since&lt;/b&gt;: 11.3.005 (2012-07-31);;d0,625;;b0,0;;m0;;e0;;i0;;o;;k;;lregnum;;p;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;3456378455;f18;627;42;627;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_getUTCoffset;PHP:Function Name;993074321;f0;509;1;514;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getUTCoffset($timezone)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the UTC time offset in seconds&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$timezone&lt;/b&gt;: (string) current user timezone&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   UTC time offset in seconds;;d0,510;;b0,0;;m0;;e0;;i0;;o;;k;;l $timezone;;p;;x;;n">
</treenode>
<treenode node="F_getUserData;PHP:Function Name;1489315705;f0;584;1;601;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getUserData($user_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns user data.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$user_id&lt;/b&gt;: (int) User ID.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing test data.;;d0,585;;b0,0;;m0;;e0;;i0;;o;;k;;l $user_id;;p;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;586;42;586;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_getUserTestStat;PHP:Function Name;2183298751;f0;38;1;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getUserTestStat($test_id, $user_id = 0, $testuser_id = 0, $pubmode = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns statistic array for the test-user&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID.&#10;     &lt;b&gt;$user_id&lt;/b&gt;: (int) user ID - if greater than zero, filter stats for the specified user.&#10;     &lt;b&gt;$testuser_id&lt;/b&gt;: (int) test-user ID - if greater than zero, filter stats for the specified test-user.&#10;     &lt;b&gt;$pubmode&lt;/b&gt;: (boolean) If true filter the results for the public interface. return $data array containing test-user statistics.;;d0,39;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p $user_id;;p $testuser_id;;p $pubmode;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_getUserTestTotals;PHP:Function Name;2183298751;f0;59;1;100;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getUserTestTotals($test_id, $user_id = 0, $testuser_id = 0, $pubmode = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns test-user totals&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID.&#10;     &lt;b&gt;$user_id&lt;/b&gt;: (int) user ID - if greater than zero, filter stats for the specified user.&#10;     &lt;b&gt;$testuser_id&lt;/b&gt;: (int) test-user ID - if greater than zero, filter stats for the specified test-user.&#10;     &lt;b&gt;$pubmode&lt;/b&gt;: (boolean) If true filter the results for the public interface. return $data array containing test-user statistics.;;d0,60;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p $user_id;;p $testuser_id;;p $pubmode;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_getUserTests;PHP:Function Name;1489315705;f0;35;1;176;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_getUserTests()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an XHTML table of user&apos;s tests.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing an XHTML table of user&apos;s tests.;;d0,36;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="../../shared/code/tce_functions_tcecode.php;PHP:PHP Include;1489315705;f18;38;61;38;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_functions_test_stats.php;PHP:PHP Include;1489315705;f18;39;64;39;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;37;42;37;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_get_user_groups;PHP:Function Name;3456378455;f0;599;1;617;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_get_user_groups($user_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an array containing groups IDs to which the specified user belongs&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$user_id&lt;/b&gt;: (int) user ID&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing user&apos;s groups IDs;;d0,600;;b0,0;;m0;;e0;;i0;;o;;k;;l $user_id;;p;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;3456378455;f18;602;42;602;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_html_color_picker;PHP:Function Name;1602994036;f0;46;1;235;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_html_color_picker($callingform, $callingfield, $tag)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Display Color Picker&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2008-10-01;;d0,47;;b0,0;;m0;;e0;;i0;;o;;k;;lcallingform;;pcallingfield;;ptag;;p;;x;;x;;x;;n">
</treenode>
<treenode node="F_html_to_TSV;PHP:Function Name;993074321;f0;602;1;641;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_html_to_TSV($str)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert HTML code to TSV string.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$str&lt;/b&gt;: (string) HTML string to convert.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   TSV;;d0,603;;b0,0;;m0;;e0;;i0;;o;;k;;l $str;;p;;x;;n">
</treenode>
<treenode node="F_html_to_text;PHP:Function Name;2127592304;f0;37;1;131;;;;vpos;;v;;atext;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_html_to_text($str, $preserve_newlines = false, $display_links = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert HTML code to Text string.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$str&lt;/b&gt;: (string) HTML code string to convert.&#10;     &lt;b&gt;$preserve_newlines&lt;/b&gt;: (boolean) If true convert newline characters to HTML line breaks.&#10;     &lt;b&gt;$display_links&lt;/b&gt;: (boolean) If true gives a textual representation of links and images.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   string;;d0,38;;b0,0;;m0;;e0;;i0;;o;;k;;l $str;;p $preserve_newlines;;p $display_links;;p;;x;;x;;x;;n">
</treenode>
<treenode node="F_importOMRTestData;PHP:Function Name;243164721;f0;221;1;456;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_importOMRTestData($user_id, $date, $omr_testdata, $omr_answers, $overwrite = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Import user&apos;s test data from OMR.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$user_id&lt;/b&gt;: (int) user ID.&#10;     &lt;b&gt;$date&lt;/b&gt;: (string) date-time field.&#10;     &lt;b&gt;$omr_testdata&lt;/b&gt;: (array) Array containing test data.&#10;     &lt;b&gt;$omr_answers&lt;/b&gt;: (array) Array containing test answers (from OMR).&#10;     &lt;b&gt;$overwrite&lt;/b&gt;: (boolean) If true overwrites the previous answers on non-repeatable tests.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   TRUE in case of success, FALSE otherwise.;;d0,222;;b0,0;;m0;;e0;;i0;;o;;k;;l $user_id;;p $date;;p $omr_testdata;;p $omr_answers;;p $overwrite;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_import_tsv_users;PHP:Function Name;2343868215;f0;494;1;692;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_import_tsv_users($tsvfile)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Import users from TSV file (tab delimited text).&#10;The format of TSV is the same obtained by exporting data from Users Selection Form.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$tsvfile&lt;/b&gt;: (string) TSV (tab delimited text) file name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   TRUE in case of success, FALSE otherwise;;d0,495;;b0,0;;m0;;e0;;i0;;o;;k;;l $tsvfile;;p;;x;;n">
</treenode>
<treenode node="F_install_database;PHP:Function Name;3055214671;f0;35;1;93;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_install_database($db_type, $db_host, $db_port, $db_user, $db_password, $database_name, $table_prefix, $drop_database, $create_new, $progress_log)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Install TCExam database.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$db_type&lt;/b&gt;: database type (MySQL)&#10;    string &lt;b&gt;$db_host&lt;/b&gt;: database host&#10;    string &lt;b&gt;$db_port&lt;/b&gt;: database port number&#10;    string &lt;b&gt;$db_user&lt;/b&gt;: database user&#10;    string &lt;b&gt;$db_password&lt;/b&gt;: database password&#10;    string &lt;b&gt;$database_name&lt;/b&gt;: database name&#10;    string &lt;b&gt;$table_prefix&lt;/b&gt;: prefix for tables&#10;    boolean &lt;b&gt;$drop_database&lt;/b&gt;: if true drop existing database&#10;    boolean &lt;b&gt;$create_new&lt;/b&gt;: if true creates new database&#10;    string &lt;b&gt;$progress_log&lt;/b&gt;: log file name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   True in case of success, False otherwise.;;d157,35;;b0,0;;m0;;e0;;i0;;o;;k;;l $db_type;;p $db_host;;p $db_port;;p $db_user;;p $db_password;;p $database_name;;p $table_prefix;;p $drop_database;;p $create_new;;p $progress_log;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_isAuthorizedDir;PHP:Function Name;2992992028;f0;496;1;504;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_isAuthorizedDir($dir, $rootdir, $authdirs = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the user is authorized to use the specified directory, false otherwise.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$dir&lt;/b&gt;: (string) the directory to check.&#10;     &lt;b&gt;$rootdir&lt;/b&gt;: (string) the user root dir.&#10;     &lt;b&gt;$authdirs&lt;/b&gt;: (string) regular expression containing the authorized dirs.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   if the user is authorized to use the specified directory, false otherwise.;;d0,497;;b0,0;;m0;;e0;;i0;;o;;k;;l $dir;;p $rootdir;;p $authdirs;;p;;x;;x;;x;;n">
</treenode>
<treenode node="F_isAuthorizedEditorForGroup;PHP:Function Name;3456378455;f0;514;1;524;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_isAuthorizedEditorForGroup($group_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return true if the current user is an administrator or belongs to the group, false otherwise&#10;&lt;b&gt;since&lt;/b&gt;: 11.1.003 (2010-10-05)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$group_id&lt;/b&gt;: (int) group ID&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true/false;;d0,515;;b0,0;;m0;;e0;;i0;;o;;k;;l $group_id;;p;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;3456378455;f18;517;42;517;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_isAuthorizedEditorForUser;PHP:Function Name;3456378455;f0;532;1;538;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_isAuthorizedEditorForUser($user_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return true if the current user is authorized to edit the specified user&#10;&lt;b&gt;since&lt;/b&gt;: 11.1.003 (2010-10-05)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$user_id&lt;/b&gt;: (int) user ID&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true/false;;d0,533;;b0,0;;m0;;e0;;i0;;o;;k;;l $user_id;;p;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;3456378455;f18;535;42;535;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_isAuthorizedUser;PHP:Function Name;454821484;f0;193;1;229;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_isAuthorizedUser($table, $field_id_name, $value_id, $field_user_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the current user is authorized to update and delete the selected database record.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2006-03-11&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$table&lt;/b&gt;: (string) table to be modified&#10;     &lt;b&gt;$field_id_name&lt;/b&gt;: (string) name of the main ID field of the table&#10;     &lt;b&gt;$value_id&lt;/b&gt;: (int) value of the ID field of the table&#10;     &lt;b&gt;$field_user_id&lt;/b&gt;: (string) name of the foreign key to to user_id&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the user is authorized, false otherwise;;d0,194;;b0,0;;m0;;e0;;i0;;o;;k;;l $table;;p $field_id_name;;p $value_id;;p $field_user_id;;p;;x;;x;;x;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;454821484;f18;196;42;196;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_isRightTestlogUser;PHP:Function Name;1489315705;f0;753;1;777;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_isRightTestlogUser($test_id, $testlog_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if the current user is the right testlog_id owner.&lt;br&gt;&#10;This function is used for security reasons.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID&#10;     &lt;b&gt;$testlog_id&lt;/b&gt;: (int) test log ID&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   TRUE in case of success, FALSE otherwise;;d0,754;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p $testlog_id;;p;;x;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;755;42;755;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_isSslCertificateValid;PHP:Function Name;454821484;f0;336;1;345;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_isSslCertificateValid()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if the client has a valid SSL certificate.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2013-03-26&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   if the client has a valid SSL certificate, false otherwise.;;d0,337;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="F_isTestOnGroup;PHP:Function Name;3456378455;f0;485;1;491;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_isTestOnGroup($test_id, $group_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return true if the selected test is active for the selected group&#10;&lt;b&gt;since&lt;/b&gt;: 11.1.003 (2010-10-05)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID&#10;     &lt;b&gt;$group_id&lt;/b&gt;: (int) group ID&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true/false;;d0,486;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p $group_id;;p;;x;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;3456378455;f18;488;42;488;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_isTestOnSSLCerts;PHP:Function Name;3752289128;f0;365;1;371;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_isTestOnSSLCerts($test_id, $ssl_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return true if the selected test is active for the selected SSL Certificate&#10;&lt;b&gt;since&lt;/b&gt;: 12.1.000 (2013-07-09)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID&#10;     &lt;b&gt;$ssl_id&lt;/b&gt;: (int) SSL Certificate ID&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true/false;;d0,366;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p $ssl_id;;p;;x;;x;;n">
</treenode>
<treenode node="F_isTestOverLimits;PHP:Function Name;1489315705;f0;972;1;1009;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_isTestOverLimits()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns false if the number of executed tests is under the limits, true otherwise.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true/false.;;d0,973;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;974;42;974;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_isURL;PHP:Function Name;993074321;f0;695;1;698;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_isURL($str)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the string is an URL.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$str&lt;/b&gt;: (string) String to check.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true or false.;;d0,696;;b0,0;;m0;;e0;;i0;;o;;k;;l $str;;p;;x;;n">
</treenode>
<treenode node="F_isUsedMediaFile;PHP:Function Name;2992992028;f0;305;1;332;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_isUsedMediaFile($file)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return true if the file is used on question or answer descriptions&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$file&lt;/b&gt;: (string) the file to search&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   if the file is used, false otherwise;;d0,306;;b0,0;;m0;;e0;;i0;;o;;k;;l $file;;p;;x;;n">
</treenode>
<treenode node="F_isUserOnGroup;PHP:Function Name;3456378455;f0;500;1;506;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_isUserOnGroup($user_id, $group_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return true if the selected user belongs to the selected group&#10;&lt;b&gt;since&lt;/b&gt;: 11.1.003 (2010-10-05)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$user_id&lt;/b&gt;: (int) user ID&#10;     &lt;b&gt;$group_id&lt;/b&gt;: (int) group ID&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true/false;;d0,501;;b0,0;;m0;;e0;;i0;;o;;k;;l $user_id;;p $group_id;;p;;x;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;3456378455;f18;503;42;503;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_isValidIP;PHP:Function Name;1489315705;f0;214;1;270;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_isValidIP($user_ip, $test_ips)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if user&apos;s IP is valid over test IP range&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$user_ip&lt;/b&gt;: (int) user&apos;s IP address in expanded IPv6 format.&#10;     &lt;b&gt;$test_ips&lt;/b&gt;: (int) comma separated list of valid test IP addresses. The &apos;*&apos; character may be used to indicate any number in IPv4 addresses. Intervals must be specified using the &apos;-&apos; character.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   if IP is valid, false otherwise;;d0,215;;b0,0;;m0;;e0;;i0;;o;;k;;l $user_ip;;p $test_ips;;p;;x;;x;;n">
</treenode>
<treenode node="F_isValidSSLCert;PHP:Function Name;1489315705;f0;278;1;299;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_isValidSSLCert($test_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if user&apos;s IP is valid over test IP range&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) Test ID&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   if the client certifiate is valid, false otherwise;;d0,279;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p;;x;;n">
<treenode node="../../shared/code/tce_functions_authorization.php;PHP:PHP Include;1489315705;f18;281;67;281;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;280;42;280;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_isValidTestUser;PHP:Function Name;1489315705;f0;308;1;332;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_isValidTestUser($test_id, $user_ip, $test_ip)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if user is authorized to execute the specified test&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) ID of the selected test&#10;     &lt;b&gt;$user_ip&lt;/b&gt;: (int) user&apos;s IP address.&#10;     &lt;b&gt;$test_ip&lt;/b&gt;: (int) test IP valid addresses. Various IP addresses may be separated using comma character. The asterisk character may be used to indicate &quot;any number&quot;.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   if is user is authorized, false otherwise;;d0,309;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p $user_ip;;p $test_ip;;p;;x;;x;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;310;42;310;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_isValidbackupFile;PHP:Function Name;1387760914;f0;54;1;57;;;;vpos;;v;;a;;r;;d0,55;;b0,0;;m0;;e0;;i0;;o;;k;;lfile;;p;;x;;n">
</treenode>
<treenode node="F_is_allowed_upload;PHP:Function Name;1512276986;f0;37;1;46;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_is_allowed_upload($filename)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if the uploaded file extension is allowed.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2001-11-19&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$filename&lt;/b&gt;: (string) the filename&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   in case of allowed file type, false otherwise;;d0,38;;b0,0;;m0;;e0;;i0;;o;;k;;l $filename;;p;;x;;n">
</treenode>
<treenode node="F_latex_callback;PHP:Function Name;992194008;f0;206;1;294;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_latex_callback($matches)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Callback function for preg_replace_callback (LaTeX replacement).&#10;Returns replacement image for LaTeX code.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$matches&lt;/b&gt;: (string) array containing matches: $matches[0] is the complete match, $matches[1] the match for the first subpattern enclosed in &apos;(...)&apos; (the LaTeX code)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   replacement HTML code string to include the equivalent LaTeX image.;;d0,207;;b0,0;;m0;;e0;;i0;;o;;k;;l $matches;;p;;x;;n">
</treenode>
<treenode node="F_list_online_users;PHP:Function Name;4016702483;f0;60;1;163;;;;vpos;;v;;afalse;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_list_online_users($wherequery, $order_field, $orderdir, $firstrow, $rowsperpage)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Display online users.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2001-10-18&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$wherequery&lt;/b&gt;: (string) users selection query&#10;     &lt;b&gt;$order_field&lt;/b&gt;: (string) order by column name&#10;     &lt;b&gt;$orderdir&lt;/b&gt;: (int) oreder direction&#10;     &lt;b&gt;$firstrow&lt;/b&gt;: (int) number of first row to display&#10;     &lt;b&gt;$rowsperpage&lt;/b&gt;: (int) number of rows per page&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   in case of empty database, true otherwise;;d0,61;;b0,0;;m0;;e0;;i0;;o;;k;;l $wherequery;;p $order_field;;p $orderdir;;p $firstrow;;p $rowsperpage;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_lockUserTest;PHP:Function Name;2183298751;f0;1323;1;1337;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_lockUserTest($test_id, $user_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Lock the user&apos;s test.&lt;br&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID&#10;     &lt;b&gt;$user_id&lt;/b&gt;: (int) user ID;;d0,1324;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p $user_id;;p;;x;;x;;n">
</treenode>
<treenode node="F_loginForm;PHP:Function Name;454821484;f0;46;1;87;;;;vpos;;v;;aXHTML;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_loginForm($faction, $fid, $fmethod, $fenctype, $username)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns XHTML / CSS formatted string for login form.&lt;br&gt;&#10;The CSS classes used are:&#10;&lt;ul&gt;&#10;&lt;li&gt;div.login_form : container for login box&lt;/li&gt;&#10;&lt;li&gt;div.login_form div.login_row : container for label + input field or button&lt;/li&gt;&#10;&lt;li&gt;div.login_form div.login_row span.label : container for input label&lt;/li&gt;&#10;&lt;li&gt;div.login_form div.login_row span.formw : container for input form&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    faction: String action attribute&#10;    fid: String form ID attribute&#10;    fmethod: String method attribute (get/post)&#10;    fenctype: String enctype attribute&#10;    username: String user name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   string for login form;;d0,47;;b0,0;;m0;;e0;;i0;;o;;k;;l;;p;;p;;p;;p;;p;;x;;x;;x;;x;;x;;n">
<treenode node="../../shared/code/tce_functions_form.php;PHP:PHP Include;454821484;f18;51;58;51;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/config/tce_user_registration.php;PHP:PHP Include;454821484;f18;50;63;50;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../config/tce_config.php;PHP:PHP Include;454821484;f18;49;42;49;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_login_form;PHP:Function Name;454821484;f0;93;1;136;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_login_form()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Display login page.&#10;NOTE: This function calls exit() after execution.;;d0,94;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="../../shared/code/tce_functions_form.php;PHP:PHP Include;454821484;f18;130;58;130;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/config/tce_httpbasic.php;PHP:PHP Include;454821484;f18;99;55;99;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/config/tce_shibboleth.php;PHP:PHP Include;454821484;f18;111;56;111;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../code/tce_page_footer.php;PHP:PHP Include;454821484;f22;106;49;106;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../code/tce_page_header.php;PHP:PHP Include;454821484;f22;104;49;104;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../config/tce_config.php;PHP:PHP Include;454821484;f18;97;42;97;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_logout_form;PHP:Function Name;454821484;f0;143;1;166;;;;vpos;;v;;aXHTML;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_logout_form()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Display logout form.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   string for logout form.;;d0,144;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="../../shared/code/tce_functions_form.php;PHP:PHP Include;454821484;f18;147;58;147;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../config/tce_config.php;PHP:PHP Include;454821484;f18;146;42;146;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_logout_page;PHP:Function Name;454821484;f0;172;1;181;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_logout_page()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Display logout page.&#10;NOTE: This function calls exit() after execution.;;d0,173;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="../code/tce_page_footer.php;PHP:PHP Include;454821484;f18;179;45;179;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../code/tce_page_header.php;PHP:PHP Include;454821484;f18;177;45;177;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../config/tce_config.php;PHP:PHP Include;454821484;f18;175;42;175;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_mathml_callback;PHP:Function Name;992194008;f0;302;1;319;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_mathml_callback($matches)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Callback function for preg_replace_callback (MathML replacement).&#10;Returns replacement code for MathML code.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$matches&lt;/b&gt;: (string) array containing matches: $matches[0] is the complete match, $matches[1] the match for the first subpattern enclosed in &apos;(...)&apos; (the MathML code)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   MathML code.;;d0,303;;b0,0;;m0;;e0;;i0;;o;;k;;l $matches;;p;;x;;n">
</treenode>
<treenode node="F_menu_isChildActive;PHP:Function Name;454468900;f0;82;1;99;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_menu_isChildActive($data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the menu item has an active child, false otherwise.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$data&lt;/b&gt;: (array) link data;;d0,83;;b0,0;;m0;;e0;;i0;;o;;k;;l $data;;p;;x;;n">
</treenode>
<treenode node="F_menu_link;PHP:Function Name;454468900;f0;37;1;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_menu_link($link, $data, $level = 0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a menu element link wit subitems.&#10;If the link refers to the current page, only the name will be returned.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$link&lt;/b&gt;: (string) URL&#10;     &lt;b&gt;$data&lt;/b&gt;: (array) link data&#10;     &lt;b&gt;$level&lt;/b&gt;: (int) item level;;d0,38;;b0,0;;m0;;e0;;i0;;o;;k;;l $link;;p $data;;p $level;;p;;x;;x;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;454468900;f18;40;42;40;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_move_dir_if_not_exists;PHP:Function Name;3055214671;f0;413;1;427;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_move_dir_if_not_exists($source, $destination)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    renames a folder in a user-friendly way&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$source&lt;/b&gt;&#10;    string &lt;b&gt;$destination&lt;/b&gt;;;d57,413;;b0,0;;m0;;e0;;i0;;o;;k;;l $source;;p $destination;;p;;x;;x;;n">
</treenode>
<treenode node="F_newTestLog;PHP:Function Name;1489315705;f0;935;1;966;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_newTestLog($testuser_id, $question_id, $score, $order, $num_answers = 0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a new tce_tests_logs table entry and returns inserted ID.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$testuser_id&lt;/b&gt;: (int) ID of tce_tests_users&#10;     &lt;b&gt;$question_id&lt;/b&gt;: (int) question ID&#10;     &lt;b&gt;$score&lt;/b&gt;: (int) score for unanswered questions&#10;     &lt;b&gt;$order&lt;/b&gt;: (int) question display order&#10;     &lt;b&gt;$num_answers&lt;/b&gt;: (int) number of alternative answers&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   testlog ID;;d0,936;;b0,0;;m0;;e0;;i0;;o;;k;;l $testuser_id;;p $question_id;;p $score;;p $order;;p $num_answers;;p;;x;;x;;x;;x;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;937;42;937;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_normalizeTestStatAverages;PHP:Function Name;2183298751;f0;527;1;584;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_normalizeTestStatAverages($data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Calculate average values from TestStat array&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$data&lt;/b&gt;: (array) Raw data array. return $data (array) Processed array.;;d0,528;;b0,0;;m0;;e0;;i0;;o;;k;;l $data;;p;;x;;n">
</treenode>
<treenode node="F_objects_callback;PHP:Function Name;992194008;f0;327;1;345;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_objects_callback($matches)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Callback function for preg_replace_callback.&#10;Returns replacement code by MIME type.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$matches&lt;/b&gt;: (string) array containing matches: $matches[0] is the complete match, $matches[1] the match for the first subpattern enclosed in &apos;(...)&apos; and so on&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   replacement string by file extension;;d0,328;;b0,0;;m0;;e0;;i0;;o;;k;;l $matches;;p;;x;;n">
</treenode>
<treenode node="F_objects_replacement;PHP:Function Name;992194008;f0;358;1;474;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_objects_replacement($name, $extension, $width = 0, $height = 0, $alt = &apos;&apos;, &amp;$maxwidth = 0, &amp;$maxheight = 0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the xhtml code needed to display the object by MIME type.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$name&lt;/b&gt;: (string) object path excluded extension&#10;     &lt;b&gt;$extension&lt;/b&gt;: (string) object extension (e.g.: gif, jpg, swf, ...)&#10;     &lt;b&gt;$width&lt;/b&gt;: (int) object width&#10;     &lt;b&gt;$height&lt;/b&gt;: (int) object height&#10;     &lt;b&gt;$maxwidth&lt;/b&gt;: (int) object max or default width&#10;     &lt;b&gt;$maxheight&lt;/b&gt;: (int) object max or default height&#10;     &lt;b&gt;$alt&lt;/b&gt;: (string) alternative content&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   replacement string;;d0,359;;b0,0;;m0;;e0;;i0;;o;;k;;l $name;;p $extension;;p $width;;p $height;;p $maxwidth;;p $maxheight;;p $alt;;p;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_printTestInfo;PHP:Function Name;1489315705;f0;494;1;553;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_printTestInfo($test_id, $showip = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an XHTML string containing specified test information.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID&#10;     &lt;b&gt;$showip&lt;/b&gt;: (boolean) if true display enabled users&apos; IP range&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing an XHTML code;;d0,495;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p $showip;;p;;x;;x;;n">
<treenode node="../../shared/code/tce_functions_tcecode.php;PHP:PHP Include;1489315705;f18;497;61;497;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;496;42;496;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_printTestResultStat;PHP:Function Name;2183298751;f0;784;1;949;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_printTestResultStat($data, $nextorderdir, $order_field, $filter, $pubmode = false, $stats = 1)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns test stats as HTML table&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$data&lt;/b&gt;: (array) Array containing test statistics.&#10;     &lt;b&gt;$nextorderdir&lt;/b&gt;: (int) next order direction.&#10;     &lt;b&gt;$order_field&lt;/b&gt;: (string) order fields.&#10;     &lt;b&gt;$filter&lt;/b&gt;: (string) filter string for URLs.&#10;     &lt;b&gt;$pubmode&lt;/b&gt;: (boolean) If true filter the results for the public interface.&#10;     &lt;b&gt;$stats&lt;/b&gt;: (int) 2 = full stats;s 1 = user stats;s 0 = disabled stats;s return HTML table string.;;d0,785;;b0,0;;m0;;e0;;i0;;o;;k;;l $data;;p $nextorderdir;;p $order_field;;p $filter;;p $pubmode;;p $stats;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_printTestStat;PHP:Function Name;2183298751;f0;599;1;772;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_printTestStat($test_id, $group_id = 0, $user_id = 0, $startdate = 0, $enddate = 0, $testuser_id = 0, $ts = [], $display_mode = 2, $pubmode = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns test stats as HTML table&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID.&#10;     &lt;b&gt;$group_id&lt;/b&gt;: (int) group ID - if greater than zero, filter stats for the specified user group.&#10;     &lt;b&gt;$user_id&lt;/b&gt;: (int) user ID - if greater than zero, filter stats for the specified user.&#10;     &lt;b&gt;$startdate&lt;/b&gt;: (int) start date ID - if greater than zero, filter stats for the specified starting date&#10;     &lt;b&gt;$enddate&lt;/b&gt;: (int) end date ID - if greater than zero, filter stats for the specified ending date&#10;     &lt;b&gt;$testuser_id&lt;/b&gt;: (int) test-user ID - if greater than zero, filter stats for the specified test-user.&#10;     &lt;b&gt;$ts&lt;/b&gt;: (array) array of stats to print (leave empty to automatically generate new data).&#10;     &lt;b&gt;$display_mode&lt;/b&gt;: display (int) mode: 0 = disabled;s 1 = minimum;s 2 = module;s 3 = subject;s 4 = question;s 5 = answer.&#10;     &lt;b&gt;$pubmode&lt;/b&gt;: (boolean) If true filter the results for the public interface. return $data string containing HTML table.;;d0,600;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p $group_id;;p $user_id;;p $startdate;;p $enddate;;p $testuser_id;;p $ts;;p $display_mode;;p $pubmode;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_printUserTestStat;PHP:Function Name;2183298751;f0;956;1;1099;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_printUserTestStat($testuser_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns user test stats as HTML table&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$testuser_id&lt;/b&gt;: (int) test-user ID - if greater than zero, filter stats for the specified test-user. return $data string containing HTML table.;;d0,957;;b0,0;;m0;;e0;;i0;;o;;k;;l $testuser_id;;p;;x;;n">
</treenode>
<treenode node="F_print_error;PHP:Function Name;1674183291;f0;48;1;89;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_print_error($messagetype = &apos;MESSAGE&apos;, $messagetoprint = &apos;&apos;, $exit = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Handle error/warning/system messages.&#10;Print a message&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$messagetype&lt;/b&gt;: (string) Type of message:  0=no message, message;s warning;s error.&#10;     &lt;b&gt;$messagetoprint&lt;/b&gt;: (string)  message to print.&#10;     &lt;b&gt;$exit&lt;/b&gt;: (bool) if true output a message and terminate the current script [default = false].;;d0,49;;b0,0;;m0;;e0;;i0;;o;;k;;l $messagetype;;p $messagetoprint;;p $exit;;p;;x;;x;;x;;n">
</treenode>
<treenode node="F_questionForm;PHP:Function Name;1489315705;f0;1714;1;2034;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_questionForm($test_id, $testlog_id, $formname)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a formatted XHTML form code to handle the specified question.&lt;br&gt;&#10;Form fields names are: answer_text, answer_id&lt;br&gt;&#10;CSS classes:&lt;ul&gt;&#10;&lt;li&gt;div.tcecontentbox&lt;/li&gt;&#10;&lt;li&gt;div.rowl&lt;/li&gt;&#10;&lt;li&gt;textarea.answertext&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID&#10;     &lt;b&gt;$testlog_id&lt;/b&gt;: (int) test log ID&#10;     &lt;b&gt;$formname&lt;/b&gt;: (string) form name (form ID)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   XHTML code;;d0,1715;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p $testlog_id;;p $formname;;p;;x;;x;;x;;n">
<treenode node="../../shared/code/tce_functions_tcecode.php;PHP:PHP Include;1489315705;f18;1717;61;1717;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;1716;42;1716;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_question_copy;PHP:Function Name;1505151412;f0;163;1;283;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_question_copy($question_id, $new_subject_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Copy selected question to another topic&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2008-11-26&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$question_id&lt;/b&gt;: (int) question ID&#10;     &lt;b&gt;$new_subject_id&lt;/b&gt;: (int) new subject ID;;d0,164;;b0,0;;m0;;e0;;i0;;o;;k;;l $question_id;;p $new_subject_id;;p;;x;;x;;n">
</treenode>
<treenode node="F_question_delete;PHP:Function Name;1505151412;f0;113;1;154;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_question_delete($question_id, $subject_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Delete selected question (or disable it if used)&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2008-11-26&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$question_id&lt;/b&gt;: (int) question ID&#10;     &lt;b&gt;$subject_id&lt;/b&gt;: (int) subject ID;;d0,114;;b0,0;;m0;;e0;;i0;;o;;k;;l $question_id;;p $subject_id;;p;;x;;x;;n">
</treenode>
<treenode node="F_question_get_data;PHP:Function Name;1505151412;f0;85;1;104;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_question_get_data($question_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get question data&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2008-11-26&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$question_id&lt;/b&gt;: (int) question ID&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing selected question data, false in case of error;;d0,86;;b0,0;;m0;;e0;;i0;;o;;k;;l $question_id;;p;;x;;n">
</treenode>
<treenode node="F_question_get_position;PHP:Function Name;1505151412;f0;57;1;76;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_question_get_position($question_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get question position&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2008-11-26&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$question_id&lt;/b&gt;: (int) question ID&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   question position;;d0,58;;b0,0;;m0;;e0;;i0;;o;;k;;l $question_id;;p;;x;;n">
</treenode>
<treenode node="F_question_set_enabled;PHP:Function Name;1505151412;f0;37;1;48;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_question_set_enabled($question_id, $enabled = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Enable/Disable selected question&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2008-11-26&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$question_id&lt;/b&gt;: (int) question ID&#10;     &lt;b&gt;$enabled&lt;/b&gt;: (boolean) if true enables question, false otherwise;;d0,38;;b0,0;;m0;;e0;;i0;;o;;k;;l $question_id;;p $enabled;;p;;x;;x;;n">
</treenode>
<treenode node="F_questionsMenu;PHP:Function Name;1489315705;f0;2044;1;2182;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_questionsMenu($testdata, $testuser_id, $testlog_id = 0, $disable = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a questions menu and navigator buttons.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$testdata&lt;/b&gt;: (array) test data&#10;     &lt;b&gt;$testuser_id&lt;/b&gt;: (int) user&apos;s test ID&#10;     &lt;b&gt;$testlog_id&lt;/b&gt;: (int) test log ID&#10;     &lt;b&gt;$disable&lt;/b&gt;: (boolean) if TRUE disable the questions list.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   XHTML code;;d0,2045;;b0,0;;m0;;e0;;i0;;o;;k;;l $testdata;;p $testuser_id;;p $testlog_id;;p $disable;;p;;x;;x;;x;;x;;n">
<treenode node="../../shared/code/tce_functions_tcecode.php;PHP:PHP Include;1489315705;f18;2047;61;2047;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;2046;42;2046;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_read_file_size;PHP:Function Name;1512276986;f0;85;1;107;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_read_file_size($filetocheck)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    returns the file size in bytes&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2001-11-19&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$filetocheck&lt;/b&gt;: (string) file to check (local path or URL)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   file size in bytes or false in case of error;;d0,86;;b0,0;;m0;;e0;;i0;;o;;k;;l $filetocheck;;p;;x;;n">
</treenode>
<treenode node="F_remove_tcecode;PHP:Function Name;992194008;f0;481;1;504;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_remove_tcecode($str)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns specified string without tcecode mark-up tags&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$str&lt;/b&gt;: (string) text to process&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   without tcecode markup tags;;d0,482;;b0,0;;m0;;e0;;i0;;o;;k;;l $str;;p;;x;;n">
</treenode>
<treenode node="F_renameMediaFile;PHP:Function Name;2992992028;f0;72;1;116;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_renameMediaFile($filename, $newname)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Rename the selected media file&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$filename&lt;/b&gt;: (string) old file name&#10;     &lt;b&gt;$newname&lt;/b&gt;: (string) new file name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   in case of success, false otherwise;;d0,73;;b0,0;;m0;;e0;;i0;;o;;k;;l $filename;;p $newname;;p;;x;;x;;n">
</treenode>
<treenode node="F_repeatTest;PHP:Function Name;1489315705;f0;182;1;206;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_repeatTest($test_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Mark previous test attempts as repeated.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) Test ID;;d0,183;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;184;42;184;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_replace_angulars;PHP:Function Name;993074321;f0;189;1;196;;;;vpos;;v;;aconverted;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_replace_angulars($str)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Replace angular parenthesis with html equivalents (html entities).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$str&lt;/b&gt;: (string) input string to convert&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   string;;d0,190;;b0,0;;m0;;e0;;i0;;o;;k;;l $str;;p;;x;;n">
</treenode>
<treenode node="F_selectAnswers;PHP:Function Name;1489315705;f0;790;1;863;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_selectAnswers($question_id, $isright = &apos;&apos;, $ordering = false, $limit = 0, $startindex = 0, $randorder = true, $ordmode = 0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return an array containing answer_id field of selected answers.&lt;br&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$question_id&lt;/b&gt;: (int) Question ID.&#10;     &lt;b&gt;$isright&lt;/b&gt;: (int) Value (0 = false, 1 = true), if non-empty checks for answer_isright value on WHERE clause.&#10;     &lt;b&gt;$ordering&lt;/b&gt;: (int) Ordering type question (0 = false, 1 = true).&#10;     &lt;b&gt;$limit&lt;/b&gt;: (int) Maximum number of IDs to return.&#10;     &lt;b&gt;$startindex&lt;/b&gt;: (int) Array starting index (default = 0).&#10;     &lt;b&gt;$randorder&lt;/b&gt;: (boolean) If true user random order.&#10;     &lt;b&gt;$ordmode&lt;/b&gt;: (int) Ordering mode: 0=position;s 1=alphabetical;s 2=ID.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   id of selected answers;;d0,791;;b0,0;;m0;;e0;;i0;;o;;k;;l $question_id;;p $isright;;p $ordering;;p $limit;;p $startindex;;p $randorder;;p $ordmode;;p;;x;;x;;x;;x;;x;;x;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;792;42;792;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_select_executed_tests_sql;PHP:Function Name;3446430990;f0;117;1;133;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_select_executed_tests_sql()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a SQL string to select executed tests accounting for user authorizations.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2006-06-26&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   sql statement;;d0,118;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="F_select_module_subjects_sql;PHP:Function Name;3446430990;f0;75;1;91;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_select_module_subjects_sql($andwhere = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a SQL string to select modules and subjects accounting for user authorizations.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2008-11-28&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$andwhere&lt;/b&gt;: (string) additional WHERE statements (e.g.: &quot;subject_enabled=&apos;1&apos;&quot;)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   sql statement;;d0,76;;b0,0;;m0;;e0;;i0;;o;;k;;l $andwhere;;p;;x;;n">
</treenode>
<treenode node="F_select_modules_sql;PHP:Function Name;3446430990;f0;37;1;54;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_select_modules_sql($andwhere = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a SQL string to select modules accounting for user authorizations.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2010-06-16&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$andwhere&lt;/b&gt;: (string) additional WHERE statements (e.g.: &quot;module_enabled=&apos;1&apos;&quot;)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   sql statement;;d0,38;;b0,0;;m0;;e0;;i0;;o;;k;;l $andwhere;;p;;x;;n">
</treenode>
<treenode node="F_select_subjects_sql;PHP:Function Name;3446430990;f0;63;1;66;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_select_subjects_sql($andwhere = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a SQL string to select subjects accounting for user authorizations.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2006-03-12&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$andwhere&lt;/b&gt;: (string) additional WHERE statements (e.g.: &quot;subject_enabled=&apos;1&apos;&quot;)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   sql statement;;d0,64;;b0,0;;m0;;e0;;i0;;o;;k;;l $andwhere;;p;;x;;n">
</treenode>
<treenode node="F_select_table_header_element;PHP:Function Name;993074321;f0;653;1;667;;;;vpos;;v;;atable;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_select_table_header_element($order_field, $orderdir, $title, $name, $current_order_field = &apos;&apos;, $filter = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Display table header element with order link.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$order_field&lt;/b&gt;: (string) name of table field&#10;     &lt;b&gt;$orderdir&lt;/b&gt;: (string) order direction&#10;     &lt;b&gt;$title&lt;/b&gt;: title (string) field of anchor link&#10;     &lt;b&gt;$name&lt;/b&gt;: column (string) name&#10;     &lt;b&gt;$current_order_field&lt;/b&gt;: (string) current order field name&#10;     &lt;b&gt;$filter&lt;/b&gt;: (string) additional parameters to pass on URL&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   header element string;;d0,654;;b0,0;;m0;;e0;;i0;;o;;k;;l $order_field;;p $orderdir;;p $title;;p $name;;p $current_order_field;;p $filter;;p;;x;;x;;x;;x;;x;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;993074321;f18;656;42;656;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_select_test;PHP:Function Name;3752289128;f0;41;1;47;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_select_test($order_field, $orderdir, $firstrow, $rowsperpage, $andwhere = &apos;&apos;, $searchterms = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Display test selection for using F_show_select_test function.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$order_field&lt;/b&gt;: (string) order by column name&#10;     &lt;b&gt;$orderdir&lt;/b&gt;: (string) oreder direction&#10;     &lt;b&gt;$firstrow&lt;/b&gt;: (string) number of first row to display&#10;     &lt;b&gt;$rowsperpage&lt;/b&gt;: (string) number of rows per page&#10;     &lt;b&gt;$andwhere&lt;/b&gt;: (string) additional SQL WHERE query conditions&#10;     &lt;b&gt;$searchterms&lt;/b&gt;: (string) search terms;;d0,42;;b0,0;;m0;;e0;;i0;;o;;k;;l $order_field;;p $orderdir;;p $firstrow;;p $rowsperpage;;p $andwhere;;p $searchterms;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_select_tests_sql;PHP:Function Name;3446430990;f0;99;1;109;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_select_tests_sql()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a SQL string to select tests accounting for user authorizations.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2006-03-12&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   sql statement;;d0,100;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="F_select_user;PHP:Function Name;3456378455;f0;43;1;49;;;;vpos;;v;;atrue;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_select_user($order_field, $orderdir, $firstrow, $rowsperpage, $group_id = 0, $andwhere = &apos;&apos;, $searchterms = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Display user selection for using F_show_select_user function.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2001-09-13&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$order_field&lt;/b&gt;: (string) order by column name&#10;     &lt;b&gt;$orderdir&lt;/b&gt;: (string) oreder direction&#10;     &lt;b&gt;$firstrow&lt;/b&gt;: (string) number of first row to display&#10;     &lt;b&gt;$rowsperpage&lt;/b&gt;: (string) number of rows per page&#10;     &lt;b&gt;$group_id&lt;/b&gt;: (int) id of the group (default = 0 = no specific group selected)&#10;     &lt;b&gt;$andwhere&lt;/b&gt;: (string) additional SQL WHERE query conditions&#10;     &lt;b&gt;$searchterms&lt;/b&gt;: (string) search terms;;d0,44;;b0,0;;m0;;e0;;i0;;o;;k;;l $order_field;;p $orderdir;;p $firstrow;;p $rowsperpage;;p $group_id;;p $andwhere;;p $searchterms;;p;;x;;x;;x;;x;;x;;x;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;3456378455;f18;46;42;46;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_send_report_emails;PHP:Function Name;2330344623;f0;44;1;213;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_send_report_emails($test_id, $user_id = 0, $testuser_id = 0, $group_id = 0, $startdate = 0, $enddate = 0, $mode = 0, $display_mode = 1, $show_graph = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sends email test reports to users.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2005-02-24&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) TEST ID&#10;     &lt;b&gt;$user_id&lt;/b&gt;: (int) USER ID (0 means all users)&#10;     &lt;b&gt;$testuser_id&lt;/b&gt;: (int) test-user ID - if greater than zero, filter stats for the specified test-user.&#10;     &lt;b&gt;$group_id&lt;/b&gt;: (int) GROUP ID (0 means all groups)&#10;     &lt;b&gt;$startdate&lt;/b&gt;: (int) start date ID - if greater than zero, filter stats for the specified starting date&#10;     &lt;b&gt;$enddate&lt;/b&gt;: (int) end date ID - if greater than zero, filter stats for the specified ending date&#10;     &lt;b&gt;$mode&lt;/b&gt;: (int) type of report to send: 0=detailed report;s 1=summary report (without questions)&#10;     &lt;b&gt;$display_mode&lt;/b&gt;: display (int) mode: 0 = disabled;s 1 = minimum;s 2 = module;s 3 = subject;s 4 = question;s 5 = answer.&#10;     &lt;b&gt;$show_graph&lt;/b&gt;: (boolean) If true display the score graph.;;d0,45;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p $user_id;;p $testuser_id;;p $group_id;;p $startdate;;p $enddate;;p $mode;;p $display_mode;;p $show_graph;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_send_user_reg_email;PHP:Function Name;254831080;f0;36;1;113;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_send_user_reg_email($user_id, $user_email, $user_verifycode)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Send a registration verification email to user.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$user_id&lt;/b&gt;: (int) User ID&#10;     &lt;b&gt;$user_email&lt;/b&gt;: (string) User email&#10;     &lt;b&gt;$user_verifycode&lt;/b&gt;: (string) user verification code;;d0,37;;b0,0;;m0;;e0;;i0;;o;;k;;l $user_id;;p $user_email;;p $user_verifycode;;p;;x;;x;;x;;n">
</treenode>
<treenode node="F_session_close;PHP:Function Name;1592309833;f0;62;1;66;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_session_close()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Close session.&lt;br&gt;&#10;Call garbage collector function to remove expired sessions.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   always TRUE;;d0,63;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="F_session_destroy;PHP:Function Name;1592309833;f0;146;1;152;;;;vpos;;v;;aresource;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_session_destroy($key)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Deletes the specific session.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$key&lt;/b&gt;: (string) session ID of session to destroy.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   database query result.;;d0,147;;b0,0;;m0;;e0;;i0;;o;;k;;l $key;;p;;x;;n">
</treenode>
<treenode node="F_session_gc;PHP:Function Name;1592309833;f0;160;1;170;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_session_gc()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Garbage collector.&lt;br&gt;&#10;Deletes expired sessions.&lt;br&gt;&#10;NOTE: while time() function returns a 32 bit integer, it works fine until year 2038.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   number of deleted sessions.;;d0,161;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="F_session_open;PHP:Function Name;1592309833;f0;52;1;55;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_session_open($save_path, $session_name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Open session.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$save_path&lt;/b&gt;: (string) path were to store session data&#10;     &lt;b&gt;$session_name&lt;/b&gt;: (string) name of session&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   always TRUE;;d0,53;;b0,0;;m0;;e0;;i0;;o;;k;;l $save_path;;p $session_name;;p;;x;;x;;n">
</treenode>
<treenode node="F_session_read;PHP:Function Name;1592309833;f0;73;1;91;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_session_read($key)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get session data.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$key&lt;/b&gt;: (string) session ID.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   session data.;;d0,74;;b0,0;;m0;;e0;;i0;;o;;k;;l $key;;p;;x;;n">
</treenode>
<treenode node="F_session_string_to_array;PHP:Function Name;1592309833;f0;179;1;191;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_session_string_to_array($sd)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert encoded session string data to array.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2001-10-18&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$sd&lt;/b&gt;: (string) input data string;;d0,180;;b0,0;;m0;;e0;;i0;;o;;k;;l $sd;;p;;x;;n">
</treenode>
<treenode node="F_session_write;PHP:Function Name;1592309833;f0;99;1;139;;;;vpos;;v;;aresource;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_session_write($key, $val)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Insert or Update session.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$key&lt;/b&gt;: (string) session ID.&#10;     &lt;b&gt;$val&lt;/b&gt;: (string) session data.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   database query result.;;d0,100;;b0,0;;m0;;e0;;i0;;o;;k;;l $key;;p $val;;p;;x;;x;;n">
</treenode>
<treenode node="F_show_online_users;PHP:Function Name;4016702483;f0;41;1;47;;;;vpos;;v;;afalse;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_show_online_users($wherequery, $order_field, $orderdir, $firstrow, $rowsperpage)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Display online users form using F_list_online_users function.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2001-10-18&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$wherequery&lt;/b&gt;: (string) users selection query&#10;     &lt;b&gt;$order_field&lt;/b&gt;: (string) order by column name&#10;     &lt;b&gt;$orderdir&lt;/b&gt;: (string) oreder direction&#10;     &lt;b&gt;$firstrow&lt;/b&gt;: (string) number of first row to display&#10;     &lt;b&gt;$rowsperpage&lt;/b&gt;: (string) number of rows per page&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   in case of empty database, true otherwise;;d0,42;;b0,0;;m0;;e0;;i0;;o;;k;;l $wherequery;;p $order_field;;p $orderdir;;p $firstrow;;p $rowsperpage;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_show_page_navigator;PHP:Function Name;4200158612;f0;39;1;115;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_show_page_navigator($script_name, $sql, $firstrow, $rowsperpage, $param_array)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Display Pages navigation index.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$script_name&lt;/b&gt;: (string) url of the calling page&#10;     &lt;b&gt;$sql&lt;/b&gt;: (string) sql used to select records&#10;     &lt;b&gt;$firstrow&lt;/b&gt;: (int) first row number&#10;     &lt;b&gt;$rowsperpage&lt;/b&gt;: (int) number of max rows per page&#10;     &lt;b&gt;$param_array&lt;/b&gt;: (string) parameters to pass on url via GET&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the number of pages in case of success, FALSE otherwise;;d0,40;;b0,0;;m0;;e0;;i0;;o;;k;;l $script_name;;p $sql;;p $firstrow;;p $rowsperpage;;p $param_array;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_show_select_questions;PHP:Function Name;1785988224;f0;362;1;620;;;;vpos;;v;;afalse;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_show_select_questions($wherequery, $subject_module_id, $subject_id, $order_field, $orderdir, $firstrow, $rowsperpage, $hide_answers = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Display a list of selected questions.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2005-07-06&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$wherequery&lt;/b&gt;: (string) question selection query&#10;     &lt;b&gt;$subject_module_id&lt;/b&gt;: (string) module ID&#10;     &lt;b&gt;$subject_id&lt;/b&gt;: (string) topic ID&#10;     &lt;b&gt;$order_field&lt;/b&gt;: (string) order by column name&#10;     &lt;b&gt;$orderdir&lt;/b&gt;: (int) oreder direction&#10;     &lt;b&gt;$firstrow&lt;/b&gt;: (int) number of first row to display&#10;     &lt;b&gt;$rowsperpage&lt;/b&gt;: (int) number of rows per page&#10;     &lt;b&gt;$hide_answers&lt;/b&gt;: (boolean) if true hide answers&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   in case of empty database, true otherwise;;d0,363;;b0,0;;m0;;e0;;i0;;o;;k;;l $wherequery;;p $subject_module_id;;p $subject_id;;p $order_field;;p $orderdir;;p $firstrow;;p $rowsperpage;;p $hide_answers;;p;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_show_select_test;PHP:Function Name;3752289128;f0;60;1;214;;;;vpos;;v;;afalse;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_show_select_test($order_field, $orderdir, $firstrow, $rowsperpage, $andwhere = &apos;&apos;, $searchterms = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Display test selection XHTML table.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$order_field&lt;/b&gt;: (string) Order by column name.&#10;     &lt;b&gt;$orderdir&lt;/b&gt;: (int) Order direction.&#10;     &lt;b&gt;$firstrow&lt;/b&gt;: (int) Number of first row to display.&#10;     &lt;b&gt;$rowsperpage&lt;/b&gt;: (int) Number of rows per page.&#10;     &lt;b&gt;$andwhere&lt;/b&gt;: (string) Additional SQL WHERE query conditions.&#10;     &lt;b&gt;$searchterms&lt;/b&gt;: (string) Search terms.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   in case of empty database, true otherwise;;d0,61;;b0,0;;m0;;e0;;i0;;o;;k;;l $order_field;;p $orderdir;;p $firstrow;;p $rowsperpage;;p $andwhere;;p $searchterms;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_show_select_test_popup;PHP:Function Name;3752289128;f0;229;1;356;;;;vpos;;v;;afalse;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_show_select_test_popup($order_field, $orderdir, $firstrow, $rowsperpage, $andwhere = &apos;&apos;, $searchterms = &apos;&apos;, $cid = 0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Display user selection XHTML table (popup mode).&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2012-04-14&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$order_field&lt;/b&gt;: (string) Order by column name.&#10;     &lt;b&gt;$orderdir&lt;/b&gt;: (int) Order direction.&#10;     &lt;b&gt;$firstrow&lt;/b&gt;: (int) Number of first row to display.&#10;     &lt;b&gt;$rowsperpage&lt;/b&gt;: (int) Number of rows per page.&#10;     &lt;b&gt;$andwhere&lt;/b&gt;: (string) Additional SQL WHERE query conditions.&#10;     &lt;b&gt;$searchterms&lt;/b&gt;: (string) Search terms.&#10;    string &lt;b&gt;$cid&lt;/b&gt;: ID of the calling form field.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   in case of empty database, true otherwise;;d0,230;;b0,0;;m0;;e0;;i0;;o;;k;;l $order_field;;p $orderdir;;p $firstrow;;p $rowsperpage;;p $andwhere;;p $searchterms;;p $cid;;p;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_show_select_user;PHP:Function Name;3456378455;f0;64;1;290;;;;vpos;;v;;afalse;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_show_select_user($order_field, $orderdir, $firstrow, $rowsperpage, $group_id = 0, $andwhere = &apos;&apos;, $searchterms = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Display user selection XHTML table.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2001-09-13&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$order_field&lt;/b&gt;: (string) Order by column name.&#10;     &lt;b&gt;$orderdir&lt;/b&gt;: (int) Order direction.&#10;     &lt;b&gt;$firstrow&lt;/b&gt;: (int) Number of first row to display.&#10;     &lt;b&gt;$rowsperpage&lt;/b&gt;: (int) Number of rows per page.&#10;     &lt;b&gt;$group_id&lt;/b&gt;: (int) ID of the group (default = 0 = no specific group selected).&#10;     &lt;b&gt;$andwhere&lt;/b&gt;: (string) Additional SQL WHERE query conditions.&#10;     &lt;b&gt;$searchterms&lt;/b&gt;: (string) Search terms.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   in case of empty database, true otherwise;;d0,65;;b0,0;;m0;;e0;;i0;;o;;k;;l $order_field;;p $orderdir;;p $firstrow;;p $rowsperpage;;p $group_id;;p $andwhere;;p $searchterms;;p;;x;;x;;x;;x;;x;;x;;x;;n">
<treenode node="../../shared/code/tce_functions_form.php;PHP:PHP Include;3456378455;f18;69;58;69;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_functions_page.php;PHP:PHP Include;3456378455;f18;68;58;68;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../config/tce_config.php;PHP:PHP Include;3456378455;f18;67;42;67;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_show_select_user_popup;PHP:Function Name;3456378455;f0;306;1;476;;;;vpos;;v;;afalse;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_show_select_user_popup($order_field, $orderdir, $firstrow, $rowsperpage, $group_id = 0, $andwhere = &apos;&apos;, $searchterms = &apos;&apos;, $cid = 0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Display user selection XHTML table (popup mode).&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2012-04-14&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$order_field&lt;/b&gt;: (string) Order by column name.&#10;     &lt;b&gt;$orderdir&lt;/b&gt;: (int) Order direction.&#10;     &lt;b&gt;$firstrow&lt;/b&gt;: (int) Number of first row to display.&#10;     &lt;b&gt;$rowsperpage&lt;/b&gt;: (int) Number of rows per page.&#10;     &lt;b&gt;$group_id&lt;/b&gt;: (int) ID of the group (default = 0 = no specific group selected).&#10;     &lt;b&gt;$andwhere&lt;/b&gt;: (string) Additional SQL WHERE query conditions.&#10;     &lt;b&gt;$searchterms&lt;/b&gt;: (string) Search terms.&#10;    string &lt;b&gt;$cid&lt;/b&gt;: ID of the calling form field.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   in case of empty database, true otherwise;;d0,307;;b0,0;;m0;;e0;;i0;;o;;k;;l $order_field;;p $orderdir;;p $firstrow;;p $rowsperpage;;p $group_id;;p $andwhere;;p $searchterms;;p $cid;;p;;x;;x;;x;;x;;x;;x;;x;;x;;n">
<treenode node="../../shared/code/tce_functions_form.php;PHP:PHP Include;3456378455;f18;311;58;311;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../../shared/code/tce_functions_page.php;PHP:PHP Include;3456378455;f18;310;58;310;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../config/tce_config.php;PHP:PHP Include;3456378455;f18;309;42;309;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_stripslashes_formfields;PHP:Function Name;1957715841;f0;184;1;195;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_stripslashes_formfields()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Strip slashes from posted form fields.;;d0,185;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="F_submit_button;PHP:Function Name;1957715841;f0;225;1;228;;;;vpos;;v;;aXHTML;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_submit_button($name, $value, $title = &apos;&apos;, $extra = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns XHTML code string to display Form Submit Button.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$name&lt;/b&gt;: (string) button name&#10;     &lt;b&gt;$value&lt;/b&gt;: (string) label for button&#10;     &lt;b&gt;$title&lt;/b&gt;: (string) button title, default=&apos;&apos;&#10;     &lt;b&gt;$extra&lt;/b&gt;: (string) optional extra fields to add to the input tag, default=&apos;&apos;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   code string;;d0,226;;b0,0;;m0;;e0;;i0;;o;;k;;l $name;;p $value;;p $title;;p $extra;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_substrHTML;PHP:Function Name;992194008;f0;554;1;612;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_substrHTML($htmltext, $min_length = 100, $offset_length = 20)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return a substring of XHTML code while making sure no html tags are chopped.&#10;It also prevents chopping while a tag is still open.&#10;this function is based on a public-domain script posted on www.php.net by fox&#10;&lt;b&gt;conskript&lt;/b&gt;: .server and mr&#10;&lt;b&gt;bbp&lt;/b&gt;: .biz&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$htmltext&lt;/b&gt;: (string)&#10;     &lt;b&gt;$min_length&lt;/b&gt;: (int) (default=100) the approximate length you want the concatenated text to be&#10;     &lt;b&gt;$offset_length&lt;/b&gt;: (int) (default=20) the max variation in how long the text can be;;d0,555;;b0,0;;m0;;e0;;i0;;o;;k;;l $htmltext;;p $min_length;;p $offset_length;;p;;x;;x;;x;;n">
</treenode>
<treenode node="F_substr_utf8;PHP:Function Name;993074321;f0;205;1;238;;;;vpos;;v;;asubstring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_substr_utf8($str, $start, $length)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Performs a multi-byte safe substr() operation based on number of characters.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$str&lt;/b&gt;: (string) input string&#10;     &lt;b&gt;$start&lt;/b&gt;: (int) substring start index&#10;     &lt;b&gt;$length&lt;/b&gt;: (int) substring max lenght;;d0,206;;b0,0;;m0;;e0;;i0;;o;;k;;l $str;;p $start;;p $length;;p;;x;;x;;x;;n">
</treenode>
<treenode node="F_syncUserGroups;PHP:Function Name;454821484;f0;268;1;328;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_syncUserGroups($usrid, $grpids)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sync user groups with the ones specified on the configuration file for alternate authentication.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2012-09-11&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$usrid&lt;/b&gt;: (int) ID of the user to update.&#10;     &lt;b&gt;$grpids&lt;/b&gt;: (mixed) Group ID or comma separated list of group IDs (0=all available groups).;;d0,269;;b0,0;;m0;;e0;;i0;;o;;k;;l $usrid;;p $grpids;;p;;x;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;454821484;f18;271;42;271;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_tcecodeToLine;PHP:Function Name;992194008;f0;511;1;530;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_tcecodeToLine($str)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Converts tcecode text to a single XHTML string removing some objects.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$str&lt;/b&gt;: (string) text to process return string;;d0,512;;b0,0;;m0;;e0;;i0;;o;;k;;l $str;;p;;x;;n">
</treenode>
<treenode node="F_tcecodeToTitle;PHP:Function Name;992194008;f0;537;1;544;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_tcecodeToTitle($str)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Converts tcecode text to simple string for XHTML title attribute.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$str&lt;/b&gt;: (string) text to process return string;;d0,538;;b0,0;;m0;;e0;;i0;;o;;k;;l $str;;p;;x;;n">
</treenode>
<treenode node="F_terminateUserTest;PHP:Function Name;1489315705;f0;339;1;353;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_terminateUserTest($test_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Terminate user&apos;s test&lt;br&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.000 (2006-09-27)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID;;d0,340;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;341;42;341;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_testComment;PHP:Function Name;1489315705;f0;2213;1;2244;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_testComment($test_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Display a textarea for user&apos;s comment.&lt;br&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.000 (2006-10-01)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   XHTML code;;d0,2214;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;2215;42;2215;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_testInfoLink;PHP:Function Name;1489315705;f0;467;1;486;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_testInfoLink($test_id, $link_name = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns XHTML link to open test info popup.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID&#10;     &lt;b&gt;$link_name&lt;/b&gt;: (string) link caption return XHTML code;;d0,468;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p $link_name;;p;;x;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;469;42;469;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_testLoginForm;PHP:Function Name;1489315705;f0;2286;1;2309;;;;vpos;;v;;aXHTML;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_testLoginForm($faction, $fid, $fmethod, $fenctype, $test_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns XHTML / CSS formatted page string to insert the test password.&lt;br&gt;&#10;The CSS classes used are:&#10;&lt;ul&gt;&#10;&lt;li&gt;div.login_form : container for login box&lt;/li&gt;&#10;&lt;li&gt;div.login_form div.login_row : container for label + input field or button&lt;/li&gt;&#10;&lt;li&gt;div.login_form div.login_row span.label : container for input label&lt;/li&gt;&#10;&lt;li&gt;div.login_form div.login_row span.formw : container for input form&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    faction: String action attribute&#10;    fid: String form ID attribute&#10;    fmethod: String method attribute (get/post)&#10;    fenctype: String enctype attribute&#10;    test_id: int ID of the test&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   string for login form;;d0,2287;;b0,0;;m0;;e0;;i0;;o;;k;;l;;p;;p;;p;;p;;p;;x;;x;;x;;x;;x;;n">
<treenode node="../../shared/code/tce_functions_form.php;PHP:PHP Include;1489315705;f18;2290;58;2290;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;2289;42;2289;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_text_to_tsv;PHP:Function Name;993074321;f0;284;1;297;;;;vpos;;v;;aconverted;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_text_to_tsv($str)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Escape some special characters for TSV output.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$str&lt;/b&gt;: (string) input string to convert&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   string;;d0,285;;b0,0;;m0;;e0;;i0;;o;;k;;l $str;;p;;x;;n">
</treenode>
<treenode node="F_text_to_xml;PHP:Function Name;993074321;f0;245;1;258;;;;vpos;;v;;aconverted;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_text_to_xml($str)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Escape some special characters (&amp;lt;s &amp;gt;s &amp;amp;s).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$str&lt;/b&gt;: (string) input string to convert&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   string;;d0,246;;b0,0;;m0;;e0;;i0;;o;;k;;l $str;;p;;x;;n">
</treenode>
<treenode node="F_tsv_export_questions;PHP:Function Name;3774753460;f0;87;1;215;;;;vpos;;v;;aTSV;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_tsv_export_questions($module_id, $subject_id, $expmode)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Export all questions of the selected subject to TSV.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$module_id&lt;/b&gt;: (int)  module ID&#10;     &lt;b&gt;$subject_id&lt;/b&gt;: (int) topic ID&#10;     &lt;b&gt;$expmode&lt;/b&gt;: (int) export mode: 1 = selected topic;s 2 = selected module;s 3 = all modules.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   data;;d0,88;;b0,0;;m0;;e0;;i0;;o;;k;;l $module_id;;p $subject_id;;p $expmode;;p;;x;;x;;x;;n">
</treenode>
<treenode node="F_tsv_export_users;PHP:Function Name;844258771;f0;61;1;142;;;;vpos;;v;;aTSV;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_tsv_export_users()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Export all users to TSV grouped by users&apos; groups.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2006-03-30&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   data;;d0,62;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="F_tsv_to_text;PHP:Function Name;993074321;f0;304;1;316;;;;vpos;;v;;aconverted;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_tsv_to_text($str)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Unescape some special characters from TSV format.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$str&lt;/b&gt;: (string) input string to convert&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   string;;d0,305;;b0,0;;m0;;e0;;i0;;o;;k;;l $str;;p;;x;;n">
</treenode>
<treenode node="F_twoColRow;PHP:Function Name;1489315705;f0;677;1;690;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_twoColRow($label = &quot;&quot;, $description = &quot;&quot;, $value = &quot;&quot;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return a formatted XHTML row to display 2 columns data.&lt;br&gt;&#10;See CSS classes:&lt;ul&gt;&#10;&lt;li&gt;div.row span.label&lt;/li&gt;&#10;&lt;li&gt;div.row span.formw&lt;/li&gt;&#10;&lt;/ul&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$label&lt;/b&gt;: (string) string to display on the left column&#10;     &lt;b&gt;$description&lt;/b&gt;: (string) string to display on the title attribute of the left column field&#10;     &lt;b&gt;$value&lt;/b&gt;: (string) string to display on the right column&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   XHTML code;;d0,678;;b0,0;;m0;;e0;;i0;;o;;k;;l $label;;p $description;;p $value;;p;;x;;x;;x;;n">
</treenode>
<treenode node="F_updateQuestionLog;PHP:Function Name;1489315705;f0;1440;1;1671;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_updateQuestionLog($test_id, $testlog_id, $answpos = [], $answer_text = &apos;&apos;, $reaction_time = 0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Updates question log data (register user&apos;s answers and calculate scores).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID&#10;     &lt;b&gt;$testlog_id&lt;/b&gt;: (int) test log ID&#10;     &lt;b&gt;$answpos&lt;/b&gt;: (array) Array of answer positions&#10;     &lt;b&gt;$answer_text&lt;/b&gt;: (string) answer text&#10;     &lt;b&gt;$reaction_time&lt;/b&gt;: (int) reaction time in milliseconds&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   TRUE in case of success, FALSE otherwise;;d0,1441;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p $testlog_id;;p $answpos;;p $answer_text;;p $reaction_time;;p;;x;;x;;x;;x;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;1442;42;1442;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_updateTestComment;PHP:Function Name;1489315705;f0;2253;1;2268;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_updateTestComment($test_id, $testcomment)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Updates user&apos;s test comment.&lt;br&gt;&#10;&lt;b&gt;since&lt;/b&gt;: 4.0.000 (2006-10-01)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID&#10;     &lt;b&gt;$testcomment&lt;/b&gt;: (string) user comment.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   XHTML code;;d0,2254;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p $testcomment;;p;;x;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;2255;42;2255;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_updateTestuserStat;PHP:Function Name;1489315705;f0;1041;1;1049;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_updateTestuserStat($date)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Track generated tests.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$date&lt;/b&gt;: (string) date-time when the test was generated.;;d0,1042;;b0,0;;m0;;e0;;i0;;o;;k;;l $date;;p;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;1489315705;f18;1043;42;1043;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_update_config_files;PHP:Function Name;3055214671;f0;254;1;379;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_update_config_files($db_type, $db_host, $db_port, $db_user, $db_password, $database_name, $table_prefix, $path_host, $path_tcexam, $path_main, $standard_port, $progress_log)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Update some configuration files.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$db_type&lt;/b&gt;: database type (MySQL)&#10;    string &lt;b&gt;$db_host&lt;/b&gt;: database host&#10;    string &lt;b&gt;$db_port&lt;/b&gt;: database port number&#10;    string &lt;b&gt;$db_user&lt;/b&gt;: database user&#10;    string &lt;b&gt;$db_password&lt;/b&gt;: database password&#10;    string &lt;b&gt;$database_name&lt;/b&gt;: database name&#10;    string &lt;b&gt;$table_prefix&lt;/b&gt;: table prefix&#10;    string &lt;b&gt;$path_host&lt;/b&gt;: host URL&#10;    string &lt;b&gt;$path_tcexam&lt;/b&gt;: relative URL where this program is installed&#10;    string &lt;b&gt;$path_main&lt;/b&gt;: real full server path where this program is installed&#10;    string &lt;b&gt;$standard_port&lt;/b&gt;: standard http web port&#10;    string &lt;b&gt;$progress_log&lt;/b&gt;: log file name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true in case of success, false otherwise;;d185,254;;b0,0;;m0;;e0;;i0;;o;;k;;l $db_type;;p $db_host;;p $db_port;;p $db_user;;p $db_password;;p $database_name;;p $table_prefix;;p $path_host;;p $path_tcexam;;p $path_main;;p $standard_port;;p $progress_log;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_upload_file;PHP:Function Name;1512276986;f0;56;1;76;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_upload_file($fieldname, $uploaddir)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Uploads image file to the server.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2010-06-12&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$fieldname&lt;/b&gt;: (string) form field name containing the source file path&#10;     &lt;b&gt;$uploaddir&lt;/b&gt;: (string) upload directory&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   file name or false in case of error;;d0,57;;b0,0;;m0;;e0;;i0;;o;;k;;l $fieldname;;p $uploaddir;;p;;x;;x;;n">
</treenode>
<treenode node="F_url_exists;PHP:Function Name;1674183291;f0;134;1;153;;;;vpos;;v;;aReturns;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_url_exists($url)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if the URL exist.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    url: (string) URL to check.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   TRUE if the URL exists;s FALSE otherwise.;;d0,135;;b0,0;;m0;;e0;;i0;;o;;k;;l;;p;;x;;n">
</treenode>
<treenode node="F_user_group_select;PHP:Function Name;3456378455;f0;573;1;592;;;;vpos;;v;;atable;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_user_group_select($name = &apos;group_id&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Display select box for user groups&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$name&lt;/b&gt;: (string) name of the select field&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   header element string;;d0,574;;b0,0;;m0;;e0;;i0;;o;;k;;l $name;;p;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;3456378455;f18;576;42;576;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_user_group_select_sql;PHP:Function Name;3456378455;f0;546;1;566;;;;vpos;;v;;asql;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_user_group_select_sql($where = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the SQL selection query for user groups&#10;&lt;b&gt;since&lt;/b&gt;: 11.1.003 (2010-10-05)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$where&lt;/b&gt;: (string) filters to add on WHERE clause&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   selection string;;d0,547;;b0,0;;m0;;e0;;i0;;o;;k;;l $where;;p;;x;;n">
<treenode node="../config/tce_config.php;PHP:PHP Include;3456378455;f18;549;42;549;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F_utf8_normalizer;PHP:Function Name;993074321;f0;708;1;746;;;;vpos;;v;;anormalized;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_utf8_normalizer($str, $mode = &apos;NONE&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Normalize the UTF-8 input string.&#10;Modes greater than 0 requires php5-intl module.&#10;Please edit this function to implement your custom normalization method.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$str&lt;/b&gt;: (string) UTF-8 string to normalize.&#10;     &lt;b&gt;$mode&lt;/b&gt;: (int) Normalization type: NONE=None;s C=Normalization Form C (NFC) - Canonical Decomposition followed by Canonical Composition;s D=Normalization Form D (NFD) - Canonical Decomposition;s KC=Normalization Form KC (NFKC) - Compatibility Decomposition, followed by Canonical Composition;s KD=Normalization Form KD (NFKD) - Compatibility Decomposition;s CUSTOM=Custom normalization using user defined function &apos;user_utf8_custom_normalizer&apos;.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   string using the specified algorithm.;;d0,709;;b0,0;;m0;;e0;;i0;;o;;k;;l $str;;p $mode;;p;;x;;x;;n">
</treenode>
<treenode node="F_xml_export_question_stats;PHP:Function Name;1698002233;f0;102;1;243;;;;vpos;;v;;aXML;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_xml_export_question_stats($test_id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Export all question statistics of the selected test to XML.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2010-05-10&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   data;;d0,103;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p;;x;;n">
</treenode>
<treenode node="F_xml_export_questions;PHP:Function Name;3355355036;f0;116;1;290;;;;vpos;;v;;aXML;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_xml_export_questions($module_id, $subject_id, $expmode)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Export all questions of the selected subject to XML.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2006-03-06&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$module_id&lt;/b&gt;: (int)  module ID&#10;     &lt;b&gt;$subject_id&lt;/b&gt;: (int) topic ID&#10;     &lt;b&gt;$expmode&lt;/b&gt;: (int) export mode: 1 = selected topic;s 2 = selected module;s 3 = all modules.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   data;;d0,117;;b0,0;;m0;;e0;;i0;;o;;k;;l $module_id;;p $subject_id;;p $expmode;;p;;x;;x;;x;;n">
</treenode>
<treenode node="F_xml_export_results;PHP:Function Name;355957563;f0;122;1;148;;;;vpos;;v;;aXML;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_xml_export_results($test_id, $group_id = 0, $user_id = 0, $startdate = 0, $enddate = 0, $display_mode = 1)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Export results in XML format.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$test_id&lt;/b&gt;: (int) test ID.&#10;     &lt;b&gt;$group_id&lt;/b&gt;: (int) group ID - if greater than zero, filter stats for the specified user group.&#10;     &lt;b&gt;$user_id&lt;/b&gt;: (int) user ID - if greater than zero, filter stats for the specified user.&#10;     &lt;b&gt;$startdate&lt;/b&gt;: (int) start date ID - if greater than zero, filter stats for the specified starting date&#10;     &lt;b&gt;$enddate&lt;/b&gt;: (int) end date ID - if greater than zero, filter stats for the specified ending date&#10;     &lt;b&gt;$display_mode&lt;/b&gt;: (int) display mode: 0 = disabled;s 1 = minimum;s 2 = module;s 3 = subject;s 4 = question;s 5 = answer.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   data;;d0,123;;b0,0;;m0;;e0;;i0;;o;;k;;l $test_id;;p $group_id;;p $user_id;;p $startdate;;p $enddate;;p $display_mode;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_xml_export_user_results;PHP:Function Name;1502610741;f0;127;1;281;;;;vpos;;v;;aXML;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_xml_export_user_results($user_id, $startdate, $enddate, $order_field)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Export user results in XML format.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$user_id&lt;/b&gt;: (int) user ID - if greater than zero, filter stats for the specified user.&#10;     &lt;b&gt;$startdate&lt;/b&gt;: (string) start date ID - if greater than zero, filter stats for the specified starting date&#10;     &lt;b&gt;$enddate&lt;/b&gt;: (string) end date ID - if greater than zero, filter stats for the specified ending date&#10;     &lt;b&gt;$order_field&lt;/b&gt;: (string) Ordering fields for SQL query.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   data;;d0,128;;b0,0;;m0;;e0;;i0;;o;;k;;l $user_id;;p $startdate;;p $enddate;;p $order_field;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="F_xml_export_users;PHP:Function Name;1326526315;f0;87;1;203;;;;vpos;;v;;aXML;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_xml_export_users()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Export all users to XML grouped by users&apos; groups.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2006-03-17&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   data;;d0,88;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="F_xml_to_text;PHP:Function Name;993074321;f0;265;1;277;;;;vpos;;v;;aconverted;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_xml_to_text($str)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Unescape some special characters (&amp;lt;s &amp;gt;s &amp;amp;s).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$str&lt;/b&gt;: (string) input string to convert&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   string;;d0,266;;b0,0;;m0;;e0;;i0;;o;;k;;l $str;;p;;x;;n">
</treenode>
<treenode node="F_zero_to_null;PHP:Function Name;993074321;f0;76;1;85;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    F_zero_to_null($num)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Prepare field value for SQL query.&lt;br&gt;&#10;Returns the num if different from zero, NULL otherwise.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$num&lt;/b&gt;: (string) string to check.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   $num if != 0, NULL otherwise;;d0,77;;b0,0;;m0;;e0;;i0;;o;;k;;l $num;;p;;x;;n">
<treenode node="../../shared/code/tce_db_dal.php;PHP:PHP Include;993074321;f18;79;50;79;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="__autoload;PHP:Function Name;3948789741;f4;102;5;105;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __autoload($class)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Autoload a class&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$class&lt;/b&gt;: Class name;;d4,103;;b0,0;;m0;;e0;;i0;;o;;k;;l $class;;p;;x;;n">
</treenode>
<treenode node="addSlashesArray;PHP:Function Name;4289637660;f0;327;1;336;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addSlashesArray($data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Escape strings with backslashes before characters that need to be escaped.&#10;These characters are single quote (&apos;), double quote (&quot;), backslash (\) and NUL (the NULL byte).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$data&lt;/b&gt;: (array|string) String or array to escape&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string;;d0,328;;b0,0;;m0;;e0;;i0;;o;;k;;l $data;;p;;x;;n">
</treenode>
<treenode node="authenticate_and_cache;PHP:Function Name;59967323;f0;72;1;100;;;;vpos;;v;;a;;r;;d103,72;;b0,0;;m0;;e0;;i0;;o;;k;;lip_radius_server;;pshared_secret;;pusername;;ppassword;;ptimeout;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="bcdechex;PHP:Function Name;993074321;f0;755;1;764;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    bcdechex($dec)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert an long integer number to a Hexadecimal representation&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2013-07-02&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|int &lt;b&gt;$dec&lt;/b&gt;: Decimal number to convert.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   containing the HEX representation in uppercase.;;d0,756;;b0,0;;m0;;e0;;i0;;o;;k;;l $dec;;p;;x;;n">
</treenode>
<treenode node="checkCSRFToken;PHP:Function Name;1592309833;f0;279;1;282;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    checkCSRFToken($token)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check the CSRF token&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$token&lt;/b&gt;: (string) tocken to check;;d0,280;;b0,0;;m0;;e0;;i0;;o;;k;;l $token;;p;;x;;n">
</treenode>
<treenode node="checkPassword;PHP:Function Name;1592309833;f0;257;1;260;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    checkPassword($password, $hash)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Verifies that a password matches a hash&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$password&lt;/b&gt;: (string) The password to verify&#10;     &lt;b&gt;$hash&lt;/b&gt;: (string) Password hash;;d0,258;;b0,0;;m0;;e0;;i0;;o;;k;;l $password;;p $hash;;p;;x;;x;;n">
</treenode>
<treenode node="custom_auth_basic_check_login;PHP:Function Name;694933399;f0;8;1;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    custom_auth_basic_check_login()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Implement the custom authentication function.&#10;Function name format &quot;custom_auth_[auth method name]_check_login&quot;.;;d0,9;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getClientFingerprint;PHP:Function Name;1592309833;f0;199;1;227;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getClientFingerprint()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Generate a client fingerprint (unique ID for the client browser)&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2010-10-04&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   client ID;;d0,200;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getContrastColor;PHP:Function Name;993074321;f0;674;1;688;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getContrastColor($color)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get a black or white color that maximize contrast.&#10;(string) Color.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$color&lt;/b&gt;: (string) color in HEX format.;;d0,675;;b0,0;;m0;;e0;;i0;;o;;k;;l $color;;p;;x;;n">
</treenode>
<treenode node="getDataTSV;PHP:Function Name;993074321;f0;583;1;595;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDataTSV($data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get data in TSV format (tab separated text values).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$data&lt;/b&gt;: (array) Array of data.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   XML data;;d0,584;;b0,0;;m0;;e0;;i0;;o;;k;;l $data;;p;;x;;n">
</treenode>
<treenode node="getDataTSVHeader;PHP:Function Name;993074321;f0;564;1;576;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDataTSVHeader($data, $prefix = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get data headers (keys) in TSV header (tab separated text values).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$data&lt;/b&gt;: (array) Array of data (key =&gt; value).&#10;     &lt;b&gt;$prefix&lt;/b&gt;: (string) Prefix to add to keys.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   data;;d0,565;;b0,0;;m0;;e0;;i0;;o;;k;;l $data;;p $prefix;;p;;x;;x;;n">
</treenode>
<treenode node="getDataXML;PHP:Function Name;993074321;f0;534;1;556;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDataXML($data, $level = 1)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get data array in XML format.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$data&lt;/b&gt;: (array) Array of data (key =&gt; value).&#10;     &lt;b&gt;$level&lt;/b&gt;: (int) Indentation level.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   XML data;;d0,535;;b0,0;;m0;;e0;;i0;;o;;k;;l $data;;p $level;;p;;x;;x;;n">
</treenode>
<treenode node="getFormDescriptionLine;PHP:Function Name;1957715841;f0;596;1;610;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormDescriptionLine($name, $description = &apos;&apos;, $value = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Print form row with label and description&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$name&lt;/b&gt;: (string) Label.&#10;     &lt;b&gt;$description&lt;/b&gt;: (string) Label description (tooltip).&#10;     &lt;b&gt;$value&lt;/b&gt;: (string) Initial value.;;d0,597;;b0,0;;m0;;e0;;i0;;o;;k;;l $name;;p $description;;p $value;;p;;x;;x;;x;;n">
</treenode>
<treenode node="getFormNoscriptSelect;PHP:Function Name;1957715841;f0;575;1;587;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormNoscriptSelect($name = &apos;selectrecord&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Print form row with submit button when noscript is active.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$name&lt;/b&gt;: (string) Name of the input form field.;;d0,576;;b0,0;;m0;;e0;;i0;;o;;k;;l $name;;p;;x;;n">
</treenode>
<treenode node="getFormRowCheckBox;PHP:Function Name;1957715841;f0;435;1;478;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormRowCheckBox($field_name, $name, $description = &apos;&apos;, $tip = &apos;&apos;, $value = &apos;&apos;, $selected = false, $disabled = false, $prefix = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Print check box row form.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$field_name&lt;/b&gt;: (string) Name of the form field.&#10;     &lt;b&gt;$name&lt;/b&gt;: (string) Label.&#10;     &lt;b&gt;$description&lt;/b&gt;: (string) Label description (tooltip).&#10;     &lt;b&gt;$tip&lt;/b&gt;: (string) Help to be displayed on the right of the input field.&#10;     &lt;b&gt;$value&lt;/b&gt;: (string) Initial value.&#10;     &lt;b&gt;$selected&lt;/b&gt;: (boolean) set to true if selected.&#10;     &lt;b&gt;$disabled&lt;/b&gt;: (boolean) set to true to disable the field&#10;     &lt;b&gt;$prefix&lt;/b&gt;: (string) code to be displayed after label.;;d0,436;;b0,0;;m0;;e0;;i0;;o;;k;;l $field_name;;p $name;;p $description;;p $tip;;p $value;;p $selected;;p $disabled;;p $prefix;;p;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="getFormRowFixedValue;PHP:Function Name;1957715841;f0;491;1;531;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormRowFixedValue($field_name, $name, $description = &apos;&apos;, $tip = &apos;&apos;, $value = &apos;&apos;, $currency = false, $prefix = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Print fixed value row form.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$field_name&lt;/b&gt;: (string) Name of the form field.&#10;     &lt;b&gt;$name&lt;/b&gt;: (string) Label.&#10;     &lt;b&gt;$description&lt;/b&gt;: (string) Label description (tooltip).&#10;     &lt;b&gt;$tip&lt;/b&gt;: (string) Help to be displayed on the right of the input field.&#10;     &lt;b&gt;$value&lt;/b&gt;: (string) Initial value.&#10;     &lt;b&gt;$currency&lt;/b&gt;: (boolean) if true the value is a curency number.&#10;     &lt;b&gt;$prefix&lt;/b&gt;: (string) code to be displayed after label.;;d0,492;;b0,0;;m0;;e0;;i0;;o;;k;;l $field_name;;p $name;;p $description;;p $tip;;p $value;;p $currency;;p $prefix;;p;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="getFormRowSelectBox;PHP:Function Name;1957715841;f0;386;1;421;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormRowSelectBox($field_name, $name, $description = &apos;&apos;, $tip = &apos;&apos;, $value = &apos;&apos;, $items = [], $prefix = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Print select box row form.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$field_name&lt;/b&gt;: (string) Name of the form field.&#10;     &lt;b&gt;$name&lt;/b&gt;: (string) Label.&#10;     &lt;b&gt;$description&lt;/b&gt;: (string) Label description (tooltip).&#10;     &lt;b&gt;$tip&lt;/b&gt;: (string) Help to be displayed on the right of the input field.&#10;     &lt;b&gt;$value&lt;/b&gt;: (string) Initial value.&#10;     &lt;b&gt;$items&lt;/b&gt;: (array) array of items to print key =&gt; value.&#10;     &lt;b&gt;$prefix&lt;/b&gt;: (string) code to be displayed after label.;;d0,387;;b0,0;;m0;;e0;;i0;;o;;k;;l $field_name;;p $name;;p $description;;p $tip;;p $value;;p $items;;p $prefix;;p;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="getFormRowTextBox;PHP:Function Name;1957715841;f0;347;1;373;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormRowTextBox($field_name, $name, $description = &apos;&apos;, $value = &apos;&apos;, $disabled = false, $prefix = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Print text box row form.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$field_name&lt;/b&gt;: (string) Name of the form field.&#10;     &lt;b&gt;$name&lt;/b&gt;: (string) Label.&#10;     &lt;b&gt;$description&lt;/b&gt;: (string) Label description (tooltip).&#10;     &lt;b&gt;$value&lt;/b&gt;: (string) Initial value.&#10;     &lt;b&gt;$disabled&lt;/b&gt;: (boolean) If true disable the field.&#10;     &lt;b&gt;$prefix&lt;/b&gt;: (string) code to be displayed after label.;;d0,348;;b0,0;;m0;;e0;;i0;;o;;k;;l $field_name;;p $name;;p $description;;p $value;;p $disabled;;p $prefix;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="getFormRowTextInput;PHP:Function Name;1957715841;f0;255;1;335;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormRowTextInput($field_name, $name, $description = &apos;&apos;, $tip = &apos;&apos;, $value = &apos;&apos;, $format = &apos;&apos;, $maxlen = 255, $date = false, $datetime = false, $password = false, $prefix = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Print input row form.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$field_name&lt;/b&gt;: (string) Name of the form field.&#10;     &lt;b&gt;$name&lt;/b&gt;: (string) Label.&#10;     &lt;b&gt;$description&lt;/b&gt;: (string) Label description (tooltip).&#10;     &lt;b&gt;$tip&lt;/b&gt;: (string) Help to be displayed on the right of the input field.&#10;     &lt;b&gt;$value&lt;/b&gt;: (string) Initial value.&#10;     &lt;b&gt;$format&lt;/b&gt;: (string) Regular expression to check the format of the field.&#10;     &lt;b&gt;$maxlen&lt;/b&gt;: (int) Maximum input lenght.&#10;     &lt;b&gt;$date&lt;/b&gt;: (boolean) True if the field is a date input.&#10;     &lt;b&gt;$datetime&lt;/b&gt;: (boolean) True if the field is a date-time input.&#10;     &lt;b&gt;$password&lt;/b&gt;: (boolean) True if the field is a password.&#10;     &lt;b&gt;$prefix&lt;/b&gt;: (string) code to be displayed after label.;;d0,256;;b0,0;;m0;;e0;;i0;;o;;k;;l $field_name;;p $name;;p $description;;p $tip;;p $value;;p $format;;p $maxlen;;p $date;;p $datetime;;p $password;;p $prefix;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="getFormRowVertDiv;PHP:Function Name;1957715841;f0;565;1;568;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormRowVertDiv($title = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Print form row with title.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$title&lt;/b&gt;: (string) Title to be printed.;;d0,566;;b0,0;;m0;;e0;;i0;;o;;k;;l $title;;p;;x;;n">
</treenode>
<treenode node="getFormRowVertSpace;PHP:Function Name;1957715841;f0;555;1;558;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormRowVertSpace()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Print empty form row.;;d0,556;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getFormSmallDivSpace;PHP:Function Name;1957715841;f0;546;1;549;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormSmallDivSpace()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Print empty form row.;;d0,547;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getFormSmallVertSpace;PHP:Function Name;1957715841;f0;537;1;540;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormSmallVertSpace()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Print empty form row.;;d0,538;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getFormUploadFile;PHP:Function Name;1957715841;f0;621;1;641;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormUploadFile($field_name, $field_id, $name, $description = &apos;&apos;, $onchange = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Print input row form to upluad a file.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$field_name&lt;/b&gt;: (string) Name of the form field.&#10;     &lt;b&gt;$field_id&lt;/b&gt;: (string) ID of the form field.&#10;     &lt;b&gt;$name&lt;/b&gt;: (string) Label.&#10;     &lt;b&gt;$description&lt;/b&gt;: (string) Label description (tooltip).&#10;     &lt;b&gt;$onchange&lt;/b&gt;: (string) Javascript code to execute at onchange event.;;d0,622;;b0,0;;m0;;e0;;i0;;o;;k;;l $field_name;;p $field_id;;p $name;;p $description;;p $onchange;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="getImageButton;PHP:Function Name;2229282296;f0;139;1;148;;;;vpos;;v;;aXHTML;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getImageButton($name, $tag, $image, $onclick = &apos;&apos;, $accesskey = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Display one tag button&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2006-03-07&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$name&lt;/b&gt;: (string) name of the button&#10;     &lt;b&gt;$tag&lt;/b&gt;: (string) tag value&#10;     &lt;b&gt;$image&lt;/b&gt;: (string) image file of button&#10;     &lt;b&gt;$onclick&lt;/b&gt;: (string) default onclick action&#10;     &lt;b&gt;$accesskey&lt;/b&gt;: (string) accesskey: character for keyboard shortcut&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   string;;d0,140;;b0,0;;m0;;e0;;i0;;o;;k;;l $name;;p $tag;;p $image;;p $onclick;;p $accesskey;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="getIpAsInt;PHP:Function Name;993074321;f0;429;1;434;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getIpAsInt($ip)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Converts a string containing an IP address into its integer value.&#10;&lt;b&gt;since&lt;/b&gt;: 7.1.000 (2009-02-13)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$ip&lt;/b&gt;: (string) IP address to convert.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   IP address as integer number.;;d0,430;;b0,0;;m0;;e0;;i0;;o;;k;;l $ip;;p;;x;;n">
</treenode>
<treenode node="getIpAsString;PHP:Function Name;993074321;f0;442;1;446;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getIpAsString($ip)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Converts a string containing an IP address into its integer value and return string representation.&#10;&lt;b&gt;since&lt;/b&gt;: 9.0.033 (2009-11-03)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$ip&lt;/b&gt;: (string) IP address to convert.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   IP address as string.;;d0,443;;b0,0;;m0;;e0;;i0;;o;;k;;l $ip;;p;;x;;n">
</treenode>
<treenode node="getNewSessionID;PHP:Function Name;1592309833;f0;235;1;238;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNewSessionID()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Generate and return a new session ID.&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2010-10-04&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   PHPSESSID;;d0,236;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getNormalizedIP;PHP:Function Name;993074321;f0;356;1;421;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNormalizedIP($ip)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Convert all IP addresses to IPv6 expanded notation.&#10;&lt;b&gt;since&lt;/b&gt;: 7.1.000 (2009-02-13)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$ip&lt;/b&gt;: (string) IP address to normalize.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   IPv6 address in expanded notation or false in case of invalid input.;;d0,357;;b0,0;;m0;;e0;;i0;;o;;k;;l $ip;;p;;x;;n">
</treenode>
<treenode node="getPasswordHash;PHP:Function Name;1592309833;f0;245;1;248;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPasswordHash($password)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Hash password for Database storing.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$password&lt;/b&gt;: (string) Password to hash.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   password hash;;d0,246;;b0,0;;m0;;e0;;i0;;o;;k;;l $password;;p;;x;;n">
</treenode>
<treenode node="getPlainCSRFToken;PHP:Function Name;1592309833;f0;267;1;271;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPlainCSRFToken()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Generate unencoded CSRF token string;;d0,268;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="gettmpdir;PHP:Function Name;3200056416;f0;247;1;262;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    gettmpdir()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The default directory for the debug file under Unix.;;d0,248;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="showRequiredField;PHP:Function Name;993074321;f0;323;1;332;;;;vpos;;v;;ahtml;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    showRequiredField($mode = 1)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return a string containing an HTML acronym for required/not required fields.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$mode&lt;/b&gt;: (int) field mode: 1=not required;s 2=required.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   string;;d0,324;;b0,0;;m0;;e0;;i0;;o;;k;;l $mode;;p;;x;;n">
</treenode>
<treenode node="tcecodeEditorTagButtons;PHP:Function Name;2229282296;f0;39;1;126;;;;vpos;;v;;aXHTML;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    tcecodeEditorTagButtons($callingform, $callingfield)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Display TCExam Code EDITOR Tag Buttons&#10;&lt;b&gt;author&lt;/b&gt;: Nicola Asuni&#10;&lt;b&gt;since&lt;/b&gt;: 2006-03-07&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$callingform&lt;/b&gt;: (string) name of calling xhtml form&#10;     &lt;b&gt;$callingfield&lt;/b&gt;: (string) name of calling form field (textarea where output code will be sent)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   string;;d0,40;;b0,0;;m0;;e0;;i0;;o;;k;;l $callingform;;p $callingfield;;p;;x;;x;;n">
</treenode>
<treenode node="unhtmlentities;PHP:Function Name;993074321;f0;146;1;153;;;;vpos;;v;;aconverted;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    unhtmlentities($text_to_convert, $preserve_tagsign = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Reverse function for htmlentities.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$text_to_convert&lt;/b&gt;: (string) input string to convert&#10;     &lt;b&gt;$preserve_tagsign&lt;/b&gt;: (boolean) if true preserve &lt;&gt; symbols, default=FALSE&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   string;;d0,147;;b0,0;;m0;;e0;;i0;;o;;k;;l $text_to_convert;;p $preserve_tagsign;;p;;x;;x;;n">
</treenode>
<treenode node="utrim;PHP:Function Name;993074321;f0;339;1;348;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    utrim($txt)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Strip whitespace (or other characters) from the beginning and end of an UTF-8 string and replace the &quot;\xA0&quot; with normal space.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$txt&lt;/b&gt;: (string) The string that will be trimmed.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The trimmed string.;;d0,340;;b0,0;;m0;;e0;;i0;;o;;k;;l $txt;;p;;x;;n">
</treenode>
</phptree>
<jstree>
<treenode node="C;JS:Function Name;4249336900;f14895;10;14896;10;;;;vposArray;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l_;;p_;;p;;x;;x;;n">
<treenode node="addEventListener;JS:Function Name;4249336900;f16041;10;16525;10;;;;vpos;;v;;a;;r;;d16073,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;pl;;po;;p;;x;;x;;x;;n">
</treenode>
<treenode node="dispatchEvent;JS:Function Name;4249336900;f16906;10;16952;10;;;;vpos;;v;;a;;r;;d16931,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="registerEvent;JS:Function Name;4249336900;f16955;10;17095;10;;;;vpos;;v;;aEM;;r;;d16986,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;pl;;po;;pO;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="removeEventListener;JS:Function Name;4249336900;f16528;10;16903;10;;;;vpos;;v;;a;;r;;d16563,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;pl;;po;;p;;x;;x;;x;;n">
</treenode>
</treenode>
<treenode node="Calendar;JS:Function Name;2034475571;f0;17;1;78;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Calendar = function (firstDayOfWeek, dateStr, onSelected, onClose)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The Calendar object constructor.;;d67,17;;b0,0;;m0;;e0;;i0;;o;;k;;lfirstDayOfWeek;;pdateStr;;ponSelected;;ponClose;;p;;x;;x;;x;;x;;n">
<treenode node="_add_evs;JS:Function Name;2034475571;f9;221;1;231;;;;vpos;;v;;a;;r;;d33,221;;b0,0;;m0;;e0;;i0;;o;;k;;lel;;p;;x;;n">
</treenode>
<treenode node="_checkCalendar;JS:Function Name;2034475571;f9;1307;1;1319;;;;vpos;;v;;a;;r;;d39,1307;;b0,0;;m0;;e0;;i0;;o;;k;;lev;;p;;x;;n">
</treenode>
<treenode node="_keyEvent;JS:Function Name;2034475571;f9;968;1;1081;;;;vpos;;v;;a;;r;;d34,968;;b0,0;;m0;;e0;;i0;;o;;k;;lev;;p;;x;;n">
<treenode node="nextMonth;JS:Function Name;2034475571;f0;1019;4;1023;;;;vpos;;v;;aObject_;;c;;r;;d24,1019;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="prevMonth;JS:Function Name;2034475571;f0;1014;4;1018;;;;vpos;;v;;aObject_;;c;;r;;d24,1014;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="setVars;JS:Function Name;2034475571;f0;1007;4;1013;;;;vpos;;v;;aObject_;;c;;r;;d22,1007;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="addClass;JS:Function Name;2034475571;f9;149;1;152;;;;vpos;;v;;a;;r;;d44,149;;b0,0;;m0;;e0;;i0;;o;;k;;lel;;pclassName;;p;;x;;x;;n">
</treenode>
<treenode node="addEvent;JS:Function Name;2034475571;f9;181;1;189;;;;vpos;;v;;a;;r;;d47,181;;b0,0;;m0;;e0;;i0;;o;;k;;lel;;pevname;;pfunc;;p;;x;;x;;x;;n">
</treenode>
<treenode node="calDragEnd;JS:Function Name;2034475571;f9;487;1;499;;;;vpos;;v;;a;;r;;d36,487;;b0,0;;m0;;e0;;i0;;o;;k;;lev;;p;;x;;n">
</treenode>
<treenode node="calDragIt;JS:Function Name;2034475571;f9;466;1;485;;;;vpos;;v;;a;;r;;d35,466;;b0,0;;m0;;e0;;i0;;o;;k;;lev;;p;;x;;n">
</treenode>
<treenode node="cellClick;JS:Function Name;2034475571;f9;583;1;713;;;;vpos;;v;;a;;r;;d38,583;;b0,0;;m0;;e0;;i0;;o;;k;;lel;;pev;;p;;x;;x;;n">
<treenode node="setMonth;JS:Function Name;2034475571;f0;623;3;630;;;;vpos;;v;;aObject_;;c;;r;;d23,623;;b0,0;;m0;;e0;;i0;;o;;k;;lm;;p;;x;;n">
</treenode>
</treenode>
<treenode node="createElement;JS:Function Name;2034475571;f9;201;1;214;;;;vpos;;v;;a;;r;;d48,201;;b0,0;;m0;;e0;;i0;;o;;k;;ltype;;pparent;;p;;x;;x;;n">
</treenode>
<treenode node="dayMouseDblClick;JS:Function Name;2034475571;f9;532;1;537;;;;vpos;;v;;a;;r;;d41,532;;b0,0;;m0;;e0;;i0;;o;;k;;lev;;p;;x;;n">
</treenode>
<treenode node="dayMouseDown;JS:Function Name;2034475571;f9;501;1;530;;;;vpos;;v;;a;;r;;d37,501;;b0,0;;m0;;e0;;i0;;o;;k;;lev;;p;;x;;n">
</treenode>
<treenode node="dayMouseOut;JS:Function Name;2034475571;f9;565;1;577;;;;vpos;;v;;a;;r;;d36,565;;b0,0;;m0;;e0;;i0;;o;;k;;lev;;p;;x;;n">
</treenode>
<treenode node="dayMouseOver;JS:Function Name;2034475571;f9;539;1;563;;;;vpos;;v;;a;;r;;d37,539;;b0,0;;m0;;e0;;i0;;o;;k;;lev;;p;;x;;n">
</treenode>
<treenode node="findMonth;JS:Function Name;2034475571;f9;233;1;240;;;;vpos;;v;;a;;r;;d34,233;;b0,0;;m0;;e0;;i0;;o;;k;;lel;;p;;x;;n">
</treenode>
<treenode node="findYear;JS:Function Name;2034475571;f9;242;1;249;;;;vpos;;v;;a;;r;;d33,242;;b0,0;;m0;;e0;;i0;;o;;k;;lel;;p;;x;;n">
</treenode>
<treenode node="getAbsolutePos;JS:Function Name;2034475571;f9;100;1;114;;;;vpos;;v;;a;;r;;d39,100;;b0,0;;m0;;e0;;i0;;o;;k;;lel;;p;;x;;n">
</treenode>
<treenode node="getElement;JS:Function Name;2034475571;f9;155;1;160;;;;vpos;;v;;a;;r;;d35,155;;b0,0;;m0;;e0;;i0;;o;;k;;lev;;p;;x;;n">
</treenode>
<treenode node="getTargetElement;JS:Function Name;2034475571;f9;162;1;167;;;;vpos;;v;;a;;r;;d41,162;;b0,0;;m0;;e0;;i0;;o;;k;;lev;;p;;x;;n">
</treenode>
<treenode node="isRelated;JS:Function Name;2034475571;f9;116;1;133;;;;vpos;;v;;a;;r;;d40,116;;b0,0;;m0;;e0;;i0;;o;;k;;lel;;pevt;;p;;x;;x;;n">
</treenode>
<treenode node="is_ie;JS:Function Name;2034475571;f9;86;14;86;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lnavigator;;puserAgent;;popera;;pi;;pnavigator;;puserAgent;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="is_ie5;JS:Function Name;2034475571;f9;89;15;89;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lCalendar;;pis_ie;;pmsie;;pi;;pnavigator;;puserAgent;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="removeClass;JS:Function Name;2034475571;f9;135;1;147;;;;vpos;;v;;a;;r;;d47,135;;b0,0;;m0;;e0;;i0;;o;;k;;lel;;pclassName;;p;;x;;x;;n">
</treenode>
<treenode node="removeEvent;JS:Function Name;2034475571;f9;191;1;199;;;;vpos;;v;;a;;r;;d50,191;;b0,0;;m0;;e0;;i0;;o;;k;;lel;;pevname;;pfunc;;p;;x;;x;;x;;n">
</treenode>
<treenode node="showMonthsCombo;JS:Function Name;2034475571;f9;251;1;280;;;;vpos;;v;;a;;r;;d39,251;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="showYearsCombo;JS:Function Name;2034475571;f9;282;1;326;;;;vpos;;v;;a;;r;;d41,282;;b0,0;;m0;;e0;;i0;;o;;k;;lfwd;;p;;x;;n">
</treenode>
<treenode node="stopEvent;JS:Function Name;2034475571;f9;169;1;179;;;;vpos;;v;;a;;r;;d34,169;;b0,0;;m0;;e0;;i0;;o;;k;;lev;;p;;x;;n">
</treenode>
<treenode node="tableMouseDown;JS:Function Name;2034475571;f9;460;1;464;;;;vpos;;v;;a;;r;;d40,460;;b0,0;;m0;;e0;;i0;;o;;k;;lev;;p;;x;;n">
</treenode>
<treenode node="tableMouseOver;JS:Function Name;2034475571;f9;380;1;458;;;;vpos;;v;;a;;r;;d40,380;;b0,0;;m0;;e0;;i0;;o;;k;;lev;;p;;x;;n">
</treenode>
<treenode node="tableMouseUp;JS:Function Name;2034475571;f9;330;1;378;;;;vpos;;v;;a;;r;;d37,330;;b0,0;;m0;;e0;;i0;;o;;k;;lev;;p;;x;;n">
</treenode>
</treenode>
<treenode node="FJ_display_tag;JS:Function Name;1176135291;f0;99;1;135;;;;vpos;;v;;aObject_;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function FJ_display_tag(editText, opentag, closetag)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Insert open and close TAG on selected text.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;editText&lt;/b&gt;: string text to be edited&#10;     &lt;b&gt;opentag&lt;/b&gt;: string opening element to be added&#10;     &lt;b&gt;closetag&lt;/b&gt;: string closing element to be added;;d53,99;;b0,0;;m0;;e0;;i0;;o;;k;;lobject editText;;pobject opentag;;pobject closetag;;p;;x;;x;;x;;n">
</treenode>
<treenode node="FJ_insert_tag;JS:Function Name;1176135291;f0;56;1;81;;;;vpos;;v;;aObject_;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function FJ_insert_tag(editText, tag)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates open and close tags and call display tag.&#10;Use &apos;&amp;&apos; as first tag character to obtain also a closed tag.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;editText&lt;/b&gt;: string text to be edited&#10;     &lt;b&gt;tag&lt;/b&gt;: string element to be added;;d38,56;;b0,0;;m0;;e0;;i0;;o;;k;;lobject editText;;pobject tag;;p;;x;;x;;n">
</treenode>
<treenode node="FJ_insert_text;JS:Function Name;1176135291;f0;88;1;91;;;;vpos;;v;;aObject_;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function FJ_insert_text(editText, newtext)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Insert text before selected text or at the end of text.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;editText&lt;/b&gt;: string text to be edited&#10;     &lt;b&gt;newtext&lt;/b&gt;: string text to be added;;d43,88;;b0,0;;m0;;e0;;i0;;o;;k;;lobject editText;;pobject newtext;;p;;x;;x;;n">
</treenode>
<treenode node="FJ_redo;JS:Function Name;1176135291;f0;158;1;164;;;;vpos;;v;;aObject_;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function FJ_redo(editText)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    REDO&#10;Redoe the last tag insert.&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.008 (2006-05-13)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;editText&lt;/b&gt;: string text to be edited;;d27,158;;b0,0;;m0;;e0;;i0;;o;;k;;lobject editText;;p;;x;;n">
</treenode>
<treenode node="FJ_start_timer;JS:Function Name;3301810409;f0;116;1;126;;;;vpos;;v;;aObject_;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function FJ_start_timer(countdown, remaining, msg, logout, servertime)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Starts the timer&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;boolean&lt;/b&gt;: countdown if true enable countdown&#10;     &lt;b&gt;int&lt;/b&gt;: remaining remaining test time in seconds&#10;     &lt;b&gt;string&lt;/b&gt;: msg message to display at the end of countdown&#10;     &lt;b&gt;boolean&lt;/b&gt;: logout if true logout user at the end of available time&#10;     &lt;b&gt;int&lt;/b&gt;: servertime the server time in milliseconds;;d71,116;;b0,0;;m0;;e0;;i0;;o;;k;;lobject boolean;;pobject int;;pobject string;;pobject boolean;;pobject int;;p;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="FJ_timer;JS:Function Name;3301810409;f0;34;1;106;;;;vpos;;v;;aObject_;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function FJ_timer()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Display current server date-time and remaining time (countdown)&#10;on a input text form field (timerform.timer);;d20,34;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="FJ_undo;JS:Function Name;1176135291;f0;143;1;150;;;;vpos;;v;;aObject_;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function FJ_undo(editText)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    UNDO&#10;Restore the text previous to last tag insert.&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.008 (2006-05-13)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;editText&lt;/b&gt;: string text to be edited;;d27,143;;b0,0;;m0;;e0;;i0;;o;;k;;lobject editText;;p;;x;;n">
</treenode>
<treenode node="FJ_update_selection;JS:Function Name;1176135291;f0;172;1;177;;;;vpos;;v;;aObject_;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function FJ_update_selection(editText)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Tracks selection changes.&#10;Preserve selection on IE&#10;&lt;b&gt;since&lt;/b&gt;: 3.0.008 (2006-05-13)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;editText&lt;/b&gt;: string text to be edited;;d39,172;;b0,0;;m0;;e0;;i0;;o;;k;;lobject editText;;p;;x;;n">
</treenode>
<treenode node="O;JS:Function Name;4249336900;f3552;10;3553;10;;;;vposArray;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;ll;;pi;;p;;x;;x;;n">
</treenode>
<treenode node="Q;JS:Function Name;4249336900;f3158;10;3159;10;;;;vposArray;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lo;;pe;;pl;;p;;x;;x;;x;;n">
</treenode>
<treenode node="ScriptQueue;JS:Function Name;1366221663;f0;24;1486;24;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ScriptQueue=function(i)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    $Id: scriptqueue.js 761 2011-05-06 14:13:15Z wingedfox $&#10;$HeadURL: https://svn.debugger.ru/repos/jslibs/BrowserExtensions/tags/BrowserExtensions.029/scriptqueue.js $&#10;Dynamically load scripts and script queues (when load order is important)&#10;*********NOTE********&#10;If you need to load any scripts before ScriptQueue exists, use the following snippet&#10;&lt;code&gt;&#10;if (!(window.ScriptQueueIncludes instanceof Array)) window.ScriptQueueIncludes = []&#10;window.ScriptQueueIncludes = window.ScriptQueueIncludes.concat(scriptsarray);s&#10;&lt;/code&gt;&#10;ScriptQueue loads all the scripts, queued before its&apos; load in the ScriptQueueIncludes&#10;*********&#10;&lt;b&gt;author&lt;/b&gt;: Ilya Lebedev &lt;ilya&#10;&lt;b&gt;lebedev&lt;/b&gt;: .net&gt;&#10;&lt;b&gt;modified&lt;/b&gt;: $Date: 2011-05-06 18:13:15 +0400 (Пт., 06 мая 2011) $&#10;&lt;b&gt;version&lt;/b&gt;: $Rev: 761 $&#10;&lt;b&gt;license&lt;/b&gt;: LGPL 2.1 or later&#10;&lt;b&gt;class&lt;/b&gt;: ScriptQueue&#10;&lt;b&gt;scope&lt;/b&gt;: public&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Function &lt;b&gt;optional&lt;/b&gt;: callback function, called on each successful script load;;d23,24;;b0,0;;m0;;e0;;i0;;o;;k;;lFunction optional;;p;;x;;n">
<treenode node="load;JS:Function Name;1366221663;f1681;24;1737;24;;;;vpos;;v;;a;;r;;d1699,24;;b0,0;;m0;;e0;;i0;;o;;k;;li;;pI;;p;;x;;x;;n">
</treenode>
<treenode node="queue;JS:Function Name;1366221663;f1555;24;1668;24;;;;vpos;;v;;a;;r;;d1574,24;;b0,0;;m0;;e0;;i0;;o;;k;;li;;pI;;p;;x;;x;;n">
</treenode>
</treenode>
<treenode node="V;JS:Function Name;123065571;f422;0;423;0;;;;vposArray;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="X;JS:Function Name;483840355;f88;20;89;20;;;;vposRegExp;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lx;;ptagName;;p;;x;;x;;n">
</treenode>
<treenode node="_;JS:Function Name;4249336900;f6491;10;18724;10;;;;vposArray;;v;;a;;r;;d18567,10;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="c;JS:Function Name;4240802933;f382;0;383;0;;4249336900;f7807;10;18876;10;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;le;;p;;x;;n">
</treenode>
<treenode node="cloneObject;JS:Function Name;4249336900;f3929;10;4213;10;;;;vpos;;v;;aObject_;;c;;r;;d3952,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="dateStatus;JS:Function Name;502113102;f0;16;1;27;;;;vpos;;v;;aObject_;;c;;r;;d36,16;;b0,0;;m0;;e0;;i0;;o;;k;;ldate;;py;;pm;;pd;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="hasStyleSheet;JS:Function Name;4249336900;f4818;10;4988;10;;;;vpos;;v;;aObject_;;c;;r;;d4843,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="isFunction;JS:Function Name;4249336900;f55;10;3116;10;;;;vpos;;v;;aObject_;;c;;r;;d77,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
<treenode node="findPath;JS:Function Name;4249336900;f1005;10;1503;10;;;;vpos;;v;;aObject_;;c;;r;;d1025,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="getScriptQuery;JS:Function Name;4249336900;f1503;10;1767;10;;;;vpos;;v;;aObject_;;c;;r;;d1529,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="gluePath;JS:Function Name;4249336900;f781;10;1005;10;;;;vpos;;v;;aObject_;;c;;r;;d800,10;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="isArray;JS:Function Name;4249336900;f306;10;354;10;;;;vpos;;v;;aObject_;;c;;r;;d325,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="isBoolean;JS:Function Name;4249336900;f404;10;455;10;;;;vpos;;v;;aObject_;;c;;r;;d425,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="isEmpty;JS:Function Name;4249336900;f524;10;781;10;;;;vpos;;v;;aObject_;;c;;r;;d543,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="isNumber;JS:Function Name;4249336900;f157;10;206;10;;;;vpos;;v;;aObject_;;c;;r;;d177,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="isNumeric;JS:Function Name;4249336900;f206;10;306;10;;;;vpos;;v;;aObject_;;c;;r;;d227,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="isRegExp;JS:Function Name;4249336900;f354;10;404;10;;;;vpos;;v;;aObject_;;c;;r;;d374,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="isScalar;JS:Function Name;4249336900;f455;10;524;10;;;;vpos;;v;;aObject_;;c;;r;;d475,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="isString;JS:Function Name;4249336900;f108;10;157;10;;;;vpos;;v;;aObject_;;c;;r;;d128,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="parseQuery;JS:Function Name;4249336900;f1767;10;2115;10;;;;vpos;;v;;aObject_;;c;;r;;d1789,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="table2array;JS:Function Name;4249336900;f2115;10;3108;10;;;;vpos;;v;;aObject_;;c;;r;;d2144,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;pI;;pl;;po;;p;;x;;x;;x;;x;;n">
</treenode>
</treenode>
<treenode node="isUndefined;JS:Function Name;4249336900;f0;10;55;10;;;;vpos;;v;;aObject_;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function isUndefined(i)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    $Id: helpers.js 697 2010-11-11 18:54:51Z wingedfox $&#10;$HeadURL: https://svn.debugger.ru/repos/jslibs/BrowserExtensions/tags/BrowserExtensions.029/helpers.js $&#10;File contains differrent helper functions&#10;&lt;b&gt;author&lt;/b&gt;: Ilya Lebedev &lt;ilya&#10;&lt;b&gt;lebedev&lt;/b&gt;: .net&gt;&#10;&lt;b&gt;license&lt;/b&gt;: LGPL&#10;&lt;b&gt;version&lt;/b&gt;: $Rev: 697 $;;d23,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="loadStyleSheet;JS:Function Name;4249336900;f4624;10;4818;10;;;;vpos;;v;;aObject_;;c;;r;;d4650,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="mergeObject;JS:Function Name;4249336900;f4213;10;4624;10;;;;vpos;;v;;aObject_;;c;;r;;d4235,10;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="o;JS:Function Name;4249336900;f5312;10;5313;10;;;;vposArray;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;ll;;pi;;p;;x;;x;;n">
</treenode>
<treenode node="onSelect;JS:Function Name;1882458433;f0;105;2;123;;;;vpos;;v;;aObject_;;c;;r;;d24,105;;b0,0;;m0;;e0;;i0;;o;;k;;lcal;;p;;x;;n">
</treenode>
<treenode node="param_default;JS:Function Name;1882458433;f0;62;105;62;;;;vpos;;v;;aObject_;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function param_default(pname, def)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This function &quot;patches&quot; an input field (or other element) to use a calendar&#10;widget for date selection.&#10;The &quot;params&quot; is a single object that can have the following properties:&#10;prop. name   | description&#10;-------------------------------------------------------------------------------------------------&#10;inputField    | the ID of an input field to store the date&#10;displayArea   | the ID of a DIV or other element to show the date&#10;button        | ID of a button or other element that will trigger the calendar&#10;eventName     | event that will trigger the calendar, without the &quot;on&quot; prefix (default: &quot;click&quot;)&#10;ifFormat      | date format that will be stored in the input field&#10;daFormat      | the date format that will be used to display the date in displayArea&#10;singleClick   | (true/false) wether the calendar is in single click mode or not (default: true)&#10;firstDay      | numeric: 0 to 6.  &quot;0&quot; means display Sunday first, &quot;1&quot; means display Monday first, etc.&#10;align         | alignment (default: &quot;Br&quot;);s if you don&apos;t know what&apos;s this see the calendar documentation&#10;range         | array with 2 elements.  Default: [1900, 2999] -- the range of years available&#10;weekNumbers   | (true/false) if it&apos;s true (default) the calendar will display week numbers&#10;flat          | null or element ID;s if not null the calendar will be a flat calendar having the parent with the given ID&#10;flatCallback  | function that receives a JS Date object and returns an URL to point the browser to (for flat calendar)&#10;disableFunc   | function that receives a JS Date object and should return true if that date has to be disabled in the calendar&#10;onSelect      | function that gets called when a date is selected.  You don&apos;t _have_ to supply this (the default is generally okay)&#10;onClose       | function that gets called when the calendar is closed.  [default]&#10;onUpdate      | function that gets called after the date is updated in the input field.  Receives a reference to the calendar.&#10;date          | the date that the calendar will be initially displayed to&#10;showsTime     | default: false;s if true the calendar will include a time selector&#10;timeFormat    | the time format;s can be &quot;12&quot; or &quot;24&quot;, default is &quot;12&quot;&#10;electric      | if true (default) then given fields/date areas are updated for each move;s otherwise they&apos;re updated only on close&#10;step          | configures the step of the years in drop-down boxes;s default: 2&#10;position      | configures the calendar absolute position;s default: null&#10;cache         | if &quot;true&quot; (but default: &quot;false&quot;) it will reuse the same calendar object, where possible&#10;showOthers    | if &quot;true&quot; (but default: &quot;false&quot;) it will show days from other months too&#10;None of them is required, they all have default values.  However, if you&#10;pass none of &quot;inputField&quot;, &quot;displayArea&quot; or &quot;button&quot; you&apos;ll get a warning&#10;saying &quot;nothing to setup&quot;.;;d36,62;;b0,0;;m0;;e0;;i0;;o;;k;;lpname;;pdef;;p;;x;;x;;n">
</treenode>
<treenode node="playInterval;JS:Function Name;4249336900;f3701;10;3816;10;;;;vpos;;v;;aObject_;;c;;r;;d3729,10;;b0,0;;m0;;e0;;i0;;o;;k;;lI;;po;;pO;;p;;x;;x;;x;;n">
</treenode>
<treenode node="playTimeout;JS:Function Name;4249336900;f3816;10;3929;10;;;;vpos;;v;;aObject_;;c;;r;;d3843,10;;b0,0;;m0;;e0;;i0;;o;;k;;lI;;po;;pO;;p;;x;;x;;x;;n">
</treenode>
<treenode node="z;JS:Function Name;483840355;f202;20;203;20;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lx;;ptype;;p;;x;;x;;n">
</treenode>
<treenode node="A;JS:JS Var Name;123065571;f7917;0;7918;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="B;JS:JS Var Name;123065571;f15786;0;15787;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="C;JS:JS Var Name;1046520607;f2491;12;2495;12;;2467438104;f52629;12;52630;12;;783878664;f823;0;824;0;;4240802933;f348;0;349;0;;2070197285;f42837;0;42838;0;;3595929943;f1729;0;1730;0;;2674831004;f377;12;378;12;;483840355;f1039;20;1040;20;;123065571;f192;0;193;0;;;;vposObject_;;v;;a;;r;;d2493,12;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CDate;JS:JS Var Name;502113102;f4;5;2;13;;;;vposObject_;;v;;a;;r;;d9,7;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="getDate;JS:Function Name;502113102;f13;9;20;9;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getDay;JS:Function Name;502113102;f13;8;19;8;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getFullYear;JS:Function Name;502113102;f13;11;24;11;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getMonth;JS:Function Name;502113102;f13;10;21;10;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="D;JS:JS Var Name;123065571;f8890;0;8891;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="DOM;JS:JS Var Name;4249336900;f9053;10;9056;10;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="CSS;JS:Function Name;4249336900;f13719;10;13722;10;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lI;;pcallee;;pI;;paddClass;;pl;;pArray;;pslice;;po;;pI;;pel;;po;;pclassName;;po;;pclassName;;pArray;;pjoin;;pl;;pI;;pI;;premoveClass;;pl;;po;;pcallee;;po;;pcache;;po;;pcache;;pO;;po;;pcache;;pQ;;pI;;pel;;p_;;pc;;pl;;plength;;p_;;pc;;p_;;pC;;pl;;p_;;pO;;pC;;pO;;pC;;pC;;pQ;;pclassName;;pQ;;pclassName;;pO;;pC;;pQ;;pclassName;;pQ;;pclassName;;pI;;pI;;phasClass;;pl;;pre;;pl;;pI;;pel;;pclassName;;pre;;pl;;pI;;pgetClass;;pI;;pel;;pclassName;;pI;;pgetClassValue;;pl;;po;;pI;;pel;;pclassName;;pl;;po;;po;;po;;po;;pI;;pgetComputedStyle;;pl;;po;;pO;;pI;;pel;;pI;;pel;;pcurrentStyle;;po;;pl;;pO;;pcurrentStyle;;pl;;pO;;pcurrentStyle;;pwindow;;pgetComputedStyle;;po;;pdocument;;pdefaultView;;pO;;pl;;po;;po;;pl;;po;;po;;pl;;pI;;pel;;pl;;pI;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="StyleSheet;JS:Function Name;4249336900;f12597;10;12607;10;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l_;;pi;;pc;;pC;;pe;;po;;pO;;pi;;po;;pQ;;pc;;pdocument;;pV;;pi;;px;;pX;;pQ;;plength;;px;;pX;;px;;pz;;pQ;;px;;pV;;pz;;phref;;pz;;pO;;pO;;pv;;po;;pi;;pO;;pc;;pdocument;;pQ;;pi;;pV;;pQ;;pO;;pinnerHTML;;pV;;pV;;po;;pV;;pV;;pQ;;pO;;pinnerHTML;;po;;pC;;premove;;pI;;pI;;pparentNode;;pI;;pC;;pdisable;;pI;;pI;;pdisabled;;pC;;penable;;pI;;pI;;pdisabled;;pC;;padd;;pC;;pO;;pc;;pdocument;;pQ;;pc;;pdocument;;pQ;;prel;;pQ;;ptype;;pQ;;phref;;pi;;pO;;pQ;;pC;;pexists;;plength;;pC;;pcount;;plength;;pC;;pI;;pI;;pI;;pl;;pI;;pcss$;;pi;;pI;;pI;;pl;;pl;;pdocument;;pl;;pwindow;;pI;;pl;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="color2rgb;JS:Function Name;4249336900;f11928;10;12437;10;;;;vpos;;v;;a;;r;;d11949,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="getBodyScrollLeft;JS:Function Name;4249336900;f11152;10;11321;10;;;;vpos;;v;;a;;r;;d11181,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="getBodyScrollTop;JS:Function Name;4249336900;f10981;10;11147;10;;;;vpos;;v;;a;;r;;d11009,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="getClientHeight;JS:Function Name;4249336900;f10493;10;10732;10;;;;vpos;;v;;a;;r;;d10520,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="getClientWidth;JS:Function Name;4249336900;f10017;10;10250;10;;;;vpos;;v;;a;;r;;d10043,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="getCursorPosition;JS:Function Name;4249336900;f11453;10;11677;10;;;;vpos;;v;;a;;r;;d11482,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="getOffset;JS:Function Name;4249336900;f9276;10;10012;10;;;;vpos;;v;;a;;r;;d9297,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="getOffsetHeight;JS:Function Name;4249336900;f10737;10;10976;10;;;;vpos;;v;;a;;r;;d10764,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="getOffsetWidth;JS:Function Name;4249336900;f10255;10;10488;10;;;;vpos;;v;;a;;r;;d10281,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="getParent;JS:Function Name;4249336900;f9064;10;9271;10;;;;vpos;;v;;a;;r;;d9089,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;pI;;pl;;p;;x;;x;;x;;n">
</treenode>
<treenode node="getWindow;JS:Function Name;4249336900;f11326;10;11448;10;;;;vpos;;v;;a;;r;;d11347,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="hasTagName;JS:Function Name;4249336900;f11682;10;11923;10;;;;vpos;;v;;a;;r;;d11706,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;pI;;p;;x;;x;;n">
</treenode>
<treenode node="setOpacity;JS:Function Name;4249336900;f12442;10;12592;10;;;;vpos;;v;;a;;r;;d12466,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;pI;;p;;x;;x;;n">
</treenode>
</treenode>
<treenode node="DateDisabled;JS:JS Var Name;502113102;f4;0;16;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="DoW;JS:JS Var Name;2034475571;f5;1710;8;1710;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the number of the week in year, as defined in ISO 8601.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="DocumentCookie;JS:JS Var Name;4249336900;f22758;10;23578;10;;;;vposString;;v;;a;;r;;d22787,10;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="Date;JS:Function Name;4249336900;f22980;10;22985;10;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lQ;;p;;x;;n">
</treenode>
<treenode node="del;JS:Function Name;4249336900;f23428;10;23431;10;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lO;;p;;x;;n">
</treenode>
<treenode node="escape;JS:Function Name;4249336900;f22875;10;22881;10;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lO;;p;;x;;n">
</treenode>
<treenode node="hasOwnProperty;JS:Function Name;4249336900;f23408;10;23422;10;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lO;;p;;x;;n">
</treenode>
<treenode node="isSet;JS:Function Name;4249336900;f23196;10;23201;10;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="split;JS:Function Name;4249336900;f23472;10;23477;10;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="toGMTString;JS:Function Name;4249336900;f22963;10;22974;10;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="unescape;JS:Function Name;4249336900;f23557;10;23565;10;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l_;;p;;x;;n">
</treenode>
</treenode>
<treenode node="DocumentSelection;JS:JS Var Name;4249336900;f23579;10;25683;10;;;;vposString;;v;;a;;r;;d23611,10;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="Error;JS:Function Name;4249336900;f24107;10;24113;10;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;ll;;pv;;p;;x;;x;;n">
</treenode>
<treenode node="_;JS:Function Name;4249336900;f24737;10;24738;10;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lI;;pC;;pe;;pi;;pi;;pi;;pi;;pi;;pI;;pi;;pi;;pi;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="apply;JS:Function Name;4249336900;f24215;10;24220;10;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lO;;po;;p;;x;;x;;n">
</treenode>
<treenode node="c;JS:Function Name;4249336900;f24759;10;24760;10;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lI;;pV;;px;;pi;;pe;;pv;;pi;;pC;;pI;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="deleteSelection;JS:Function Name;4249336900;f25436;10;25451;10;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lI;;p;;x;;n">
</treenode>
<treenode node="getCursorPosition;JS:Function Name;4249336900;f25148;10;25165;10;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lI;;p;;x;;n">
</treenode>
<treenode node="getEnd;JS:Function Name;4249336900;f25173;10;25179;10;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lI;;p;;x;;n">
</treenode>
<treenode node="getSelection;JS:Function Name;4249336900;f25352;10;25364;10;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lI;;p;;x;;n">
</treenode>
<treenode node="getSelectionOffset;JS:Function Name;4249336900;f24317;10;24335;10;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lI;;p;;x;;n">
</treenode>
<treenode node="getStart;JS:Function Name;4249336900;f24691;10;24699;10;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lI;;pI;;p;;x;;x;;n">
</treenode>
<treenode node="indexOf;JS:Function Name;4249336900;f23846;10;23853;10;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lC;;ptype;;p;;x;;x;;n">
</treenode>
<treenode node="insertAtCursor;JS:Function Name;4249336900;f25194;10;25208;10;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lI;;pl;;po;;pI;;pl;;pI;;po;;p;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="module;JS:Function Name;4249336900;f25702;10;33804;10;;;;vposObject_;;v;;a;;r;;d25729,10;;b0,0;;m0;;e0;;i0;;o;;k;;lo;;p;;x;;n">
<treenode node="X;JS:Function Name;4249336900;f29229;10;33803;10;;;;vpos;;v;;a;;r;;d29527,10;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="setRange;JS:Function Name;4249336900;f25251;10;25259;10;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lI;;pe;;pl;;plength;;pe;;pl;;plength;;pI;;pI;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="toLowerCase;JS:Function Name;4249336900;f23752;10;23763;10;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="E;JS:JS Var Name;2467438104;f56012;12;56013;12;;123065571;f2510;0;2511;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="EM;JS:JS Var Name;4249336900;f14873;10;14875;10;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="EventTarget;JS:Function Name;4249336900;f17323;10;17834;10;;;;vpos;;v;;a;;r;;d17352,10;;b0,0;;m0;;e0;;i0;;o;;k;;lO;;pe;;pv;;pV;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="preventDefaultAction;JS:Function Name;4249336900;f17207;10;17260;10;;;;vpos;;v;;a;;r;;d17239,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="stopPropagationAction;JS:Function Name;4249336900;f17264;10;17319;10;;;;vpos;;v;;a;;r;;d17297,10;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="EU;JS:JS Var Name;4249336900;f17838;10;17840;10;;;;vposArray;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="F;JS:JS Var Name;123065571;f11466;0;11467;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="G;JS:JS Var Name;123065571;f12640;0;12641;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="H;JS:JS Var Name;123065571;f13011;0;13012;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="I;JS:JS Var Name;1046520607;f55;12;56;12;;2467438104;f51;12;51697;12;;681867362;f56;12;57;12;;2853556149;f98;12;1889;12;;783878664;f1585;0;1586;0;;3360416276;f494;0;495;0;;4240802933;f3300;0;3304;0;;822379780;f215;0;216;0;;1154420684;f216;0;217;0;;2070197285;f218;0;219;0;;1085219138;f223;0;1075;0;;3595929943;f222;0;749;0;;4249336900;f5286;10;5287;10;;2674831004;f807;12;808;12;;483840355;f1366;20;1367;20;;123065571;f40;0;41;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="addLayout;JS:Function Name;123065571;f3498;0;4217;0;;;;vpos;;v;;a;;r;;d3519,0;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="addLayoutList;JS:Function Name;123065571;f3385;0;3495;0;;;;vpos;;v;;a;;r;;d3409,0;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="attachInput;JS:Function Name;123065571;f9342;0;10161;0;;;;vpos;;v;;a;;r;;d9365,0;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="detachInput;JS:Function Name;123065571;f10164;0;10702;0;;;;vpos;;v;;a;;r;;d10186,0;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAttachedInput;JS:Function Name;123065571;f10705;0;10756;0;;;;vpos;;v;;a;;r;;d10732,0;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getLayoutCodes;JS:Function Name;123065571;f5138;0;5262;0;;;;vpos;;v;;a;;r;;d5163,0;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getLayouts;JS:Function Name;123065571;f4697;0;4813;0;;;;vpos;;v;;a;;r;;d4718,0;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="isEnabled;JS:Function Name;123065571;f11391;0;11421;0;;;;vpos;;v;;a;;r;;d11411,0;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="isOpen;JS:Function Name;123065571;f11303;0;11388;0;;;;vpos;;v;;a;;r;;d11320,0;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="isReady;JS:Function Name;123065571;f11424;0;11461;0;;;;vpos;;v;;a;;r;;d11442,0;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="setVisibleLayoutCodes;JS:Function Name;123065571;f4816;0;5135;0;;;;vpos;;v;;a;;r;;d4848,0;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="switchLayout;JS:Function Name;123065571;f4220;0;4694;0;;;;vpos;;v;;a;;r;;d4244,0;;b0,0;;m0;;e0;;i0;;o;;k;;li;;p;;x;;n">
</treenode>
<treenode node="toggle;JS:Function Name;123065571;f11204;0;11300;0;;;;vpos;;v;;a;;r;;d11227,0;;b0,0;;m0;;e0;;i0;;o;;k;;li;;pe;;piI;;p;;x;;x;;x;;n">
</treenode>
<treenode node="$VERSION$;JS:JS Var Name;123065571;f49;0;58;0;;;;vposString;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="IME;JS:JS Var Name;123065571;f12241;0;12244;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="css;JS:JS Var Name;123065571;f12245;0;12248;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="aduma;JS:JS Var Name;2467438104;f55948;12;55953;12;;;;vposString;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="close;JS:JS Var Name;123065571;f11049;0;11054;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="di;JS:JS Var Name;2467438104;f56000;12;56002;12;;;;vposString;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="du;JS:JS Var Name;2467438104;f55960;12;55962;12;;;;vposString;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="idu;JS:JS Var Name;2467438104;f55977;12;55980;12;;;;vposString;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="kadu;JS:JS Var Name;2467438104;f55988;12;55992;12;;;;vposString;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="open;JS:JS Var Name;123065571;f10759;0;10763;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="target;JS:JS Var Name;4249336900;f15948;10;15954;10;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="J;JS:JS Var Name;123065571;f13692;0;13693;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="K;JS:JS Var Name;2467438104;f52803;12;52895;12;;123065571;f2498;0;2499;0;;;;vposString;;v;;a;;r;;d52805,12;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="L;JS:JS Var Name;123065571;f14014;0;14015;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="M;JS:JS Var Name;123065571;f17317;0;17318;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="N;JS:JS Var Name;123065571;f16642;0;16643;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="O;JS:JS Var Name;1046520607;f1202;12;1729;12;;2467438104;f56786;12;56787;12;;2853556149;f3096;12;3097;12;;783878664;f703;0;704;0;;1971110298;f306;0;307;0;;3360416276;f239;0;240;0;;4240802933;f480;0;481;0;;2070197285;f42479;0;42646;0;;3595929943;f1337;0;1338;0;;2674831004;f1146;12;1147;12;;483840355;f2023;20;2024;20;;123065571;f120;0;121;0;;;;vposString;;v;;a;;r;;d1204,12;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="firstChild;JS:JS Var Name;483840355;f2332;20;2342;20;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="onmouseup;JS:JS Var Name;483840355;f2343;20;2352;20;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="id;JS:JS Var Name;483840355;f2058;20;2060;20;;;;vposString;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="innerHTML;JS:JS Var Name;483840355;f2166;20;2175;20;;;;vposString;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="layout;JS:JS Var Name;123065571;f12350;0;12356;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="skin;JS:JS Var Name;123065571;f20929;0;20933;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="src;JS:JS Var Name;2674831004;f1208;12;1211;12;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="style;JS:JS Var Name;483840355;f2085;20;2090;20;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="cssText;JS:JS Var Name;483840355;f2091;20;2098;20;;;;vposString;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="type;JS:JS Var Name;2674831004;f1183;12;1187;12;;;;vposString;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="P;JS:JS Var Name;123065571;f5267;0;5268;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="Q;JS:JS Var Name;1046520607;f1730;12;1993;12;;2467438104;f51711;12;51712;12;;783878664;f732;0;733;0;;1971110298;f310;0;345;0;;3360416276;f243;0;276;0;;4240802933;f691;0;692;0;;2070197285;f42647;0;42651;0;;1085219138;f1273;0;1274;0;;3595929943;f1486;0;1487;0;;2674831004;f1246;12;1247;12;;483840355;f2355;20;2356;20;;123065571;f157;0;158;0;;;;vposString;;v;;a;;r;;d1732,12;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="innerHTML;JS:JS Var Name;483840355;f2390;20;2399;20;;;;vposString;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="R;JS:JS Var Name;2467438104;f56259;12;56260;12;;123065571;f2524;0;2525;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="S;JS:JS Var Name;2467438104;f52698;12;52699;12;;4249336900;f15128;10;15129;10;;123065571;f2486;0;2487;0;;;;vposString;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="T;JS:JS Var Name;123065571;f2538;0;2539;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="U;JS:JS Var Name;123065571;f3295;0;3296;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="attachedInput;JS:JS Var Name;123065571;f13111;0;13124;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="contentWindow;JS:JS Var Name;123065571;f13125;0;13138;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="document;JS:JS Var Name;123065571;f13139;0;13147;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="body;JS:JS Var Name;123065571;f13148;0;13152;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="dir;JS:JS Var Name;123065571;f13153;0;13156;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="dir;JS:JS Var Name;123065571;f13180;0;13183;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="desk;JS:JS Var Name;123065571;f12187;0;12191;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="innerHTML;JS:JS Var Name;123065571;f12192;0;12201;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="style;JS:JS Var Name;123065571;f12713;0;12718;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="display;JS:JS Var Name;123065571;f12719;0;12726;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
</treenode>
<treenode node="keyboard;JS:JS Var Name;123065571;f10898;0;10906;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="innerHTML;JS:Function Name;123065571;f19115;0;19124;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lI;;p$VERSION$;;p;;x;;x;;n">
</treenode>
<treenode node="className;JS:JS Var Name;123065571;f12220;0;12229;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="id;JS:JS Var Name;123065571;f19083;0;19085;0;;;;vposString;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="parentNode;JS:JS Var Name;123065571;f10907;0;10917;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="nodeType;JS:JS Var Name;123065571;f10918;0;10926;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="style;JS:JS Var Name;123065571;f19046;0;19051;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="visibility;JS:JS Var Name;123065571;f19052;0;19062;0;;;;vposString;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="unselectable;JS:JS Var Name;123065571;f19017;0;19029;0;;;;vposString;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="langbox;JS:JS Var Name;123065571;f13275;0;13282;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="innerHTML;JS:JS Var Name;123065571;f13283;0;13292;0;;;;vposString;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="progressbar;JS:JS Var Name;123065571;f12663;0;12674;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="innerHTML;JS:JS Var Name;123065571;f12758;0;12767;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="style;JS:JS Var Name;123065571;f12675;0;12680;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="display;JS:JS Var Name;123065571;f12681;0;12688;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
</treenode>
</treenode>
<treenode node="V;JS:JS Var Name;1046520607;f2520;12;2521;12;;2467438104;f51738;12;51739;12;;783878664;f1183;0;1184;0;;4240802933;f3318;0;3319;0;;4249336900;f14923;10;14924;10;;2674831004;f612;12;613;12;;483840355;f892;20;893;20;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="src;JS:JS Var Name;483840355;f951;20;954;20;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="style;JS:JS Var Name;483840355;f1685;20;1690;20;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="left;JS:JS Var Name;483840355;f1705;20;1709;20;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="top;JS:JS Var Name;483840355;f1691;20;1694;20;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
</treenode>
<treenode node="VirtualKeyboard;JS:JS Var Name;2674831004;f28;12;299;12;;123065571;f5;0;20;0;;;;vposObject_;;v;;a;;r;;d58,12;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="Layout;JS:Function Name;123065571;f24784;0;24803;0;;;;vpos;;v;;a;;r;;d24801,0;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="setTimeout;JS:Function Name;2674831004;f182;12;192;12;;;;vpos;;v;;aObject_;;c;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    $Id: vk_loader.js 777 2011-06-17 17:17:48Z wingedfox $&#10;Keyboard loader&#10;This software is protected by patent No.2009611147 issued on 20.02.2009 by Russian Federal Service for Intellectual Property Patents and Trademarks.&#10;&lt;b&gt;author&lt;/b&gt;: Ilya Lebedev&#10;&lt;b&gt;copyright&lt;/b&gt;: 2006-2011 Ilya Lebedev &lt;ilya&#10;&lt;b&gt;lebedev&lt;/b&gt;: .net&gt;&#10;&lt;b&gt;version&lt;/b&gt;: $Rev: 777 $&#10;&lt;b&gt;lastchange&lt;/b&gt;: $Author: wingedfox $ $Date: 2011-06-17 21:17:48 +0400 (Пт., 17 июня 2011) $;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lwindow;;pstatus;;p;;x;;x;;n">
</treenode>
<treenode node="IME;JS:JS Var Name;123065571;f21021;0;24767;0;;;;vposObject_;;v;;a;;r;;d21039,0;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="V;JS:Function Name;123065571;f21657;0;21658;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="addEventListener;JS:Function Name;123065571;f21760;0;21776;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lc;;pi;;pblurHandler;;pX;;pi;;pprevPage;;pX;;pEM;;ppreventDefaultAction;;pX;;pEM;;pstopPropagationAction;;pz;;pi;;pnextPage;;pz;;pEM;;ppreventDefaultAction;;pz;;pEM;;pstopPropagationAction;;pZ;;pi;;ptoggleShowAll;;pZ;;pEM;;ppreventDefaultAction;;pZ;;pEM;;pstopPropagationAction;;pl;;pv;;pl;;pEM;;ppreventDefaultAction;;pl;;pEM;;ppreventDefaultAction;;p;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="appendChild;JS:Function Name;123065571;f21677;0;21688;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;ll;;p;;x;;n">
</treenode>
<treenode node="ceil;JS:Function Name;123065571;f23074;0;23078;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l_;;plength;;p_;;plength;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="createElement;JS:Function Name;123065571;f23824;0;23837;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="deleteSelection;JS:Function Name;123065571;f22073;0;22088;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lc;;p;;x;;n">
</treenode>
<treenode node="e;JS:Function Name;123065571;f22332;0;22333;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getAttachedInput;JS:Function Name;123065571;f21553;0;21569;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getElementsByTagName;JS:Function Name;123065571;f23541;0;23561;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getOffset;JS:Function Name;123065571;f22144;0;22153;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lc;;p;;x;;n">
</treenode>
<treenode node="getPage;JS:Function Name;123065571;f22621;0;22628;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="getParent;JS:Function Name;123065571;f23652;0;23661;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lx;;ptarget;;p;;x;;x;;n">
</treenode>
<treenode node="getSelection;JS:Function Name;123065571;f22035;0;22047;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lc;;p;;x;;n">
</treenode>
<treenode node="getSelectionOffset;JS:Function Name;123065571;f22203;0;22221;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lc;;p;;x;;n">
</treenode>
<treenode node="getWindow;JS:Function Name;123065571;f21582;0;21591;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lc;;p;;x;;n">
</treenode>
<treenode node="hide;JS:Function Name;123065571;f21881;0;21885;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="insertAtCursor;JS:Function Name;123065571;f23700;0;23714;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lc;;pX;;plastChild;;pnodeValue;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="isArray;JS:Function Name;123065571;f22300;0;22307;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lx;;p;;x;;n">
</treenode>
<treenode node="isNumber;JS:Function Name;123065571;f22393;0;22402;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lx;;p;;x;;n">
</treenode>
<treenode node="isUndefined;JS:Function Name;123065571;f23154;0;23165;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l_;;pw;;pZ;;p;;x;;x;;x;;n">
</treenode>
<treenode node="join;JS:Function Name;123065571;f23422;0;23426;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="max;JS:Function Name;123065571;f22444;0;22447;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lMath;;pO;;pMath;;p_;;plength;;pO;;p;;x;;x;;x;;x;;x;;x;;n">
</treenode>
<treenode node="preventDefault;JS:Function Name;123065571;f23752;0;23766;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="push;JS:Function Name;123065571;f23115;0;23119;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lZ;;p_;;pw;;pZ;;p;;x;;x;;x;;x;;n">
</treenode>
<treenode node="removeChild;JS:Function Name;123065571;f21637;0;21648;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;ll;;p;;x;;n">
</treenode>
<treenode node="removeEventListener;JS:Function Name;123065571;f21967;0;21986;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lc;;pi;;pblurHandler;;p;;x;;x;;x;;n">
</treenode>
<treenode node="setSuggestions;JS:Function Name;123065571;f21718;0;21732;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lx;;p;;x;;n">
</treenode>
<treenode node="stopPropagation;JS:Function Name;123065571;f23771;0;23786;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="toggleShowAll;JS:Function Name;123065571;f22905;0;22918;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="updatePosition;JS:Function Name;123065571;f21827;0;21841;0;;;;vpos;;v;;aObject_;;c;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lc;;pc;;p;;x;;x;;n">
</treenode>
</treenode>
<treenode node="Langs;JS:JS Var Name;123065571;f20996;0;21004;0;;;;vposObject_;;v;;a;;r;;d21002,0;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="W;JS:JS Var Name;2467438104;f55871;12;55872;12;;4249336900;f17100;10;17101;10;;123065571;f2478;0;2479;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="X;JS:JS Var Name;1046520607;f2792;12;2793;12;;2467438104;f51916;12;51917;12;;4240802933;f3366;0;3367;0;;2070197285;f42682;0;42683;0;;4249336900;f15025;10;15026;10;;123065571;f2462;0;2463;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="Y;JS:JS Var Name;2467438104;f56034;12;56035;12;;123065571;f3221;0;3222;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="html;JS:JS Var Name;123065571;f12169;0;12173;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="Z;JS:JS Var Name;2467438104;f56378;12;56379;12;;4249336900;f15720;10;15721;10;;483840355;f335;20;336;20;;123065571;f2470;0;2471;0;;;;vposArray;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="_;JS:JS Var Name;1046520607;f1994;12;2234;12;;2467438104;f51857;12;51858;12;;2853556149;f3207;12;3208;12;;783878664;f761;0;762;0;;3360416276;f277;0;360;0;;4240802933;f977;0;978;0;;2070197285;f42656;0;42657;0;;1085219138;f1286;0;1287;0;;3595929943;f1448;0;1449;0;;483840355;f565;20;566;20;;123065571;f170;0;171;0;;;;vposString;;v;;a;;r;;d1996,12;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="flags;JS:JS Var Name;783878664;f1040;0;1045;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="a;JS:JS Var Name;123065571;f6313;0;6314;0;;2034475571;f5;1599;6;1599;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="b;JS:JS Var Name;123065571;f15455;0;15456;0;;2034475571;f5;1600;6;1600;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="c;JS:JS Var Name;1046520607;f2235;12;2490;12;;2467438104;f52612;12;52613;12;;2853556149;f3225;12;3226;12;;783878664;f788;0;789;0;;2070197285;f42813;0;42814;0;;1085219138;f1391;0;1392;0;;3595929943;f1501;0;1502;0;;2674831004;f335;12;336;12;;483840355;f875;20;876;20;;123065571;f181;0;182;0;;;;vposString;;v;;a;;r;;d2237,12;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="cal;JS:JS Var Name;1882458433;f6;132;9;132;;;;vposCalendar;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="time24;JS:Function Name;1882458433;f6;136;12;136;;1882458433;f7;168;13;168;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lparams;;ptimeFormat;;p;;x;;x;;n">
</treenode>
<treenode node="getDateText;JS:JS Var Name;1882458433;f6;141;17;141;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="multiple;JS:JS Var Name;1882458433;f7;177;20;177;;;;vposObject_;;v;;a;;r;;d18,177;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="params;JS:JS Var Name;1882458433;f6;137;12;137;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="showsOtherMonths;JS:JS Var Name;1882458433;f6;134;22;134;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="showsTime;JS:JS Var Name;1882458433;f6;135;15;135;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="weekNumbers;JS:JS Var Name;1882458433;f6;138;17;138;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="yearStep;JS:JS Var Name;1882458433;f6;185;14;185;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="d;JS:JS Var Name;123065571;f8396;0;8397;0;;2034475571;f5;1598;6;1598;;1882458433;f8;179;9;179;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="dateEl;JS:JS Var Name;1882458433;f6;155;12;155;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="dateFmt;JS:JS Var Name;1882458433;f6;156;13;156;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="displayendtime;JS:JS Var Name;3301810409;f4;26;18;26;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ds;JS:JS Var Name;1882458433;f8;180;10;180;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="dy;JS:JS Var Name;2034475571;f5;1747;7;1747;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="e;JS:JS Var Name;1046520607;f2512;12;2513;12;;2467438104;f51729;12;51730;12;;2853556149;f3217;12;3218;12;;783878664;f841;0;842;0;;4240802933;f369;0;370;0;;2070197285;f42856;0;42857;0;;3595929943;f1454;0;1455;0;;4249336900;f14906;10;14907;10;;2674831004;f428;12;429;12;;483840355;f1454;20;1455;20;;123065571;f6369;0;6370;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="VK_bypass;JS:JS Var Name;123065571;f11742;0;11751;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="keyCode;JS:JS Var Name;123065571;f12032;0;12039;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="style;JS:JS Var Name;123065571;f17399;0;17404;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="left;JS:JS Var Name;123065571;f17433;0;17437;0;;;;vposString;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="position;JS:JS Var Name;123065571;f17405;0;17413;0;;;;vposString;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
</treenode>
<treenode node="enable_countdown;JS:JS Var Name;3301810409;f4;22;20;22;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="f;JS:JS Var Name;123065571;f9257;0;9258;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="g;JS:JS Var Name;123065571;f12101;0;12102;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="h;JS:JS Var Name;123065571;f12779;0;12780;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="hr;JS:JS Var Name;2034475571;f5;1602;7;1602;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="i;JS:JS Var Name;1046520607;f44;12;45;12;;2886761363;f44;12;45;12;;2467438104;f44;12;45;12;;681867362;f45;12;46;12;;2853556149;f45;12;46;12;;4022464103;f44;12;45;12;;1971110298;f349;0;350;0;;3360416276;f364;0;365;0;;4240802933;f269;0;270;0;;822379780;f204;0;205;0;;1154420684;f205;0;206;0;;2070197285;f207;0;208;0;;1085219138;f199;0;200;0;;3595929943;f200;0;201;0;;4249336900;f5433;10;5434;10;;2674831004;f316;12;317;12;;483840355;f16;20;17;20;;123065571;f5302;0;5303;0;;2034475571;f5;1601;6;1601;;1882458433;f10;95;11;95;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="activate;JS:Function Name;822379780;f18573;0;19152;0;;1154420684;f13277;0;13331;0;;2070197285;f225;0;279;0;;;;vpos;;v;;a;;r;;d18592,0;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="charProcessor;JS:Function Name;1046520607;f3036;12;3249;12;;2886761363;f1799;12;3106;12;;681867362;f2566;12;3387;12;;;;vpos;;v;;a;;r;;d3065,12;;b0,0;;m0;;e0;;i0;;o;;k;;le;;pv;;pV;;p;;x;;x;;x;;n">
</treenode>
<treenode node="parseHangul;JS:Function Name;2886761363;f1543;12;1796;12;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parseHangul=function(I)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    $Id: KR.js 643 2009-07-09 15:19:14Z wingedfox $&#10;Korean IME implementation&#10;This software is protected by patent No.2009611147 issued on 20.02.2009 by Russian Federal Service for Intellectual Property Patents and Trademarks.&#10;&lt;b&gt;author&lt;/b&gt;: Konstantin Wiolowan&#10;&lt;b&gt;copyright&lt;/b&gt;: 2007-2009 Konstantin Wiolowan &lt;wiolowan&#10;&lt;b&gt;mail&lt;/b&gt;: .ru&gt;&#10;&lt;b&gt;version&lt;/b&gt;: $Rev: 643 $&#10;&lt;b&gt;lastchange&lt;/b&gt;: $Author: wingedfox $ $Date: 2009-07-09 19:19:14 +0400 (Чт, 09 июл 2009) $;;d1566,12;;b0,0;;m0;;e0;;i0;;o;;k;;lI;;p;;x;;n">
</treenode>
<treenode node="processChar;JS:Function Name;2467438104;f52125;12;52607;12;;4022464103;f65;12;941;12;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    processChar=function(C,e)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    $Id: JP.js 706 2010-11-25 15:23:52Z wingedfox $&#10;Japanese IME implementation&#10;This software is protected by patent No.2009611147 issued on 20.02.2009 by Russian Federal Service for Intellectual Property Patents and Trademarks.&#10;&lt;b&gt;author&lt;/b&gt;: Konstantin Wiolowan&#10;&lt;b&gt;copyright&lt;/b&gt;: 2008-2009 Konstantin Wiolowan &lt;wiolowan&#10;&lt;b&gt;mail&lt;/b&gt;: .ru&gt;&#10;&lt;b&gt;version&lt;/b&gt;: $Rev: 706 $&#10;&lt;b&gt;lastchange&lt;/b&gt;: $Author: wingedfox $ $Date: 2010-11-25 18:23:52 +0300 (Чт, 25 ноя 2010) $;;d52150,12;;b0,0;;m0;;e0;;i0;;o;;k;;lC;;pe;;p;;x;;x;;n">
</treenode>
<treenode node="C2CC;JS:JS Var Name;2886761363;f934;12;980;12;;;;vposString;;v;;a;;r;;d939,12;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CC2C;JS:JS Var Name;2886761363;f983;12;1029;12;;;;vposString;;v;;a;;r;;d988,12;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="CV2C;JS:JS Var Name;2886761363;f895;12;899;12;;;;vposString;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="INPArr;JS:JS Var Name;4022464103;f53;12;59;12;;;;vposArray;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="Jamo;JS:JS Var Name;2886761363;f53;12;720;12;;;;vposArray;;v;;a;;r;;d58,12;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="P2PP;JS:JS Var Name;2886761363;f1382;12;1386;12;;;;vposArray;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PP2P;JS:JS Var Name;2886761363;f1032;12;1036;12;;;;vposArray;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="PP2PC;JS:JS Var Name;2886761363;f1099;12;1104;12;;;;vposArray;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="V2VV;JS:JS Var Name;2886761363;f788;12;792;12;;;;vposArray;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="VV2V;JS:JS Var Name;2886761363;f723;12;727;12;;;;vposArray;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="activate;JS:JS Var Name;123065571;f15266;0;15274;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="charProcessor;JS:JS Var Name;822379780;f19155;0;19168;0;;1154420684;f13334;0;13347;0;;2070197285;f282;0;295;0;;123065571;f15235;0;15248;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="dk;JS:JS Var Name;123065571;f15009;0;15014;0;;;;vposObject_;;v;;a;;r;;d15012,0;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="flags;JS:JS Var Name;2886761363;f1533;12;1538;12;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="innerHTML;JS:JS Var Name;4249336900;f19860;10;19869;10;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="keyCode;JS:JS Var Name;4249336900;f18392;10;18399;10;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="keys;JS:JS Var Name;123065571;f15322;0;15326;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="lastChild;JS:JS Var Name;123065571;f20177;0;20186;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="label;JS:JS Var Name;123065571;f20187;0;20192;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="remap;JS:JS Var Name;1046520607;f3022;12;3027;12;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    $Id: LA.js 643 2009-07-09 15:19:14Z wingedfox $&#10;Lakhota IME implementation&#10;This software is protected by patent No.2009611147 issued on 20.02.2009 by Russian Federal Service for Intellectual Property Patents and Trademarks.&#10;&lt;b&gt;author&lt;/b&gt;: Konstantin Wiolowan&#10;&lt;b&gt;copyright&lt;/b&gt;: 2008-2009 Konstantin Wiolowan &lt;wiolowan&#10;&lt;b&gt;mail&lt;/b&gt;: .ru&gt;&#10;&lt;b&gt;version&lt;/b&gt;: $Rev: 643 $&#10;&lt;b&gt;lastchange&lt;/b&gt;: $Author: wingedfox $ $Date: 2009-07-09 19:19:14 +0400 (Чт, 09 июл 2009) $;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="repeat;JS:JS Var Name;4249336900;f18381;10;18387;10;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="rtl;JS:JS Var Name;123065571;f15171;0;15174;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="iC;JS:JS Var Name;123065571;f14293;0;14295;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="iE;JS:JS Var Name;123065571;f14243;0;14245;0;;;;vposArray;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="iI;JS:JS Var Name;123065571;f5287;0;5289;0;;;;vposArray;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="className;JS:JS Var Name;123065571;f16055;0;16064;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="label;JS:JS Var Name;123065571;f13618;0;13623;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="selected;JS:JS Var Name;123065571;f13634;0;13642;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="value;JS:JS Var Name;123065571;f13558;0;13563;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="iK;JS:JS Var Name;123065571;f14226;0;14228;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="iO;JS:JS Var Name;123065571;f6115;0;6117;0;;;;vposArray;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="iQ;JS:JS Var Name;123065571;f13309;0;13311;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="iR;JS:JS Var Name;123065571;f14259;0;14261;0;;;;vposArray;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="iS;JS:JS Var Name;123065571;f14193;0;14195;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="iV;JS:JS Var Name;123065571;f14653;0;14655;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="iW;JS:JS Var Name;123065571;f14173;0;14175;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="iX;JS:JS Var Name;123065571;f14306;0;14308;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="iZ;JS:JS Var Name;123065571;f14536;0;14538;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="i_;JS:JS Var Name;123065571;f13321;0;13323;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ic;JS:JS Var Name;123065571;f14132;0;14134;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="id;JS:JS Var Name;123065571;f8988;0;8990;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ie;JS:JS Var Name;123065571;f14435;0;14437;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ii;JS:JS Var Name;123065571;f18065;0;18067;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ik;JS:JS Var Name;123065571;f14198;0;14200;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="il;JS:JS Var Name;123065571;f5293;0;5295;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="io;JS:JS Var Name;123065571;f6011;0;13259;0;;;;vposArray;;v;;a;;r;;d13257,0;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="selected;JS:Function Name;123065571;f20294;0;20302;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;lil;;pV;;p;;x;;x;;n">
</treenode>
<treenode node="innerHTML;JS:JS Var Name;123065571;f20275;0;20284;0;;;;vposArray;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="label;JS:JS Var Name;123065571;f13479;0;13484;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="value;JS:JS Var Name;123065571;f20263;0;20268;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="iq;JS:JS Var Name;123065571;f14235;0;14237;0;;;;vposArray;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ir;JS:JS Var Name;123065571;f14251;0;14253;0;;2034475571;f5;1746;7;1746;;;;vposArray;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="is;JS:JS Var Name;123065571;f14179;0;14181;0;;;;vposArray;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="it;JS:JS Var Name;123065571;f15063;0;15065;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="iv;JS:JS Var Name;123065571;f14523;0;14525;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="iw;JS:JS Var Name;123065571;f14666;0;14668;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ix;JS:JS Var Name;123065571;f14153;0;14155;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="iz;JS:JS Var Name;123065571;f14448;0;14450;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="j;JS:JS Var Name;123065571;f13192;0;13193;0;;2034475571;f12;1601;13;1601;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="k;JS:JS Var Name;2467438104;f52765;12;52766;12;;123065571;f2492;0;2493;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="l;JS:JS Var Name;1046520607;f685;12;739;12;;2467438104;f51698;12;51702;12;;2853556149;f1890;12;3035;12;;1971110298;f299;0;300;0;;3360416276;f232;0;233;0;;4240802933;f3305;0;3309;0;;2070197285;f350;0;351;0;;1085219138;f1076;0;1125;0;;3595929943;f750;0;1206;0;;4249336900;f3152;10;7617;10;;2674831004;f424;12;425;12;;483840355;f537;20;538;20;;123065571;f75;0;76;0;;;;vposString;;v;;a;;r;;d687,12;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="la;JS:JS Var Name;2467438104;f56554;12;56556;12;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="le;JS:JS Var Name;2467438104;f56614;12;56616;12;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="li;JS:JS Var Name;2467438104;f56574;12;56576;12;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="lo;JS:JS Var Name;2467438104;f56634;12;56636;12;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ltu;JS:JS Var Name;2467438104;f56720;12;56723;12;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="lu;JS:JS Var Name;2467438104;f56594;12;56596;12;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="lya;JS:JS Var Name;2467438104;f56654;12;56657;12;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="lyo;JS:JS Var Name;2467438104;f56698;12;56701;12;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="lyu;JS:JS Var Name;2467438104;f56676;12;56679;12;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="m;JS:JS Var Name;123065571;f16927;0;16928;0;;2034475571;f5;1597;6;1597;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="maxthid;JS:JS Var Name;1176135291;f4;33;11;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    max text history index;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="min;JS:JS Var Name;2034475571;f5;1603;8;1603;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="month;JS:JS Var Name;2034475571;f12;1689;17;1689;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ms;JS:JS Var Name;2034475571;f5;1712;7;1712;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="msg_endtime;JS:JS Var Name;3301810409;f4;24;15;24;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="mustCreate;JS:JS Var Name;1882458433;f6;157;16;157;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="n;JS:JS Var Name;123065571;f15932;0;15933;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="now;JS:JS Var Name;2034475571;f5;1701;8;1701;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the number of day in the year.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="o;JS:JS Var Name;1046520607;f740;12;1201;12;;2467438104;f56740;12;56741;12;;2853556149;f3036;12;3059;12;;783878664;f171;0;172;0;;1971110298;f301;0;302;0;;3360416276;f234;0;235;0;;4240802933;f315;0;316;0;;2070197285;f7379;0;7380;0;;1085219138;f1162;0;1163;0;;3595929943;f1207;0;1300;0;;2674831004;f841;12;842;12;;483840355;f1391;20;1392;20;;123065571;f106;0;107;0;;;;vposString;;v;;a;;r;;d742,12;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="p;JS:JS Var Name;123065571;f3376;0;3377;0;;;;vposString;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="pm;JS:JS Var Name;2034475571;f5;1745;7;1745;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="posEnd;JS:JS Var Name;1176135291;f4;48;10;48;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    selection end;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="posStart;JS:JS Var Name;1176135291;f4;43;12;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    selection start;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="q;JS:JS Var Name;2467438104;f52896;12;52897;12;;123065571;f2504;0;2505;0;;;;vposArray;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="r;JS:JS Var Name;2467438104;f55837;12;55838;12;;123065571;f2518;0;2519;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="re;JS:JS Var Name;2034475571;f5;1787;7;1787;;;;vposRegExp;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="remaining_time;JS:JS Var Name;3301810409;f4;23;18;23;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="ret;JS:JS Var Name;123065571;f12051;0;12054;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="s;JS:JS Var Name;2467438104;f52661;12;52662;12;;4249336900;f15124;10;15125;10;;123065571;f2482;0;2483;0;;2034475571;f5;1743;6;1743;;;;vposString;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="sec;JS:JS Var Name;2034475571;f5;1751;8;1751;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="sre;JS:JS Var Name;3360416276;f660;0;663;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="start_time;JS:JS Var Name;3301810409;f4;25;14;25;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="str;JS:JS Var Name;2034475571;f3;1796;6;1796;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="t;JS:JS Var Name;123065571;f2532;0;2533;0;;2034475571;f7;1660;8;1660;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="text_history;JS:JS Var Name;1176135291;f4;23;16;23;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    save the text history for undo/redo functions;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="then;JS:JS Var Name;2034475571;f5;1702;9;1702;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="thid;JS:JS Var Name;1176135291;f4;28;8;28;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    current text history index;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="time;JS:JS Var Name;2034475571;f5;1703;9;1703;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="time_diff;JS:JS Var Name;3301810409;f4;28;13;28;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="timeout_logout;JS:JS Var Name;3301810409;f4;27;18;27;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="tmp;JS:JS Var Name;2034475571;f5;1729;8;1729;;1882458433;f5;94;8;94;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set only the year, month, date parts (keep existing time);;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="today;JS:JS Var Name;2034475571;f5;1595;10;1595;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Constants used for time computations;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="triggerEl;JS:JS Var Name;1882458433;f5;153;14;153;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="txtsel;JS:JS Var Name;1176135291;f4;38;10;38;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    current selection (for IE only);;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="u;JS:JS Var Name;123065571;f3232;0;3233;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="codeFilter;JS:JS Var Name;123065571;f3260;0;3270;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="codes;JS:JS Var Name;123065571;f3249;0;3257;0;;;;vposObject_;;v;;a;;r;;d3255,0;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="hash;JS:JS Var Name;123065571;f3239;0;3246;0;;;;vposObject_;;v;;a;;r;;d3244,0;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="options;JS:JS Var Name;123065571;f3278;0;13272;0;;;;vposObject_;;v;;a;;r;;d13270,0;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="v;JS:JS Var Name;2467438104;f51797;12;51798;12;;783878664;f859;0;860;0;;4240802933;f523;0;524;0;;2070197285;f42702;0;42703;0;;4249336900;f14915;10;14916;10;;2674831004;f452;12;453;12;;483840355;f1609;20;1610;20;;123065571;f358;0;359;0;;;;vposArray;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="ALT;JS:JS Var Name;123065571;f16326;0;16329;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="SHIFT;JS:JS Var Name;123065571;f16259;0;16264;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
<treenode node="w;JS:JS Var Name;4249336900;f15982;10;15983;10;;123065571;f2474;0;2475;0;;2034475571;f5;1742;6;1742;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="wn;JS:JS Var Name;2034475571;f5;1741;7;1741;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Prints the date in a string according to the given format.;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="x;JS:JS Var Name;1046520607;f2582;12;2583;12;;2467438104;f51967;12;51968;12;;783878664;f1959;0;1960;0;;4240802933;f3322;0;3323;0;;2070197285;f42709;0;42710;0;;4249336900;f14970;10;14971;10;;483840355;f35;20;36;20;;123065571;f428;0;429;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="style;JS:JS Var Name;483840355;f600;20;605;20;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
<treenode node="left;JS:JS Var Name;483840355;f648;20;652;20;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="top;JS:JS Var Name;483840355;f634;20;637;20;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="visibility;JS:JS Var Name;483840355;f606;20;616;20;;;;vposString;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</treenode>
</treenode>
<treenode node="y;JS:JS Var Name;123065571;f2552;0;2553;0;;2034475571;f5;1596;6;1596;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="year;JS:JS Var Name;2034475571;f5;1688;9;1688;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the number of days in the current month;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
<treenode node="z;JS:JS Var Name;1046520607;f2863;12;2864;12;;2467438104;f56343;12;56344;12;;2070197285;f42817;0;42818;0;;4249336900;f15206;10;15207;10;;123065571;f2466;0;2467;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e0;;i0;;o;;k;;l;;n">
</treenode>
</jstree>
<pythontree>
</pythontree>
</codestructure>